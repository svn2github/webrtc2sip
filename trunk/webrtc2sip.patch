Index: Makefile.am
===================================================================
--- Makefile.am	(revision 9737)
+++ Makefile.am	(working copy)
@@ -19,7 +19,8 @@
 
 # The Makefiles for these don't separate SSL stuff yet...
 if USE_SSL
-SUBDIRS += reTurn
+# By Mamadou: Do not enable reTurn
+#SUBDIRS += reTurn reTurn/client
 if BUILD_RECON
 SUBDIRS += reflow
 SUBDIRS += resip/recon
Index: reSIProcate_9_0.sln
===================================================================
--- reSIProcate_9_0.sln	(revision 9737)
+++ reSIProcate_9_0.sln	(working copy)
@@ -53,8 +53,6 @@
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "ares", "rutil\dns\ares\ares_9_0.vcproj", "{96CD935E-1951-43B8-AF75-F1C06B3778C1}"
 EndProject
-Project("{54435603-DBB4-11D2-8724-00A0C9A8B90C}") = "ReproSetup", "repro\WinSetup\Setup_9_0.vdproj", "{02954DA6-5079-4717-BC3D-B3ACA815CFED}"
-EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "reprolib", "repro\reprolib_9_0.vcproj", "{31B0654F-E08E-405F-909F-80F86CB14B9E}"
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "basicClient", "resip\dum\test\basicClient_9_0.vcproj", "{5973C598-5CB7-4724-A1EB-EBE3D9F84888}"
@@ -165,14 +163,6 @@
 		{96CD935E-1951-43B8-AF75-F1C06B3778C1}.SSL-Debug|Win32.Build.0 = Debug|Win32
 		{96CD935E-1951-43B8-AF75-F1C06B3778C1}.SSL-Release|Win32.ActiveCfg = Release|Win32
 		{96CD935E-1951-43B8-AF75-F1C06B3778C1}.SSL-Release|Win32.Build.0 = Release|Win32
-		{02954DA6-5079-4717-BC3D-B3ACA815CFED}.Debug|Win32.ActiveCfg = Debug
-		{02954DA6-5079-4717-BC3D-B3ACA815CFED}.Debug|Win32.Build.0 = Debug
-		{02954DA6-5079-4717-BC3D-B3ACA815CFED}.Release|Win32.ActiveCfg = Release
-		{02954DA6-5079-4717-BC3D-B3ACA815CFED}.Release|Win32.Build.0 = Release
-		{02954DA6-5079-4717-BC3D-B3ACA815CFED}.SSL-Debug|Win32.ActiveCfg = Debug
-		{02954DA6-5079-4717-BC3D-B3ACA815CFED}.SSL-Debug|Win32.Build.0 = Debug
-		{02954DA6-5079-4717-BC3D-B3ACA815CFED}.SSL-Release|Win32.ActiveCfg = Release
-		{02954DA6-5079-4717-BC3D-B3ACA815CFED}.SSL-Release|Win32.Build.0 = Release
 		{31B0654F-E08E-405F-909F-80F86CB14B9E}.Debug|Win32.ActiveCfg = Debug|Win32
 		{31B0654F-E08E-405F-909F-80F86CB14B9E}.Debug|Win32.Build.0 = Debug|Win32
 		{31B0654F-E08E-405F-909F-80F86CB14B9E}.Release|Win32.ActiveCfg = Release|Win32
Index: repro/AclStore.cxx
===================================================================
--- repro/AclStore.cxx	(revision 9737)
+++ repro/AclStore.cxx	(working copy)
@@ -498,8 +498,8 @@
 bool
 AclStore::isRequestTrusted(const SipMessage& request)
 {
-   bool trusted = false;
-   Tuple source = request.getSource();
+	Tuple source = request.getSource();
+	bool trusted = (source.getType() == resip::WS);
    
    // check if the request came over a secure channel and sucessfully authenticated 
    // (ex: TLS or DTLS)
Index: repro/RRDecorator.cxx
===================================================================
--- repro/RRDecorator.cxx	(revision 9737)
+++ repro/RRDecorator.cxx	(working copy)
@@ -171,9 +171,12 @@
       InfoLog(<< "Adding outbound Record-Route: " << rt);
    }
 
-   routes->front().uri().param(p_drr);
-   routes->push_front(rt);
-   ++mAddedRecordRoute;
+   if(routes->size() > 0){
+		routes->front().uri().param(p_drr);
+   }
+   
+	routes->push_front(rt);
+	++mAddedRecordRoute;
 }
 
 void 
Index: repro/ReproRunner.cxx
===================================================================
--- repro/ReproRunner.cxx	(revision 9737)
+++ repro/ReproRunner.cxx	(working copy)
@@ -1,1352 +1,1358 @@
-#if defined(HAVE_CONFIG_H)
-#include "config.h"
-#endif
-
-#include "rutil/Log.hxx"
-#include "rutil/Logger.hxx"
-#include "rutil/DnsUtil.hxx"
-#include "rutil/dns/DnsStub.hxx"
-#include "rutil/GeneralCongestionManager.hxx"
-
-#include "resip/stack/SipStack.hxx"
-#include "resip/stack/Compression.hxx"
-#include "resip/stack/EventStackThread.hxx"
-#include "resip/stack/InteropHelper.hxx"
-#include "resip/stack/ConnectionManager.hxx"
-
-#include "resip/dum/InMemorySyncRegDb.hxx"
-#include "resip/dum/MasterProfile.hxx"
-#include "resip/dum/DialogUsageManager.hxx"
-#include "resip/dum/DumThread.hxx"
-#include "resip/dum/TlsPeerAuthManager.hxx"
-
-#include "repro/AsyncProcessorWorker.hxx"
-#include "repro/ReproRunner.hxx"
-#include "repro/Proxy.hxx"
-#include "repro/ProxyConfig.hxx"
-#include "repro/BerkeleyDb.hxx"
-#include "repro/Dispatcher.hxx"
-#include "repro/UserAuthGrabber.hxx"
-#include "repro/ProcessorChain.hxx"
-#include "repro/ReproVersion.hxx"
-#include "repro/WebAdmin.hxx"
-#include "repro/WebAdminThread.hxx"
-#include "repro/Registrar.hxx"
-#include "repro/ReproServerAuthManager.hxx"
-#include "repro/RegSyncClient.hxx"
-#include "repro/RegSyncServer.hxx"
-#include "repro/RegSyncServerThread.hxx"
-#include "repro/CommandServer.hxx"
-#include "repro/CommandServerThread.hxx"
-#include "repro/monkeys/IsTrustedNode.hxx"
-#include "repro/monkeys/AmIResponsible.hxx"
-#include "repro/monkeys/DigestAuthenticator.hxx"
-#include "repro/monkeys/LocationServer.hxx"
-#include "repro/monkeys/RecursiveRedirect.hxx"
-#include "repro/monkeys/SimpleStaticRoute.hxx"
-#include "repro/monkeys/StaticRoute.hxx"
-#include "repro/monkeys/StrictRouteFixup.hxx"
-#include "repro/monkeys/OutboundTargetHandler.hxx"
-#include "repro/monkeys/QValueTargetHandler.hxx"
-#include "repro/monkeys/SimpleTargetHandler.hxx"
-#include "repro/monkeys/GeoProximityTargetSorter.hxx"
-#include "repro/monkeys/RequestFilter.hxx"
-#include "repro/monkeys/MessageSilo.hxx"
-#include "repro/monkeys/CertificateAuthenticator.hxx"
-
-#if defined(USE_SSL)
-#include "repro/stateAgents/CertServer.hxx"
-#include "resip/stack/ssl/Security.hxx"
-#endif
-
-#if defined(USE_MYSQL)
-#include "repro/MySqlDb.hxx"
-#endif
-
-#include "rutil/WinLeakCheck.hxx"
-
-#define RESIPROCATE_SUBSYSTEM resip::Subsystem::REPRO
-
-using namespace resip;
-using namespace repro;
-using namespace std;
-
-class ReproLogger : public ExternalLogger
-{
-public:
-   virtual ~ReproLogger() {}
-   /** return true to also do default logging, false to supress default logging. */
-   virtual bool operator()(Log::Level level,
-                           const Subsystem& subsystem, 
-                           const Data& appName,
-                           const char* file,
-                           int line,
-                           const Data& message,
-                           const Data& messageWithHeaders)
-   {
-      // Log any errors to the screen 
-      if(level <= Log::Err)
-      {
-         resipCout << messageWithHeaders << endl;
-      }
-      return true;
-   }
-};
-ReproLogger g_ReproLogger;
-
-ReproRunner::ReproRunner()
-   : mRunning(false)
-   , mRestarting(false)
-   , mThreadedStack(false)
-   , mSipAuthDisabled(false)
-   , mUseV4(true)
-   , mUseV6 (false)
-   , mRegSyncPort(0)
-   , mProxyConfig(0)
-   , mFdPollGrp(0)
-   , mAsyncProcessHandler(0)
-   , mSipStack(0)
-   , mStackThread(0)
-   , mAbstractDb(0)
-   , mRegistrationPersistenceManager(0)
-   , mAuthRequestDispatcher(0)
-   , mAsyncProcessorDispatcher(0)
-   , mMonkeys(0)
-   , mLemurs(0)
-   , mBaboons(0)
-   , mProxy(0)
-   , mWebAdmin(0)
-   , mWebAdminThread(0)
-   , mRegistrar(0)
-   , mDum(0)
-   , mDumThread(0)
-   , mCertServer(0)
-   , mRegSyncClient(0)
-   , mRegSyncServerV4(0)
-   , mRegSyncServerV6(0)
-   , mRegSyncServerThread(0)
-   , mCommandServerV4(0)
-   , mCommandServerV6(0)
-   , mCommandServerThread(0)
-   , mCongestionManager(0)
-{
-}
-
-ReproRunner::~ReproRunner()
-{
-   if(mRunning) shutdown();
-}
-
-bool
-ReproRunner::run(int argc, char** argv)
-{
-   if(mRunning) return false;
-
-   if(!mRestarting)
-   {
-      // Store original arc and argv - so we can reuse them on restart request
-      mArgc = argc;
-      mArgv = argv;
-   }
-
-   // Parse command line and configuration file
-   assert(!mProxyConfig);
-   Data defaultConfigFilename("repro.config");
-   try
-   {
-      mProxyConfig = new ProxyConfig(mArgc, mArgv, defaultConfigFilename);
-   }
-   catch(BaseException& ex)
-   {
-      std::cerr << "Error parsing configuration: " << ex << std::endl;
-      return false;
-   }
-
-   // Non-Windows server process stuff
-   if(!mRestarting)
-   {
-      setPidFile(mProxyConfig->getConfigData("PidFile", "", true));
-      if(mProxyConfig->getConfigBool("Daemonize", false))
-      {
-         daemonize();
-      }
-   }
-
-   // Initialize resip logger
-   GenericLogImpl::MaxByteCount = mProxyConfig->getConfigUnsignedLong("LogFileMaxBytes", 5242880 /*5 Mb */);
-   Data loggingType = mProxyConfig->getConfigData("LoggingType", "cout", true);
-   Log::initialize(loggingType, 
-                   mProxyConfig->getConfigData("LogLevel", "INFO", true), 
-                   mArgv[0], 
-                   mProxyConfig->getConfigData("LogFilename", "repro.log", true).c_str(),
-                   isEqualNoCase(loggingType, "file") ? &g_ReproLogger : 0); // if logging to file then write WARNINGS, and Errors to console still
-
-   InfoLog( << "Starting repro version " << VersionUtils::instance().releaseVersion() << "...");
-
-   // Create SipStack and associated objects
-   if(!createSipStack())
-   {
-      return false;
-   }
-
-   // Create datastore
-   if(!createDatastore())
-   {
-      return false;
-   }
-
-   // Create DialogUsageManager that handles ServerRegistration,
-   // and potentially certificate subscription server
-   createDialogUsageManager();
-
-   // Create the Proxy and associate objects
-   if(!createProxy())
-   {
-      return false;
-   }
-
-   // Create HTTP WebAdmin and Thread
-   if(!createWebAdmin())
-   {
-      return false;
-   }
-
-   // Create reg sync components if required
-   createRegSync();
-
-   // Create command server if required
-   if(!mRestarting)
-   {
-      createCommandServer();
-   }
-
-   // Make it all go - startup all threads
-   mThreadedStack = mProxyConfig->getConfigBool("ThreadedStack", true);
-   if(mThreadedStack)
-   {
-      // If configured, then start the sub-threads within the stack
-      mSipStack->run();
-   }
-   mStackThread->run();
-   if(mDumThread)
-   {
-      mDumThread->run();
-   }
-   mProxy->run();
-   if(mWebAdminThread)
-   {
-      mWebAdminThread->run();
-   }
-   if(!mRestarting && mCommandServerThread)
-   {
-      mCommandServerThread->run();
-   }
-   if(mRegSyncServerThread)
-   {
-      mRegSyncServerThread->run();
-   }
-   if(mRegSyncClient)
-   {
-      mRegSyncClient->run();
-   }
-
-   mRunning = true;
-
-   return true;
-}
-
-void 
-ReproRunner::shutdown()
-{
-   if(!mRunning) return;
-
-   // Tell all threads to shutdown
-   if(mWebAdminThread)
-   {
-      mWebAdminThread->shutdown();
-   }
-   if(mDumThread)
-   {
-      mDumThread->shutdown();
-   }
-   mProxy->shutdown();
-   mStackThread->shutdown();
-   if(!mRestarting && mCommandServerThread)  // leave command server running if we are restarting
-   {
-      mCommandServerThread->shutdown();
-   }
-   if(mRegSyncServerThread)
-   {
-      mRegSyncServerThread->shutdown();
-   }
-   if(mRegSyncClient)
-   {
-      mRegSyncClient->shutdown();
-   }
-
-   // Wait for all threads to shutdown, and destroy objects
-   mProxy->join();
-   if(mThreadedStack)
-   {
-      mSipStack->shutdownAndJoinThreads();
-   }
-   mStackThread->join();
-   if(mWebAdminThread) 
-   {
-      mWebAdminThread->join();
-   }
-   if(mDumThread)
-   {
-      mDumThread->join();
-   }
-   if(mAuthRequestDispatcher)
-   {
-      // Both proxy and dum threads are down at this point, we can 
-      // destroy the authRequest dispatcher and associated threads now
-      delete mAuthRequestDispatcher;
-      mAuthRequestDispatcher = 0;
-   }
-   if(mAsyncProcessorDispatcher)
-   {
-      // Both proxy and dum threads are down at this point, we can 
-      // destroy the async processor dispatcher and associated threads now
-      delete mAsyncProcessorDispatcher;
-      mAsyncProcessorDispatcher = 0;
-   }
-   if(!mRestarting && mCommandServerThread)  // we leave command server running during restart
-   {
-      mCommandServerThread->join();
-   }
-   if(mRegSyncServerThread)
-   {
-      mRegSyncServerThread->join();
-   }
-   if(mRegSyncClient)
-   {
-      mRegSyncClient->join();
-   }
-
-   mSipStack->setCongestionManager(0);
-
-   cleanupObjects();
-   mRunning = false;
-}
-
-void
-ReproRunner::restart()
-{
-   if(!mRunning) return;
-   mRestarting = true;
-   shutdown();
-   run(0, 0);
-   mRestarting = false;
-}
-
-void
-ReproRunner::cleanupObjects()
-{
-   delete mCongestionManager; mCongestionManager = 0;
-   if(!mRestarting)
-   {
-      // We leave command server running during restart
-      delete mCommandServerThread; mCommandServerThread = 0;
-      delete mCommandServerV6; mCommandServerV6 = 0;
-      delete mCommandServerV4; mCommandServerV4 = 0;
-   }
-   delete mRegSyncServerThread; mRegSyncServerThread = 0;
-   delete mRegSyncServerV6; mRegSyncServerV6 = 0;
-   delete mRegSyncServerV4; mRegSyncServerV4 = 0;
-   delete mRegSyncClient; mRegSyncClient = 0;
-#if defined(USE_SSL)
-   delete mCertServer; mCertServer = 0;
-#endif
-   delete mDumThread; mDumThread = 0;
-   delete mDum; mDum = 0;
-   delete mRegistrar; mRegistrar = 0;
-   delete mWebAdminThread; mWebAdminThread = 0;
-   delete mWebAdmin; mWebAdmin = 0;
-   delete mProxy; mProxy = 0;
-   delete mBaboons; mBaboons = 0;
-   delete mLemurs; mLemurs = 0;
-   delete mMonkeys; mMonkeys = 0;
-   delete mAuthRequestDispatcher; mAuthRequestDispatcher = 0;
-   delete mAsyncProcessorDispatcher; mAsyncProcessorDispatcher = 0;
-   if(!mRestarting) 
-   {
-      // If we are restarting then leave the In Memory Registration database intact
-      delete mRegistrationPersistenceManager; mRegistrationPersistenceManager = 0;
-   }
-   delete mAbstractDb; mAbstractDb = 0;
-   delete mStackThread; mStackThread = 0;
-   delete mSipStack; mSipStack = 0;
-   delete mAsyncProcessHandler; mAsyncProcessHandler = 0;
-   delete mFdPollGrp; mFdPollGrp = 0;
-   delete mProxyConfig; mProxyConfig = 0;
-}
-
-bool
-ReproRunner::createSipStack()
-{
-   // Override T1 timer if configured to do so
-   unsigned long overrideT1 = mProxyConfig->getConfigInt("TimerT1", 0);
-   if(overrideT1)
-   {
-      WarningLog(<< "Overriding T1! (new value is " << 
-               overrideT1 << ")");
-      resip::Timer::resetT1(overrideT1);
-   }
-
-   // Create Security (TLS / Certificates) and Compression (SigComp) objects if
-   // pre-precessor defines are enabled
-   Security* security = 0;
-   Compression* compression = 0;
-#ifdef USE_SSL
-#ifdef WIN32
-   Data certPath("C:\\sipCerts");
-#else 
-   Data certPath(getenv("HOME"));
-   certPath += "/.sipCerts";
-#endif
-   mProxyConfig->getConfigValue("CertificatePath", certPath);
-   security = new Security(certPath);
-   Data caDir;
-   mProxyConfig->getConfigValue("CADirectory", caDir);
-   if(!caDir.empty())
-   {
-      security->addCADirectory(caDir);
-   }
-   Data caFile;
-   mProxyConfig->getConfigValue("CAFile", caFile);
-   if(!caFile.empty())
-   {
-      security->addCAFile(caFile);
-   }
-#endif
-
-#ifdef USE_SIGCOMP
-   compression = new Compression(Compression::DEFLATE);
-#endif
-
-   // Create EventThreadInterruptor used to wake up the stack for 
-   // for reasons other than an Fd signalling
-   assert(!mFdPollGrp);
-   mFdPollGrp = FdPollGrp::create();
-   assert(!mAsyncProcessHandler);
-   mAsyncProcessHandler = new EventThreadInterruptor(*mFdPollGrp);
-
-   // Set Flags that will enable/disable IPv4 and/or IPv6, based on 
-   // configuration and pre-processor flags
-   mUseV4 = !mProxyConfig->getConfigBool("DisableIPv4", false);
-#ifdef USE_IPV6
-   mUseV6 = mProxyConfig->getConfigBool("EnableIPv6", true);
-#else
-   bool useV6 = false;
-#endif
-   if (mUseV4) InfoLog (<< "V4 enabled");
-   if (mUseV6) InfoLog (<< "V6 enabled");
-
-   // Build DNS Server list from config
-   DnsStub::NameserverList dnsServers;
-   std::vector<resip::Data> dnsServersConfig;
-   mProxyConfig->getConfigValue("DNSServers", dnsServersConfig);
-   for(std::vector<resip::Data>::iterator it = dnsServersConfig.begin(); it != dnsServersConfig.end(); it++)
-   {
-      if((mUseV4 && DnsUtil::isIpV4Address(*it)) || (mUseV6 && DnsUtil::isIpV6Address(*it)))
-      {
-         InfoLog(<< "Using DNS Server from config: " << *it);
-         dnsServers.push_back(Tuple(*it, 0, UNKNOWN_TRANSPORT).toGenericIPAddress());
-      }
-   }
-
-   // Create the SipStack Object
-   assert(!mSipStack);
-   mSipStack = new SipStack(security,
-                            dnsServers,
-                            mAsyncProcessHandler,
-                            /*stateless*/false,
-                            /*socketFunc*/0,
-                            compression,
-                            mFdPollGrp);
-
-   // Set any enum suffixes from configuration
-   std::vector<Data> enumSuffixes;
-   mProxyConfig->getConfigValue("EnumSuffixes", enumSuffixes);
-   if (enumSuffixes.size() > 0)
-   {
-      mSipStack->setEnumSuffixes(enumSuffixes);
-   }
-
-   // Add stack transports
-   bool allTransportsSpecifyRecordRoute=false;
-   if(!addTransports(allTransportsSpecifyRecordRoute))
-   {
-      cleanupObjects();
-      return false;
-   }
-
-   // Enable and configure RFC5626 Outbound support
-   InteropHelper::setOutboundVersion(mProxyConfig->getConfigInt("OutboundVersion", 5626));
-   InteropHelper::setOutboundSupported(mProxyConfig->getConfigBool("DisableOutbound", false) ? false : true);
-   InteropHelper::setRRTokenHackEnabled(mProxyConfig->getConfigBool("EnableFlowTokens", false));
-   InteropHelper::setAssumeFirstHopSupportsOutboundEnabled(mProxyConfig->getConfigBool("AssumeFirstHopSupportsOutbound", false));
-   Data clientNATDetectionMode = mProxyConfig->getConfigData("ClientNatDetectionMode", "DISABLED");
-   if(isEqualNoCase(clientNATDetectionMode, "ENABLED"))
-   {
-      InteropHelper::setClientNATDetectionMode(InteropHelper::ClientNATDetectionEnabled);
-   }
-   else if(isEqualNoCase(clientNATDetectionMode, "PRIVATE_TO_PUBLIC"))
-   {
-      InteropHelper::setClientNATDetectionMode(InteropHelper::ClientNATDetectionPrivateToPublicOnly);
-   }
-   unsigned long outboundFlowTimer = mProxyConfig->getConfigUnsignedLong("FlowTimer", 0);
-   if(outboundFlowTimer > 0)
-   {
-      InteropHelper::setFlowTimerSeconds(outboundFlowTimer);
-      ConnectionManager::MinimumGcAge = 7200000; // Timeout connections not related to a flow timer after 2 hours - TODO make configurable
-      ConnectionManager::EnableAgressiveGc = true;
-   }
-
-   // Check Path and RecordRoute settings, print warning if features are enabled that
-   // require record-routing and record-route uri(s) is not configured
-   bool assumePath = mProxyConfig->getConfigBool("AssumePath", false);
-   bool forceRecordRoute = mProxyConfig->getConfigBool("ForceRecordRouting", false);
-   Uri recordRouteUri;
-   mProxyConfig->getConfigValue("RecordRouteUri", recordRouteUri);
-   if((InteropHelper::getOutboundSupported() 
-         || InteropHelper::getRRTokenHackEnabled()
-         || InteropHelper::getClientNATDetectionMode() != InteropHelper::ClientNATDetectionDisabled
-         || assumePath
-         || forceRecordRoute
-      )
-      && !(allTransportsSpecifyRecordRoute || !recordRouteUri.host().empty()))
-   {
-      CritLog(<< "In order for outbound support, the Record-Route flow-token"
-      " hack, or force-record-route to work, you MUST specify a Record-Route URI. Launching "
-      "without...");
-      InteropHelper::setOutboundSupported(false);
-      InteropHelper::setRRTokenHackEnabled(false);
-      InteropHelper::setClientNATDetectionMode(InteropHelper::ClientNATDetectionDisabled);
-      assumePath = false;
-      forceRecordRoute=false;
-   }
-
-   // Configure misc. stack settings
-   mSipStack->setFixBadDialogIdentifiers(false);
-   mSipStack->setFixBadCSeqNumbers(false);
-   int statsLogInterval = mProxyConfig->getConfigInt("StatisticsLogInterval", 60);
-   if(statsLogInterval > 0)
-   {
-      mSipStack->setStatisticsInterval(statsLogInterval);
-      mSipStack->statisticsManagerEnabled() = true;
-   }
-   else
-   {
-      mSipStack->statisticsManagerEnabled() = false;
-   }
-
-   // Create Congestion Manager, if required
-   assert(!mCongestionManager);
-   if(mProxyConfig->getConfigBool("CongestionManagement", true))
-   {
-      Data metricData = mProxyConfig->getConfigData("CongestionManagementMetric", "WAIT_TIME", true);
-      GeneralCongestionManager::MetricType metric = GeneralCongestionManager::WAIT_TIME;
-      if(isEqualNoCase(metricData, "TIME_DEPTH"))
-      {
-         metric = GeneralCongestionManager::TIME_DEPTH;
-      }
-      else if(isEqualNoCase(metricData, "SIZE"))
-      {
-         metric = GeneralCongestionManager::SIZE;
-      }
-      else if(!isEqualNoCase(metricData, "WAIT_TIME"))
-      {
-         WarningLog( << "CongestionManagementMetric specified as an unknown value (" << metricData << "), defaulting to WAIT_TIME.");
-      }
-      mCongestionManager = new GeneralCongestionManager(
-                                          metric, 
-                                          mProxyConfig->getConfigUnsignedLong("CongestionManagementTolerance", 200));
-      mSipStack->setCongestionManager(mCongestionManager);
-   }
-
-   // Create base thread to run stack in (note:  stack may use other sub-threads, depending on configuration)
-   assert(!mStackThread);
-   mStackThread = new EventStackThread(*mSipStack,
-                                       *dynamic_cast<EventThreadInterruptor*>(mAsyncProcessHandler),
-                                       *mFdPollGrp);
-   return true;
-}
-
-bool 
-ReproRunner::createDatastore()
-{
-   // Create Database access objects
-   assert(!mAbstractDb);
-#ifdef USE_MYSQL
-   Data mySQLServer;
-   mProxyConfig->getConfigValue("MySQLServer", mySQLServer);
-   if (!mySQLServer.empty())
-   {
-      mAbstractDb = new MySqlDb(mySQLServer, 
-                       mProxyConfig->getConfigData("MySQLUser", ""), 
-                       mProxyConfig->getConfigData("MySQLPassword", ""),
-                       mProxyConfig->getConfigData("MySQLDatabaseName", ""),
-                       mProxyConfig->getConfigUnsignedLong("MySQLPort", 0),
-                       mProxyConfig->getConfigData("MySQLCustomUserAuthQuery", ""));
-   }
-#endif
-   if (!mAbstractDb)
-   {
-      mAbstractDb = new BerkeleyDb(mProxyConfig->getConfigData("DatabasePath", "./", true));
-   }
-   assert(mAbstractDb);
-   if(!mAbstractDb->isSane())
-   {
-      CritLog(<<"Failed to open configuration database");
-      cleanupObjects();
-      return false;
-   }
-   mProxyConfig->createDataStore(mAbstractDb);
-
-   // Create ImMemory Registration Database
-   mRegSyncPort = mProxyConfig->getConfigInt("RegSyncPort", 0);
-   // We only need removed records to linger if we have reg sync enabled
-   if(!mRestarting)  // If we are restarting then we left the InMemoryRegistrationDb intact at shutdown - don't recreate
-   {
-      assert(!mRegistrationPersistenceManager);
-      mRegistrationPersistenceManager = new InMemorySyncRegDb(mRegSyncPort ? 86400 /* 24 hours */ : 0 /* removeLingerSecs */);  // !slg! could make linger time a setting
-   }
-   assert(mRegistrationPersistenceManager);
-
-   // Copy contacts from the StaticRegStore to the RegistrationPersistanceManager
-   populateRegistrations();
-
-   return true;
-}
-
-void
-ReproRunner::createDialogUsageManager()
-{
-   // Create Profile settings for DUM Instance that handles ServerRegistration,
-   // and potentially certificate subscription server
-   SharedPtr<MasterProfile> profile(new MasterProfile);
-   profile->clearSupportedMethods();
-   profile->addSupportedMethod(resip::REGISTER);
-#ifdef USE_SSL
-   profile->addSupportedScheme(Symbols::Sips);
-#endif
-   if(InteropHelper::getOutboundSupported())
-   {
-      profile->addSupportedOptionTag(Token(Symbols::Outbound));
-   }
-   profile->addSupportedOptionTag(Token(Symbols::Path));
-   if(mProxyConfig->getConfigBool("AllowBadReg", false))
-   {
-       profile->allowBadRegistrationEnabled() = true;
-   }
-   
-   // Create DialogeUsageManager if Registrar or Certificate Server are enabled
-   assert(!mRegistrar);
-   assert(!mDum);
-   assert(!mDumThread);
-   mRegistrar = new Registrar;
-   resip::MessageFilterRuleList ruleList;
-   bool registrarEnabled = !mProxyConfig->getConfigBool("DisableRegistrar", false);
-   bool certServerEnabled = mProxyConfig->getConfigBool("EnableCertServer", false);
-   if (registrarEnabled || certServerEnabled)
-   {
-      mDum = new DialogUsageManager(*mSipStack);
-      mDum->setMasterProfile(profile);
-      addDomains(*mDum, false /* log? already logged when adding to Proxy - no need to log again*/);
-   }
-
-   // If registrar is enabled, configure DUM to handle REGISTER requests
-   if (registrarEnabled)
-   {   
-      assert(mDum);
-      assert(mRegistrationPersistenceManager);
-      mDum->setServerRegistrationHandler(mRegistrar);
-      mDum->setRegistrationPersistenceManager(mRegistrationPersistenceManager);
-
-      // Install rules so that the registrar only gets REGISTERs
-      resip::MessageFilterRule::MethodList methodList;
-      methodList.push_back(resip::REGISTER);
-      ruleList.push_back(MessageFilterRule(resip::MessageFilterRule::SchemeList(),
-                                           resip::MessageFilterRule::DomainIsMe,
-                                           methodList) );
-   }
-   
-   // If Certificate Server is enabled, configure DUM to handle SUBSCRIBE and 
-   // PUBLISH requests for events: credential and certificate
-   assert(!mCertServer);
-   if (certServerEnabled)
-   {
-#if defined(USE_SSL)
-      mCertServer = new CertServer(*mDum);
-
-      // Install rules so that the cert server receives SUBSCRIBEs and PUBLISHs
-      resip::MessageFilterRule::MethodList methodList;
-      resip::MessageFilterRule::EventList eventList;
-      methodList.push_back(resip::SUBSCRIBE);
-      methodList.push_back(resip::PUBLISH);
-      eventList.push_back(resip::Symbols::Credential);
-      eventList.push_back(resip::Symbols::Certificate);
-      ruleList.push_back(MessageFilterRule(resip::MessageFilterRule::SchemeList(),
-                                           resip::MessageFilterRule::DomainIsMe,
-                                           methodList,
-                                           eventList));
-#endif
-   }
-
-   if (mDum)
-   {
-      if(mProxyConfig->getConfigBool("EnableCertificateAuthenticator", false))
-      {
-         // TODO: perhaps this should be initialised from the trusted node
-         // monkey?  Or should the list of trusted TLS peers be independent
-         // from the trusted node list?
-         std::set<Data> trustedPeers;
-         SharedPtr<TlsPeerAuthManager> certAuth(new TlsPeerAuthManager(*mDum, mDum->dumIncomingTarget(), trustedPeers));
-         mDum->addIncomingFeature(certAuth);
-      }
-
-      mSipAuthDisabled = mProxyConfig->getConfigBool("DisableAuth", false);
-
-      // If Authentication is enabled, then configure DUM to authenticate requests
-      if (!mSipAuthDisabled)
-      {
-         // Create UserAuthGrabber Worker Thread Pool if auth is enabled
-         assert(!mAuthRequestDispatcher);
-         int numAuthGrabberWorkerThreads = mProxyConfig->getConfigInt("NumAuthGrabberWorkerThreads", 2);
-         if(numAuthGrabberWorkerThreads < 1) numAuthGrabberWorkerThreads = 1; // must have at least one thread
-         std::auto_ptr<Worker> grabber(new UserAuthGrabber(mProxyConfig->getDataStore()->mUserStore));
-         mAuthRequestDispatcher = new Dispatcher(grabber, mSipStack, numAuthGrabberWorkerThreads);
-
-         SharedPtr<ServerAuthManager> 
-            uasAuth( new ReproServerAuthManager(*mDum,
-                                                mAuthRequestDispatcher,
-                                                mProxyConfig->getDataStore()->mAclStore,
-                                                !mProxyConfig->getConfigBool("DisableAuthInt", false) /*useAuthInt*/,
-                                                mProxyConfig->getConfigBool("RejectBadNonces", false)));
-         mDum->setServerAuthManager(uasAuth);
-      }
-
-      // Set the MessageFilterRuleList on DUM and create a thread to run DUM in
-      mDum->setMessageFilterRuleList(ruleList);
-      mDumThread = new DumThread(*mDum);
-   }   
-}
-
-bool
-ReproRunner::createProxy()
-{
-   // Create AsyncProcessorDispatcher thread pool that is shared by the processsors for
-   // any asyncronous tasks (ie: RequestFilter and MessageSilo processors)
-   int numAsyncProcessorWorkerThreads = mProxyConfig->getConfigInt("NumAsyncProcessorWorkerThreads", 2);
-   if(numAsyncProcessorWorkerThreads > 0)
-   {
-      assert(!mAsyncProcessorDispatcher);
-      mAsyncProcessorDispatcher = new Dispatcher(std::auto_ptr<Worker>(new AsyncProcessorWorker), 
-                                                 mSipStack, 
-                                                 numAsyncProcessorWorkerThreads);
-   }
-
-   // Create proxy processor chains
-   /* Explanation:  "Monkeys" are processors which operate on incoming requests
-                    "Lemurs"  are processors which operate on incoming responses
-                    "Baboons" are processors which operate on a request for each target  
-                              as the request is about to be forwarded to that target */
-   // Make Monkeys
-   assert(!mMonkeys);
-   mMonkeys = new ProcessorChain(Processor::REQUEST_CHAIN);
-   makeRequestProcessorChain(*mMonkeys);
-   InfoLog(<< *mMonkeys);
-
-   // Make Lemurs
-   assert(!mLemurs);
-   mLemurs = new ProcessorChain(Processor::RESPONSE_CHAIN);
-   makeResponseProcessorChain(*mLemurs);
-   InfoLog(<< *mLemurs);
-
-   // Make Baboons
-   assert(!mBaboons);
-   mBaboons = new ProcessorChain(Processor::TARGET_CHAIN);
-   makeTargetProcessorChain(*mBaboons);
-   InfoLog(<< *mBaboons);
-
-   // Create main Proxy class
-   assert(!mProxy);
-   mProxy = new Proxy(*mSipStack, 
-                      *mProxyConfig, 
-                      *mMonkeys, 
-                      *mLemurs, 
-                      *mBaboons);
-   mHttpRealm = addDomains(*mProxy, true);
-
-   // Register the Proxy class a stack transaction user
-   // Note:  This is done after creating the DialogUsageManager so that it acts 
-   // like a catchall and will handle all requests the DUM does not
-   mSipStack->registerTransactionUser(*mProxy);
-
-   return true;
-}
-
-void 
-ReproRunner::populateRegistrations()
-{
-   assert(mRegistrationPersistenceManager);
-   assert(mProxyConfig);
-   assert(mProxyConfig->getDataStore());
-
-   // Copy contacts from the StaticRegStore to the RegistrationPersistanceManager
-   StaticRegStore::StaticRegRecordMap& staticRegList = mProxyConfig->getDataStore()->mStaticRegStore.getStaticRegList();
-   StaticRegStore::StaticRegRecordMap::iterator it = staticRegList.begin();
-   for(; it != staticRegList.end(); it++)
-   {
-      try
-      {
-         Uri aor(it->second.mAor);
-
-         ContactInstanceRecord rec;
-         rec.mContact = NameAddr(it->second.mContact);
-         rec.mSipPath = NameAddrs(it->second.mPath);
-         rec.mRegExpires = NeverExpire;
-         rec.mSyncContact = true;  // Tag this permanent contact as being a syncronized contact so that it will
-                                    // be syncronized to a paired server (this is actually configuration information)
-         mRegistrationPersistenceManager->updateContact(aor, rec);
-      }
-      catch(resip::ParseBuffer::Exception& e)  
-      {
-         // This should never happen, since the format should be verified before writing to DB
-         ErrLog(<<"Failed to apply a static registration due to parse error: " << e);
-      }
-   }
-}
-
-bool
-ReproRunner::createWebAdmin()
-{
-   assert(!mWebAdmin);
-   assert(!mWebAdminThread);
-   int httpPort = mProxyConfig->getConfigInt("HttpPort", 5080);
-   if (httpPort) 
-   {
-      mWebAdmin = new WebAdmin(*mProxy,
-                               *mRegistrationPersistenceManager, 
-                               mHttpRealm, 
-                               httpPort);
-      if (!mWebAdmin->isSane())
-      {
-         CritLog(<<"Failed to start the WebAdmin");
-         cleanupObjects();
-         return false;
-      }
-      mWebAdminThread = new WebAdminThread(*mWebAdmin);
-   }
-   return true;
-}
-
-void
-ReproRunner::createRegSync()
-{
-   assert(!mRegSyncClient);
-   assert(!mRegSyncServerV4);
-   assert(!mRegSyncServerV6);
-   assert(!mRegSyncServerThread);
-   if(mRegSyncPort != 0)
-   {
-      std::list<RegSyncServer*> regSyncServerList;
-      if(mUseV4) 
-      {
-         mRegSyncServerV4 = new RegSyncServer(dynamic_cast<InMemorySyncRegDb*>(mRegistrationPersistenceManager), mRegSyncPort, V4);
-         regSyncServerList.push_back(mRegSyncServerV4);
-      }
-      if(mUseV6) 
-      {
-         mRegSyncServerV6 = new RegSyncServer(dynamic_cast<InMemorySyncRegDb*>(mRegistrationPersistenceManager), mRegSyncPort, V6);
-         regSyncServerList.push_back(mRegSyncServerV6);
-      }
-      if(!regSyncServerList.empty())
-      {
-         mRegSyncServerThread = new RegSyncServerThread(regSyncServerList);
-      }
-      Data regSyncPeerAddress(mProxyConfig->getConfigData("RegSyncPeer", ""));
-      if(!regSyncPeerAddress.empty())
-      {
-         mRegSyncClient = new RegSyncClient(dynamic_cast<InMemorySyncRegDb*>(mRegistrationPersistenceManager), regSyncPeerAddress, mRegSyncPort);
-      }
-   }
-}
-
-void
-ReproRunner::createCommandServer()
-{
-   assert(!mCommandServerV4);
-   assert(!mCommandServerV6);
-   assert(!mCommandServerThread);
-   int commandPort = mProxyConfig->getConfigInt("CommandPort", 5081);
-   if(commandPort != 0)
-   {
-      std::list<CommandServer*> commandServerList;
-      if(mUseV4) 
-      {
-         mCommandServerV4 = new CommandServer(*this, commandPort, V4);
-         commandServerList.push_back(mCommandServerV4);
-      }
-      if(mUseV6) 
-      {
-         mCommandServerV6 = new CommandServer(*this, commandPort, V6);
-         commandServerList.push_back(mCommandServerV6);
-      }
-      if(!commandServerList.empty())
-      {
-         mCommandServerThread = new CommandServerThread(commandServerList);
-      }
-   }
-}
-
-Data
-ReproRunner::addDomains(TransactionUser& tu, bool log)
-{
-   assert(mProxyConfig);
-   Data realm;
-   
-   std::vector<Data> configDomains;
-   if(mProxyConfig->getConfigValue("Domains", configDomains))
-   {
-      for (std::vector<Data>::const_iterator i=configDomains.begin(); 
-         i != configDomains.end(); ++i)
-      {
-         if(log) InfoLog (<< "Adding domain " << *i << " from command line");
-         tu.addDomain(*i);
-         if ( realm.empty() )
-         {
-            realm = *i;
-         }
-      }
-   }
-
-   const ConfigStore::ConfigData& dList = mProxyConfig->getDataStore()->mConfigStore.getConfigs();
-   for (ConfigStore::ConfigData::const_iterator i=dList.begin(); 
-           i != dList.end(); ++i)
-   {
-      if(log) InfoLog (<< "Adding domain " << i->second.mDomain << " from config");
-      tu.addDomain( i->second.mDomain );
-      if ( realm.empty() )
-      {
-         realm = i->second.mDomain;
-      }
-   }
-
-   Data localhostname(DnsUtil::getLocalHostName());
-   if(log) InfoLog (<< "Adding local hostname domain " << localhostname );
-   tu.addDomain(localhostname);
-   if ( realm.empty() )
-   {
-      realm = localhostname;
-   }
-
-   if(log) InfoLog (<< "Adding localhost domain.");
-   tu.addDomain("localhost");
-   if ( realm.empty() )
-   {
-      realm = "localhost";
-   }
-   
-   list<pair<Data,Data> > ips = DnsUtil::getInterfaces();
-   for ( list<pair<Data,Data> >::const_iterator i=ips.begin(); i!=ips.end(); i++)
-   {
-      if(log) InfoLog( << "Adding domain for IP " << i->second << " from interface " << i->first  );
-      tu.addDomain(i->second);
-   }
-
-   if(log) InfoLog (<< "Adding 127.0.0.1 domain.");
-   tu.addDomain("127.0.0.1");
-
-   return realm;
-}
-
-bool
-ReproRunner::addTransports(bool& allTransportsSpecifyRecordRoute)
-{
-   assert(mProxyConfig);
-   assert(mSipStack);
-   allTransportsSpecifyRecordRoute=false;
-   bool useEmailAsSIP = mProxyConfig->getConfigBool("TLSUseEmailAsSIP", false);
-   try
-   {
-      // Check if advanced transport settings are provided
-      unsigned int transportNum = 1;
-      Data settingKeyBase("Transport" + Data(transportNum));
-      Data interfaceSettingKey(settingKeyBase + "Interface");
-      Data interfaceSettings = mProxyConfig->getConfigData(interfaceSettingKey, "", true);
-      if(!interfaceSettings.empty())
-      {
-         // Sample config file format for advanced transport settings
-         // Transport1Interface = 192.168.1.106:5061
-         // Transport1Type = TLS
-         // Transport1TlsDomain = sipdomain.com
-         // Transport1TlsClientVerification = None
-         // Transport1RecordRouteUri = sip:sipdomain.com;transport=TLS
-         // Transport1RcvBufLen = 2000
-
-         allTransportsSpecifyRecordRoute = true;
-
-         const char *anchor;
-         while(!interfaceSettings.empty())
-         {
-            Data typeSettingKey(settingKeyBase + "Type");
-            Data tlsDomainSettingKey(settingKeyBase + "TlsDomain");
-            Data tlsCVMSettingKey(settingKeyBase + "TlsClientVerification");
-            Data recordRouteUriSettingKey(settingKeyBase + "RecordRouteUri");
-            Data rcvBufSettingKey(settingKeyBase + "RcvBufLen");
-
-            // Parse out interface settings
-            ParseBuffer pb(interfaceSettings);
-            anchor = pb.position();
-            pb.skipToChar(':');
-            if(!pb.eof())
-            {
-               Data ipAddr;
-               Data portData;
-               pb.data(ipAddr, anchor);
-               pb.skipChar();
-               anchor = pb.position();
-               pb.skipToEnd();
-               pb.data(portData, anchor);
-               if(!DnsUtil::isIpAddress(ipAddr))
-               {
-                  CritLog(<< "Malformed IP-address found in " << interfaceSettingKey << " setting: " << ipAddr);
-               }
-               int port = portData.convertInt();
-               if(port == 0)
-               {
-                  CritLog(<< "Invalid port found in " << interfaceSettingKey << " setting: " << port);
-               }
-               TransportType tt = Tuple::toTransport(mProxyConfig->getConfigData(typeSettingKey, "UDP"));
-               if(tt == UNKNOWN_TRANSPORT)
-               {
-                  CritLog(<< "Unknown transport type found in " << typeSettingKey << " setting: " << mProxyConfig->getConfigData(typeSettingKey, "UDP"));
-               }
-               Data tlsDomain = mProxyConfig->getConfigData(tlsDomainSettingKey, "");
-               Data tlsCVMValue = mProxyConfig->getConfigData(tlsCVMSettingKey, "NONE");
-               SecurityTypes::TlsClientVerificationMode cvm = SecurityTypes::None;
-               if(isEqualNoCase(tlsCVMValue, "Optional"))
-               {
-                  cvm = SecurityTypes::Optional;
-               }
-               else if(isEqualNoCase(tlsCVMValue, "Mandatory"))
-               {
-                  cvm = SecurityTypes::Mandatory;
-               }
-               else if(!isEqualNoCase(tlsCVMValue, "None"))
-               {
-                  CritLog(<< "Unknown TLS client verification mode found in " << tlsCVMSettingKey << " setting: " << tlsCVMValue);
-               }
-               int rcvBufLen = mProxyConfig->getConfigInt(rcvBufSettingKey, 0);
-               Transport *t = mSipStack->addTransport(tt,
-                                 port,
-                                 DnsUtil::isIpV6Address(ipAddr) ? V6 : V4,
-                                 StunEnabled, 
-                                 ipAddr,       // interface to bind to
-                                 tlsDomain,
-                                 Data::Empty,  // private key passphrase - not currently used
-                                 SecurityTypes::TLSv1, // sslType
-                                 0,            // transport flags
-                                 cvm,          // tls client verification mode
-                                 useEmailAsSIP);
-
-               if (t && rcvBufLen>0 )
-               {
-#if defined(RESIP_SIPSTACK_HAVE_FDPOLL)
-                  // this new method is part of the epoll changeset,
-                  // which isn't commited yet.
-                  t->setRcvBufLen(rcvBufLen);
-#else
-                   assert(0);
-#endif
-               }
-
-               Data recordRouteUri = mProxyConfig->getConfigData(recordRouteUriSettingKey, "");
-               if(!recordRouteUri.empty())
-               {
-                  try
-                  {
-                     if(isEqualNoCase(recordRouteUri, "auto")) // auto generated record route uri
-                     {
-                        if(tt == TLS || tt == DTLS)
-                        {
-                           NameAddr rr;
-                           rr.uri().host()=tlsDomain;
-                           rr.uri().port()=port;
-                           rr.uri().param(resip::p_transport)=resip::Tuple::toDataLower(tt);
-                           t->setRecordRoute(rr);
-                           InfoLog (<< "Transport specific record-route enabled (generated): " << rr);
-                        }
-                        else
-                        {
-                           NameAddr rr;
-                           rr.uri().host()=ipAddr;
-                           rr.uri().port()=port;
-                           rr.uri().param(resip::p_transport)=resip::Tuple::toDataLower(tt);
-                           t->setRecordRoute(rr);
-                           InfoLog (<< "Transport specific record-route enabled (generated): " << rr);
-                        }
-                     }
-                     else
-                     {
-                        NameAddr rr(recordRouteUri);
-                        t->setRecordRoute(rr);
-                        InfoLog (<< "Transport specific record-route enabled: " << rr);
-                     }
-                  }
-                  catch(BaseException& e)
-                  {
-                     ErrLog (<< "Invalid uri provided in " << recordRouteUriSettingKey << " setting (ignoring): " << e);
-                     allTransportsSpecifyRecordRoute = false;
-                  }
-               }
-               else 
-               {
-                  allTransportsSpecifyRecordRoute = false;
-               }
-            }
-            else
-            {
-               CritLog(<< "Port not specified in " << interfaceSettingKey << " setting: expected format is <IPAddress>:<Port>");
-               return false;
-            }
-
-            // Check if there is another transport
-            transportNum++;
-            settingKeyBase = Data("Transport" + Data(transportNum));
-            interfaceSettingKey = Data(settingKeyBase + "Interface");
-            interfaceSettings = mProxyConfig->getConfigData(interfaceSettingKey, "", true);
-         }
-      }
-      else
-      {
-         int udpPort = mProxyConfig->getConfigInt("UDPPort", 5060);
-         int tcpPort = mProxyConfig->getConfigInt("TCPPort", 5060);
-         int tlsPort = mProxyConfig->getConfigInt("TLSPort", 5061);
-         int dtlsPort = mProxyConfig->getConfigInt("DTLSPort", 0);
-         Data tlsDomain = mProxyConfig->getConfigData("TLSDomainName", "");
-         Data tlsCVMValue = mProxyConfig->getConfigData("TLSClientVerification", "NONE");
-         SecurityTypes::TlsClientVerificationMode cvm = SecurityTypes::None;
-         if(isEqualNoCase(tlsCVMValue, "Optional"))
-         {
-            cvm = SecurityTypes::Optional;
-         }
-         else if(isEqualNoCase(tlsCVMValue, "Mandatory"))
-         {
-            cvm = SecurityTypes::Mandatory;
-         }
-         else if(!isEqualNoCase(tlsCVMValue, "None"))
-         {
-            CritLog(<< "Unknown TLS client verification mode found in TLSClientVerification setting: " << tlsCVMValue);
-         }
-
-         if (udpPort)
-         {
-            if (mUseV4) mSipStack->addTransport(UDP, udpPort, V4, StunEnabled);
-            if (mUseV6) mSipStack->addTransport(UDP, udpPort, V6, StunEnabled);
-         }
-         if (tcpPort)
-         {
-            if (mUseV4) mSipStack->addTransport(TCP, tcpPort, V4, StunEnabled);
-            if (mUseV6) mSipStack->addTransport(TCP, tcpPort, V6, StunEnabled);
-         }
-         if (tlsPort)
-         {
-            if (mUseV4) mSipStack->addTransport(TLS, tlsPort, V4, StunEnabled, Data::Empty, tlsDomain, Data::Empty, SecurityTypes::TLSv1, 0, cvm, useEmailAsSIP);
-            if (mUseV6) mSipStack->addTransport(TLS, tlsPort, V6, StunEnabled, Data::Empty, tlsDomain, Data::Empty, SecurityTypes::TLSv1, 0, cvm, useEmailAsSIP);
-         }
-         if (dtlsPort)
-         {
-            if (mUseV4) mSipStack->addTransport(DTLS, dtlsPort, V4, StunEnabled, Data::Empty, tlsDomain);
-            if (mUseV6) mSipStack->addTransport(DTLS, dtlsPort, V6, StunEnabled, Data::Empty, tlsDomain);
-         }
-      }
-   }
-   catch (BaseException& e)
-   {
-      std::cerr << "Likely a port is already in use" << endl;
-      InfoLog (<< "Caught: " << e);
-      return false;
-   }
-   return true;
-}
-
-void 
-ReproRunner::addProcessor(repro::ProcessorChain& chain, std::auto_ptr<Processor> processor)
-{
-   chain.addProcessor(processor);
-}
-
-void  // Monkeys
-ReproRunner::makeRequestProcessorChain(ProcessorChain& chain)
-{
-   assert(mProxyConfig);
-   assert(mRegistrationPersistenceManager);
-
-   // Add strict route fixup monkey
-   addProcessor(chain, std::auto_ptr<Processor>(new StrictRouteFixup));
-
-   // Add is trusted node monkey
-   addProcessor(chain, std::auto_ptr<Processor>(new IsTrustedNode(*mProxyConfig)));
-
-   // Add Certificate Authenticator - if required
-   if(mProxyConfig->getConfigBool("EnableCertificateAuthenticator", false))
-   {
-      // TODO: perhaps this should be initialised from the trusted node
-      // monkey?  Or should the list of trusted TLS peers be independent
-      // from the trusted node list?
-      // Should we used the same trustedPeers object that was
-      // passed to TlsPeerAuthManager perhaps?
-      std::set<Data> trustedPeers;
-      addProcessor(chain, std::auto_ptr<Processor>(new CertificateAuthenticator(*mProxyConfig, mSipStack, trustedPeers)));
-   }
-
-   // Add digest authenticator monkey - if required
-   if (!mSipAuthDisabled)
-   {
-      assert(mAuthRequestDispatcher);
-      DigestAuthenticator* da = new DigestAuthenticator(*mProxyConfig, mAuthRequestDispatcher);
-
-      addProcessor(chain, std::auto_ptr<Processor>(da)); 
-   }
-
-   // Add am I responsible monkey
-   addProcessor(chain, std::auto_ptr<Processor>(new AmIResponsible)); 
-
-   // Add RequestFilter monkey
-   if(!mProxyConfig->getConfigBool("DisableRequestFilterProcessor", false))
-   {
-      if(mAsyncProcessorDispatcher)
-      {
-         addProcessor(chain, std::auto_ptr<Processor>(new RequestFilter(*mProxyConfig, mAsyncProcessorDispatcher)));
-      }
-      else
-      {
-         WarningLog(<< "Could not start RequestFilter Processor due to no worker thread pool (NumAsyncProcessorWorkerThreads=0)");
-      }
-   }
-
-   // [TODO] support for GRUU is on roadmap.  When it is added the GruuMonkey will go here
-      
-   // [TODO] support for Manipulating Tel URIs is on the roadmap.
-   //        When added, the telUriMonkey will go here 
-
-   std::vector<Data> routeSet;
-   mProxyConfig->getConfigValue("Routes", routeSet);
-   if (routeSet.empty())
-   {
-      // add static route monkey
-      addProcessor(chain, std::auto_ptr<Processor>(new StaticRoute(*mProxyConfig))); 
-   }
-   else
-   {
-      // add simple static route monkey
-      addProcessor(chain, std::auto_ptr<Processor>(new SimpleStaticRoute(*mProxyConfig))); 
-   }
-
-   // Add location server monkey
-   addProcessor(chain, std::auto_ptr<Processor>(new LocationServer(*mProxyConfig, *mRegistrationPersistenceManager, mAuthRequestDispatcher)));
-
-   // Add message silo monkey
-   if(mProxyConfig->getConfigBool("MessageSiloEnabled", false))
-   {
-      if(mAsyncProcessorDispatcher && mRegistrar)
-      {
-         MessageSilo* silo = new MessageSilo(*mProxyConfig, mAsyncProcessorDispatcher);
-         mRegistrar->addRegistrarHandler(silo);
-         addProcessor(chain, std::auto_ptr<Processor>(silo));
-      }
-      else
-      {
-         WarningLog(<< "Could not start MessageSilo Processor due to no worker thread pool (NumAsyncProcessorWorkerThreads=0) or Registrar");
-      }
-   }
-}
-
-void  // Lemurs
-ReproRunner::makeResponseProcessorChain(ProcessorChain& chain)
-{
-   assert(mProxyConfig);
-   assert(mRegistrationPersistenceManager);
-
-   // Add outbound target handler lemur
-   addProcessor(chain, std::auto_ptr<Processor>(new OutboundTargetHandler(*mRegistrationPersistenceManager))); 
-
-   if (mProxyConfig->getConfigBool("RecursiveRedirect", false))
-   {
-      // Add recursive redirect lemur
-      addProcessor(chain, std::auto_ptr<Processor>(new RecursiveRedirect)); 
-   }
-}
-
-void  // Baboons
-ReproRunner::makeTargetProcessorChain(ProcessorChain& chain)
-{
-   assert(mProxyConfig);
-
-#ifndef RESIP_FIXED_POINT
-   if(mProxyConfig->getConfigBool("GeoProximityTargetSorting", false))
-   {
-      addProcessor(chain, std::auto_ptr<Processor>(new GeoProximityTargetSorter(*mProxyConfig)));
-   }
-#endif
-
-   if(mProxyConfig->getConfigBool("QValue", true))
-   {
-      // Add q value target handler baboon
-      addProcessor(chain, std::auto_ptr<Processor>(new QValueTargetHandler(*mProxyConfig))); 
-   }
-   
-   // Add simple target handler baboon
-   addProcessor(chain, std::auto_ptr<Processor>(new SimpleTargetHandler)); 
-}
-
-
-/* ====================================================================
- * The Vovida Software License, Version 1.0 
- * 
- * Copyright (c) 2000 Vovida Networks, Inc.  All rights reserved.
- * 
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- * 
- * 1. Redistributions of source code must retain the above copyright
- *    notice, this list of conditions and the following disclaimer.
- * 
- * 2. Redistributions in binary form must reproduce the above copyright
- *    notice, this list of conditions and the following disclaimer in
- *    the documentation and/or other materials provided with the
- *    distribution.
- * 
- * 3. The names "VOCAL", "Vovida Open Communication Application Library",
- *    and "Vovida Open Communication Application Library (VOCAL)" must
- *    not be used to endorse or promote products derived from this
- *    software without prior written permission. For written
- *    permission, please contact vocal@vovida.org.
- *
- * 4. Products derived from this software may not be called "VOCAL", nor
- *    may "VOCAL" appear in their name, without prior written
- *    permission of Vovida Networks, Inc.
- * 
- * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESSED OR IMPLIED
- * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
- * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND
- * NON-INFRINGEMENT ARE DISCLAIMED.  IN NO EVENT SHALL VOVIDA
- * NETWORKS, INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT DAMAGES
- * IN EXCESS OF $1,000, NOR FOR ANY INDIRECT, INCIDENTAL, SPECIAL,
- * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
- * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
- * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
- * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
- * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
- * DAMAGE.
- * 
- * ====================================================================
- */
+#if defined(HAVE_CONFIG_H)
+#include "config.h"
+#endif
+
+#include "rutil/Log.hxx"
+#include "rutil/Logger.hxx"
+#include "rutil/DnsUtil.hxx"
+#include "rutil/dns/DnsStub.hxx"
+#include "rutil/GeneralCongestionManager.hxx"
+
+#include "resip/stack/SipStack.hxx"
+#include "resip/stack/Compression.hxx"
+#include "resip/stack/EventStackThread.hxx"
+#include "resip/stack/InteropHelper.hxx"
+#include "resip/stack/ConnectionManager.hxx"
+
+#include "resip/dum/InMemorySyncRegDb.hxx"
+#include "resip/dum/MasterProfile.hxx"
+#include "resip/dum/DialogUsageManager.hxx"
+#include "resip/dum/DumThread.hxx"
+#include "resip/dum/TlsPeerAuthManager.hxx"
+
+#include "repro/AsyncProcessorWorker.hxx"
+#include "repro/ReproRunner.hxx"
+#include "repro/Proxy.hxx"
+#include "repro/ProxyConfig.hxx"
+#include "repro/BerkeleyDb.hxx"
+#include "repro/Dispatcher.hxx"
+#include "repro/UserAuthGrabber.hxx"
+#include "repro/ProcessorChain.hxx"
+#include "repro/ReproVersion.hxx"
+#include "repro/WebAdmin.hxx"
+#include "repro/WebAdminThread.hxx"
+#include "repro/Registrar.hxx"
+#include "repro/ReproServerAuthManager.hxx"
+#include "repro/RegSyncClient.hxx"
+#include "repro/RegSyncServer.hxx"
+#include "repro/RegSyncServerThread.hxx"
+#include "repro/CommandServer.hxx"
+#include "repro/CommandServerThread.hxx"
+#include "repro/monkeys/IsTrustedNode.hxx"
+#include "repro/monkeys/AmIResponsible.hxx"
+#include "repro/monkeys/DigestAuthenticator.hxx"
+#include "repro/monkeys/LocationServer.hxx"
+#include "repro/monkeys/RecursiveRedirect.hxx"
+#include "repro/monkeys/SimpleStaticRoute.hxx"
+#include "repro/monkeys/StaticRoute.hxx"
+#include "repro/monkeys/StrictRouteFixup.hxx"
+#include "repro/monkeys/OutboundTargetHandler.hxx"
+#include "repro/monkeys/QValueTargetHandler.hxx"
+#include "repro/monkeys/SimpleTargetHandler.hxx"
+#include "repro/monkeys/GeoProximityTargetSorter.hxx"
+#include "repro/monkeys/RequestFilter.hxx"
+#include "repro/monkeys/MessageSilo.hxx"
+#include "repro/monkeys/CertificateAuthenticator.hxx"
+
+#if defined(USE_SSL)
+#include "repro/stateAgents/CertServer.hxx"
+#include "resip/stack/ssl/Security.hxx"
+#endif
+
+#if defined(USE_MYSQL)
+#include "repro/MySqlDb.hxx"
+#endif
+
+#include "rutil/WinLeakCheck.hxx"
+
+#define RESIPROCATE_SUBSYSTEM resip::Subsystem::REPRO
+
+using namespace resip;
+using namespace repro;
+using namespace std;
+
+class ReproLogger : public ExternalLogger
+{
+public:
+   virtual ~ReproLogger() {}
+   /** return true to also do default logging, false to supress default logging. */
+   virtual bool operator()(Log::Level level,
+                           const Subsystem& subsystem, 
+                           const Data& appName,
+                           const char* file,
+                           int line,
+                           const Data& message,
+                           const Data& messageWithHeaders)
+   {
+      // Log any errors to the screen 
+      if(level <= Log::Err)
+      {
+         resipCout << messageWithHeaders << endl;
+      }
+      return true;
+   }
+};
+ReproLogger g_ReproLogger;
+
+ReproRunner::ReproRunner()
+   : mRunning(false)
+   , mRestarting(false)
+   , mThreadedStack(false)
+   , mSipAuthDisabled(true)
+   , mUseV4(true)
+   , mUseV6 (false)
+   , mRegSyncPort(0)
+   , mProxyConfig(0)
+   , mFdPollGrp(0)
+   , mAsyncProcessHandler(0)
+   , mSipStack(0)
+   , mStackThread(0)
+   , mAbstractDb(0)
+   , mRegistrationPersistenceManager(0)
+   , mAuthRequestDispatcher(0)
+   , mAsyncProcessorDispatcher(0)
+   , mMonkeys(0)
+   , mLemurs(0)
+   , mBaboons(0)
+   , mProxy(0)
+   , mWebAdmin(0)
+   , mWebAdminThread(0)
+   , mRegistrar(0)
+   , mDum(0)
+   , mDumThread(0)
+   , mCertServer(0)
+   , mRegSyncClient(0)
+   , mRegSyncServerV4(0)
+   , mRegSyncServerV6(0)
+   , mRegSyncServerThread(0)
+   , mCommandServerV4(0)
+   , mCommandServerV6(0)
+   , mCommandServerThread(0)
+   , mCongestionManager(0)
+{
+}
+
+ReproRunner::~ReproRunner()
+{
+   if(mRunning) shutdown();
+}
+
+bool
+ReproRunner::run(int argc, char** argv)
+{
+   if(mRunning) return false;
+
+   if(!mRestarting)
+   {
+      // Store original arc and argv - so we can reuse them on restart request
+      mArgc = argc;
+      mArgv = argv;
+   }
+
+   // Parse command line and configuration file
+   assert(!mProxyConfig);
+   Data defaultConfigFilename("repro.config");
+   try
+   {
+      mProxyConfig = new ProxyConfig(mArgc, mArgv, defaultConfigFilename);
+   }
+   catch(BaseException& ex)
+   {
+      std::cerr << "Error parsing configuration: " << ex << std::endl;
+      return false;
+   }
+
+   // Non-Windows server process stuff
+   if(!mRestarting)
+   {
+      setPidFile(mProxyConfig->getConfigData("PidFile", "", true));
+      if(mProxyConfig->getConfigBool("Daemonize", false))
+      {
+         daemonize();
+      }
+   }
+
+   // Initialize resip logger
+   GenericLogImpl::MaxByteCount = mProxyConfig->getConfigUnsignedLong("LogFileMaxBytes", 5242880 /*5 Mb */);
+   Data loggingType = mProxyConfig->getConfigData("LoggingType", "cout", true);
+   Log::initialize(loggingType, 
+                   mProxyConfig->getConfigData("LogLevel", "INFO", true), 
+                   mArgv[0], 
+                   mProxyConfig->getConfigData("LogFilename", "repro.log", true).c_str(),
+                   isEqualNoCase(loggingType, "file") ? &g_ReproLogger : 0); // if logging to file then write WARNINGS, and Errors to console still
+
+   InfoLog( << "Starting repro version " << VersionUtils::instance().releaseVersion() << "...");
+
+   // Create SipStack and associated objects
+   if(!createSipStack())
+   {
+      return false;
+   }
+
+   // Create datastore
+   if(!createDatastore())
+   {
+      return false;
+   }
+
+   // Create DialogUsageManager that handles ServerRegistration,
+   // and potentially certificate subscription server
+   createDialogUsageManager();
+
+   // Create the Proxy and associate objects
+   if(!createProxy())
+   {
+      return false;
+   }
+
+   // Create HTTP WebAdmin and Thread
+   if(!createWebAdmin())
+   {
+      return false;
+   }
+
+   // Create reg sync components if required
+   createRegSync();
+
+   // Create command server if required
+   if(!mRestarting)
+   {
+      createCommandServer();
+   }
+
+   // Make it all go - startup all threads
+   mThreadedStack = mProxyConfig->getConfigBool("ThreadedStack", true);
+   if(mThreadedStack)
+   {
+      // If configured, then start the sub-threads within the stack
+      mSipStack->run();
+   }
+   mStackThread->run();
+   if(mDumThread)
+   {
+      mDumThread->run();
+   }
+   mProxy->run();
+   if(mWebAdminThread)
+   {
+      mWebAdminThread->run();
+   }
+   if(!mRestarting && mCommandServerThread)
+   {
+      mCommandServerThread->run();
+   }
+   if(mRegSyncServerThread)
+   {
+      mRegSyncServerThread->run();
+   }
+   if(mRegSyncClient)
+   {
+      mRegSyncClient->run();
+   }
+
+   mRunning = true;
+
+   return true;
+}
+
+void 
+ReproRunner::shutdown()
+{
+   if(!mRunning) return;
+
+   // Tell all threads to shutdown
+   if(mWebAdminThread)
+   {
+      mWebAdminThread->shutdown();
+   }
+   if(mDumThread)
+   {
+      mDumThread->shutdown();
+   }
+   mProxy->shutdown();
+   mStackThread->shutdown();
+   if(!mRestarting && mCommandServerThread)  // leave command server running if we are restarting
+   {
+      mCommandServerThread->shutdown();
+   }
+   if(mRegSyncServerThread)
+   {
+      mRegSyncServerThread->shutdown();
+   }
+   if(mRegSyncClient)
+   {
+      mRegSyncClient->shutdown();
+   }
+
+   // Wait for all threads to shutdown, and destroy objects
+   mProxy->join();
+   if(mThreadedStack)
+   {
+      mSipStack->shutdownAndJoinThreads();
+   }
+   mStackThread->join();
+   if(mWebAdminThread) 
+   {
+      mWebAdminThread->join();
+   }
+   if(mDumThread)
+   {
+      mDumThread->join();
+   }
+   if(mAuthRequestDispatcher)
+   {
+      // Both proxy and dum threads are down at this point, we can 
+      // destroy the authRequest dispatcher and associated threads now
+      delete mAuthRequestDispatcher;
+      mAuthRequestDispatcher = 0;
+   }
+   if(mAsyncProcessorDispatcher)
+   {
+      // Both proxy and dum threads are down at this point, we can 
+      // destroy the async processor dispatcher and associated threads now
+      delete mAsyncProcessorDispatcher;
+      mAsyncProcessorDispatcher = 0;
+   }
+   if(!mRestarting && mCommandServerThread)  // we leave command server running during restart
+   {
+      mCommandServerThread->join();
+   }
+   if(mRegSyncServerThread)
+   {
+      mRegSyncServerThread->join();
+   }
+   if(mRegSyncClient)
+   {
+      mRegSyncClient->join();
+   }
+
+   mSipStack->setCongestionManager(0);
+
+   cleanupObjects();
+   mRunning = false;
+}
+
+void
+ReproRunner::restart()
+{
+   if(!mRunning) return;
+   mRestarting = true;
+   shutdown();
+   run(0, 0);
+   mRestarting = false;
+}
+
+void
+ReproRunner::cleanupObjects()
+{
+   delete mCongestionManager; mCongestionManager = 0;
+   if(!mRestarting)
+   {
+      // We leave command server running during restart
+      delete mCommandServerThread; mCommandServerThread = 0;
+      delete mCommandServerV6; mCommandServerV6 = 0;
+      delete mCommandServerV4; mCommandServerV4 = 0;
+   }
+   delete mRegSyncServerThread; mRegSyncServerThread = 0;
+   delete mRegSyncServerV6; mRegSyncServerV6 = 0;
+   delete mRegSyncServerV4; mRegSyncServerV4 = 0;
+   delete mRegSyncClient; mRegSyncClient = 0;
+#if defined(USE_SSL)
+   delete mCertServer; mCertServer = 0;
+#endif
+   delete mDumThread; mDumThread = 0;
+   delete mDum; mDum = 0;
+   delete mRegistrar; mRegistrar = 0;
+   delete mWebAdminThread; mWebAdminThread = 0;
+   delete mWebAdmin; mWebAdmin = 0;
+   delete mProxy; mProxy = 0;
+   delete mBaboons; mBaboons = 0;
+   delete mLemurs; mLemurs = 0;
+   delete mMonkeys; mMonkeys = 0;
+   delete mAuthRequestDispatcher; mAuthRequestDispatcher = 0;
+   delete mAsyncProcessorDispatcher; mAsyncProcessorDispatcher = 0;
+   if(!mRestarting) 
+   {
+      // If we are restarting then leave the In Memory Registration database intact
+      delete mRegistrationPersistenceManager; mRegistrationPersistenceManager = 0;
+   }
+   delete mAbstractDb; mAbstractDb = 0;
+   delete mStackThread; mStackThread = 0;
+   delete mSipStack; mSipStack = 0;
+   delete mAsyncProcessHandler; mAsyncProcessHandler = 0;
+   delete mFdPollGrp; mFdPollGrp = 0;
+   delete mProxyConfig; mProxyConfig = 0;
+}
+
+bool
+ReproRunner::createSipStack()
+{
+   // Override T1 timer if configured to do so
+   unsigned long overrideT1 = mProxyConfig->getConfigInt("TimerT1", 0);
+   if(overrideT1)
+   {
+      WarningLog(<< "Overriding T1! (new value is " << 
+               overrideT1 << ")");
+      resip::Timer::resetT1(overrideT1);
+   }
+
+   // Create Security (TLS / Certificates) and Compression (SigComp) objects if
+   // pre-precessor defines are enabled
+   Security* security = 0;
+   Compression* compression = 0;
+#ifdef USE_SSL
+#ifdef WIN32
+   Data certPath("C:\\sipCerts");
+#else 
+   Data certPath(getenv("HOME"));
+   certPath += "/.sipCerts";
+#endif
+   mProxyConfig->getConfigValue("CertificatePath", certPath);
+   security = new Security(certPath);
+   Data caDir;
+   mProxyConfig->getConfigValue("CADirectory", caDir);
+   if(!caDir.empty())
+   {
+      security->addCADirectory(caDir);
+   }
+   Data caFile;
+   mProxyConfig->getConfigValue("CAFile", caFile);
+   if(!caFile.empty())
+   {
+      security->addCAFile(caFile);
+   }
+#endif
+
+#ifdef USE_SIGCOMP
+   compression = new Compression(Compression::DEFLATE);
+#endif
+
+   // Create EventThreadInterruptor used to wake up the stack for 
+   // for reasons other than an Fd signalling
+   assert(!mFdPollGrp);
+   mFdPollGrp = FdPollGrp::create();
+   assert(!mAsyncProcessHandler);
+   mAsyncProcessHandler = new EventThreadInterruptor(*mFdPollGrp);
+
+   // Set Flags that will enable/disable IPv4 and/or IPv6, based on 
+   // configuration and pre-processor flags
+   mUseV4 = !mProxyConfig->getConfigBool("DisableIPv4", false);
+#ifdef USE_IPV6
+   mUseV6 = mProxyConfig->getConfigBool("EnableIPv6", true);
+#else
+   bool useV6 = false;
+#endif
+   if (mUseV4) InfoLog (<< "V4 enabled");
+   if (mUseV6) InfoLog (<< "V6 enabled");
+
+   // Build DNS Server list from config
+   DnsStub::NameserverList dnsServers;
+   std::vector<resip::Data> dnsServersConfig;
+   mProxyConfig->getConfigValue("DNSServers", dnsServersConfig);
+   for(std::vector<resip::Data>::iterator it = dnsServersConfig.begin(); it != dnsServersConfig.end(); it++)
+   {
+      if((mUseV4 && DnsUtil::isIpV4Address(*it)) || (mUseV6 && DnsUtil::isIpV6Address(*it)))
+      {
+         InfoLog(<< "Using DNS Server from config: " << *it);
+         dnsServers.push_back(Tuple(*it, 0, UNKNOWN_TRANSPORT).toGenericIPAddress());
+      }
+   }
+
+   // Create the SipStack Object
+   assert(!mSipStack);
+   mSipStack = new SipStack(security,
+                            dnsServers,
+                            mAsyncProcessHandler,
+                            /*stateless*/false,
+                            /*socketFunc*/0,
+                            compression,
+                            mFdPollGrp);
+
+   // Set any enum suffixes from configuration
+   std::vector<Data> enumSuffixes;
+   mProxyConfig->getConfigValue("EnumSuffixes", enumSuffixes);
+   if (enumSuffixes.size() > 0)
+   {
+      mSipStack->setEnumSuffixes(enumSuffixes);
+   }
+
+   // Add stack transports
+   bool allTransportsSpecifyRecordRoute=false;
+   if(!addTransports(allTransportsSpecifyRecordRoute))
+   {
+      cleanupObjects();
+      return false;
+   }
+
+   // Enable and configure RFC5626 Outbound support
+   InteropHelper::setOutboundVersion(mProxyConfig->getConfigInt("OutboundVersion", 5626));
+   InteropHelper::setOutboundSupported(mProxyConfig->getConfigBool("DisableOutbound", false) ? false : true);
+   InteropHelper::setRRTokenHackEnabled(mProxyConfig->getConfigBool("EnableFlowTokens", false));
+   InteropHelper::setAssumeFirstHopSupportsOutboundEnabled(mProxyConfig->getConfigBool("AssumeFirstHopSupportsOutbound", false));
+   Data clientNATDetectionMode = mProxyConfig->getConfigData("ClientNatDetectionMode", "DISABLED");
+   if(isEqualNoCase(clientNATDetectionMode, "ENABLED"))
+   {
+      InteropHelper::setClientNATDetectionMode(InteropHelper::ClientNATDetectionEnabled);
+   }
+   else if(isEqualNoCase(clientNATDetectionMode, "PRIVATE_TO_PUBLIC"))
+   {
+      InteropHelper::setClientNATDetectionMode(InteropHelper::ClientNATDetectionPrivateToPublicOnly);
+   }
+   unsigned long outboundFlowTimer = mProxyConfig->getConfigUnsignedLong("FlowTimer", 0);
+   if(outboundFlowTimer > 0)
+   {
+      InteropHelper::setFlowTimerSeconds(outboundFlowTimer);
+      ConnectionManager::MinimumGcAge = 7200000; // Timeout connections not related to a flow timer after 2 hours - TODO make configurable
+      ConnectionManager::EnableAgressiveGc = true;
+   }
+
+   // Check Path and RecordRoute settings, print warning if features are enabled that
+   // require record-routing and record-route uri(s) is not configured
+   bool assumePath = mProxyConfig->getConfigBool("AssumePath", false);
+   bool forceRecordRoute = mProxyConfig->getConfigBool("ForceRecordRouting", false);
+   Uri recordRouteUri;
+   mProxyConfig->getConfigValue("RecordRouteUri", recordRouteUri);
+   if((InteropHelper::getOutboundSupported() 
+         || InteropHelper::getRRTokenHackEnabled()
+         || InteropHelper::getClientNATDetectionMode() != InteropHelper::ClientNATDetectionDisabled
+         || assumePath
+         || forceRecordRoute
+      )
+      && !(allTransportsSpecifyRecordRoute || !recordRouteUri.host().empty()))
+   {
+      CritLog(<< "In order for outbound support, the Record-Route flow-token"
+      " hack, or force-record-route to work, you MUST specify a Record-Route URI. Launching "
+      "without...");
+      InteropHelper::setOutboundSupported(false);
+      InteropHelper::setRRTokenHackEnabled(false);
+      InteropHelper::setClientNATDetectionMode(InteropHelper::ClientNATDetectionDisabled);
+      assumePath = false;
+      forceRecordRoute=false;
+   }
+
+   // Configure misc. stack settings
+   mSipStack->setFixBadDialogIdentifiers(false);
+   mSipStack->setFixBadCSeqNumbers(false);
+   int statsLogInterval = mProxyConfig->getConfigInt("StatisticsLogInterval", 60);
+   if(statsLogInterval > 0)
+   {
+      mSipStack->setStatisticsInterval(statsLogInterval);
+      mSipStack->statisticsManagerEnabled() = true;
+   }
+   else
+   {
+      mSipStack->statisticsManagerEnabled() = false;
+   }
+
+   // Create Congestion Manager, if required
+   assert(!mCongestionManager);
+   if(mProxyConfig->getConfigBool("CongestionManagement", true))
+   {
+      Data metricData = mProxyConfig->getConfigData("CongestionManagementMetric", "WAIT_TIME", true);
+      GeneralCongestionManager::MetricType metric = GeneralCongestionManager::WAIT_TIME;
+      if(isEqualNoCase(metricData, "TIME_DEPTH"))
+      {
+         metric = GeneralCongestionManager::TIME_DEPTH;
+      }
+      else if(isEqualNoCase(metricData, "SIZE"))
+      {
+         metric = GeneralCongestionManager::SIZE;
+      }
+      else if(!isEqualNoCase(metricData, "WAIT_TIME"))
+      {
+         WarningLog( << "CongestionManagementMetric specified as an unknown value (" << metricData << "), defaulting to WAIT_TIME.");
+      }
+      mCongestionManager = new GeneralCongestionManager(
+                                          metric, 
+                                          mProxyConfig->getConfigUnsignedLong("CongestionManagementTolerance", 200));
+      mSipStack->setCongestionManager(mCongestionManager);
+   }
+
+   // Create base thread to run stack in (note:  stack may use other sub-threads, depending on configuration)
+   assert(!mStackThread);
+   mStackThread = new EventStackThread(*mSipStack,
+                                       *dynamic_cast<EventThreadInterruptor*>(mAsyncProcessHandler),
+                                       *mFdPollGrp);
+   return true;
+}
+
+bool 
+ReproRunner::createDatastore()
+{
+   // Create Database access objects
+   assert(!mAbstractDb);
+#ifdef USE_MYSQL
+   Data mySQLServer;
+   mProxyConfig->getConfigValue("MySQLServer", mySQLServer);
+   if (!mySQLServer.empty())
+   {
+      mAbstractDb = new MySqlDb(mySQLServer, 
+                       mProxyConfig->getConfigData("MySQLUser", ""), 
+                       mProxyConfig->getConfigData("MySQLPassword", ""),
+                       mProxyConfig->getConfigData("MySQLDatabaseName", ""),
+                       mProxyConfig->getConfigUnsignedLong("MySQLPort", 0),
+                       mProxyConfig->getConfigData("MySQLCustomUserAuthQuery", ""));
+   }
+#endif
+   if (!mAbstractDb)
+   {
+      mAbstractDb = new BerkeleyDb(mProxyConfig->getConfigData("DatabasePath", "./", true));
+   }
+   assert(mAbstractDb);
+   if(!mAbstractDb->isSane())
+   {
+      CritLog(<<"Failed to open configuration database");
+      cleanupObjects();
+      return false;
+   }
+   mProxyConfig->createDataStore(mAbstractDb);
+
+   // Create ImMemory Registration Database
+   mRegSyncPort = mProxyConfig->getConfigInt("RegSyncPort", 0);
+   // We only need removed records to linger if we have reg sync enabled
+   if(!mRestarting)  // If we are restarting then we left the InMemoryRegistrationDb intact at shutdown - don't recreate
+   {
+      assert(!mRegistrationPersistenceManager);
+      mRegistrationPersistenceManager = new InMemorySyncRegDb(mRegSyncPort ? 86400 /* 24 hours */ : 0 /* removeLingerSecs */);  // !slg! could make linger time a setting
+   }
+   assert(mRegistrationPersistenceManager);
+
+   // Copy contacts from the StaticRegStore to the RegistrationPersistanceManager
+   populateRegistrations();
+
+   return true;
+}
+
+void
+ReproRunner::createDialogUsageManager()
+{
+   // Create Profile settings for DUM Instance that handles ServerRegistration,
+   // and potentially certificate subscription server
+   SharedPtr<MasterProfile> profile(new MasterProfile);
+   profile->clearSupportedMethods();
+   profile->addSupportedMethod(resip::REGISTER);
+#ifdef USE_SSL
+   profile->addSupportedScheme(Symbols::Sips);
+#endif
+   if(InteropHelper::getOutboundSupported())
+   {
+      profile->addSupportedOptionTag(Token(Symbols::Outbound));
+   }
+   profile->addSupportedOptionTag(Token(Symbols::Path));
+   if(mProxyConfig->getConfigBool("AllowBadReg", false))
+   {
+       profile->allowBadRegistrationEnabled() = true;
+   }
+   
+   // Create DialogeUsageManager if Registrar or Certificate Server are enabled
+   assert(!mRegistrar);
+   assert(!mDum);
+   assert(!mDumThread);
+   mRegistrar = new Registrar;
+   resip::MessageFilterRuleList ruleList;
+   bool registrarEnabled = !mProxyConfig->getConfigBool("DisableRegistrar", false);
+   bool certServerEnabled = mProxyConfig->getConfigBool("EnableCertServer", false);
+   if (registrarEnabled || certServerEnabled)
+   {
+      mDum = new DialogUsageManager(*mSipStack);
+      mDum->setMasterProfile(profile);
+      addDomains(*mDum, false /* log? already logged when adding to Proxy - no need to log again*/);
+   }
+
+   // If registrar is enabled, configure DUM to handle REGISTER requests
+   if (registrarEnabled)
+   {   
+      assert(mDum);
+      assert(mRegistrationPersistenceManager);
+      mDum->setServerRegistrationHandler(mRegistrar);
+      mDum->setRegistrationPersistenceManager(mRegistrationPersistenceManager);
+
+      // Install rules so that the registrar only gets REGISTERs
+      resip::MessageFilterRule::MethodList methodList;
+      methodList.push_back(resip::REGISTER);
+      ruleList.push_back(MessageFilterRule(resip::MessageFilterRule::SchemeList(),
+                                           resip::MessageFilterRule::DomainIsMe,
+                                           methodList) );
+   }
+   
+   // If Certificate Server is enabled, configure DUM to handle SUBSCRIBE and 
+   // PUBLISH requests for events: credential and certificate
+   assert(!mCertServer);
+   if (certServerEnabled)
+   {
+#if defined(USE_SSL)
+      mCertServer = new CertServer(*mDum);
+
+      // Install rules so that the cert server receives SUBSCRIBEs and PUBLISHs
+      resip::MessageFilterRule::MethodList methodList;
+      resip::MessageFilterRule::EventList eventList;
+      methodList.push_back(resip::SUBSCRIBE);
+      methodList.push_back(resip::PUBLISH);
+      eventList.push_back(resip::Symbols::Credential);
+      eventList.push_back(resip::Symbols::Certificate);
+      ruleList.push_back(MessageFilterRule(resip::MessageFilterRule::SchemeList(),
+                                           resip::MessageFilterRule::DomainIsMe,
+                                           methodList,
+                                           eventList));
+#endif
+   }
+
+   if (mDum)
+   {
+      if(mProxyConfig->getConfigBool("EnableCertificateAuthenticator", false))
+      {
+         // TODO: perhaps this should be initialised from the trusted node
+         // monkey?  Or should the list of trusted TLS peers be independent
+         // from the trusted node list?
+         std::set<Data> trustedPeers;
+         SharedPtr<TlsPeerAuthManager> certAuth(new TlsPeerAuthManager(*mDum, mDum->dumIncomingTarget(), trustedPeers));
+         mDum->addIncomingFeature(certAuth);
+      }
+
+      mSipAuthDisabled = mProxyConfig->getConfigBool("DisableAuth", false);
+
+      // If Authentication is enabled, then configure DUM to authenticate requests
+      if (!mSipAuthDisabled)
+      {
+         // Create UserAuthGrabber Worker Thread Pool if auth is enabled
+         assert(!mAuthRequestDispatcher);
+         int numAuthGrabberWorkerThreads = mProxyConfig->getConfigInt("NumAuthGrabberWorkerThreads", 2);
+         if(numAuthGrabberWorkerThreads < 1) numAuthGrabberWorkerThreads = 1; // must have at least one thread
+         std::auto_ptr<Worker> grabber(new UserAuthGrabber(mProxyConfig->getDataStore()->mUserStore));
+         mAuthRequestDispatcher = new Dispatcher(grabber, mSipStack, numAuthGrabberWorkerThreads);
+
+         SharedPtr<ServerAuthManager> 
+            uasAuth( new ReproServerAuthManager(*mDum,
+                                                mAuthRequestDispatcher,
+                                                mProxyConfig->getDataStore()->mAclStore,
+                                                !mProxyConfig->getConfigBool("DisableAuthInt", false) /*useAuthInt*/,
+                                                mProxyConfig->getConfigBool("RejectBadNonces", false)));
+         mDum->setServerAuthManager(uasAuth);
+      }
+
+      // Set the MessageFilterRuleList on DUM and create a thread to run DUM in
+      mDum->setMessageFilterRuleList(ruleList);
+      mDumThread = new DumThread(*mDum);
+   }   
+}
+
+bool
+ReproRunner::createProxy()
+{
+   // Create AsyncProcessorDispatcher thread pool that is shared by the processsors for
+   // any asyncronous tasks (ie: RequestFilter and MessageSilo processors)
+   int numAsyncProcessorWorkerThreads = mProxyConfig->getConfigInt("NumAsyncProcessorWorkerThreads", 2);
+   if(numAsyncProcessorWorkerThreads > 0)
+   {
+      assert(!mAsyncProcessorDispatcher);
+      mAsyncProcessorDispatcher = new Dispatcher(std::auto_ptr<Worker>(new AsyncProcessorWorker), 
+                                                 mSipStack, 
+                                                 numAsyncProcessorWorkerThreads);
+   }
+
+   // Create proxy processor chains
+   /* Explanation:  "Monkeys" are processors which operate on incoming requests
+                    "Lemurs"  are processors which operate on incoming responses
+                    "Baboons" are processors which operate on a request for each target  
+                              as the request is about to be forwarded to that target */
+   // Make Monkeys
+   assert(!mMonkeys);
+   mMonkeys = new ProcessorChain(Processor::REQUEST_CHAIN);
+   makeRequestProcessorChain(*mMonkeys);
+   InfoLog(<< *mMonkeys);
+
+   // Make Lemurs
+   assert(!mLemurs);
+   mLemurs = new ProcessorChain(Processor::RESPONSE_CHAIN);
+   makeResponseProcessorChain(*mLemurs);
+   InfoLog(<< *mLemurs);
+
+   // Make Baboons
+   assert(!mBaboons);
+   mBaboons = new ProcessorChain(Processor::TARGET_CHAIN);
+   makeTargetProcessorChain(*mBaboons);
+   InfoLog(<< *mBaboons);
+
+   // Create main Proxy class
+   assert(!mProxy);
+   mProxy = new Proxy(*mSipStack, 
+                      *mProxyConfig, 
+                      *mMonkeys, 
+                      *mLemurs, 
+                      *mBaboons);
+   mHttpRealm = addDomains(*mProxy, true);
+
+   // Register the Proxy class a stack transaction user
+   // Note:  This is done after creating the DialogUsageManager so that it acts 
+   // like a catchall and will handle all requests the DUM does not
+   mSipStack->registerTransactionUser(*mProxy);
+
+   return true;
+}
+
+void 
+ReproRunner::populateRegistrations()
+{
+   assert(mRegistrationPersistenceManager);
+   assert(mProxyConfig);
+   assert(mProxyConfig->getDataStore());
+
+   // Copy contacts from the StaticRegStore to the RegistrationPersistanceManager
+   StaticRegStore::StaticRegRecordMap& staticRegList = mProxyConfig->getDataStore()->mStaticRegStore.getStaticRegList();
+   StaticRegStore::StaticRegRecordMap::iterator it = staticRegList.begin();
+   for(; it != staticRegList.end(); it++)
+   {
+      try
+      {
+         Uri aor(it->second.mAor);
+
+         ContactInstanceRecord rec;
+         rec.mContact = NameAddr(it->second.mContact);
+         rec.mSipPath = NameAddrs(it->second.mPath);
+         rec.mRegExpires = NeverExpire;
+         rec.mSyncContact = true;  // Tag this permanent contact as being a syncronized contact so that it will
+                                    // be syncronized to a paired server (this is actually configuration information)
+         mRegistrationPersistenceManager->updateContact(aor, rec);
+      }
+      catch(resip::ParseBuffer::Exception& e)  
+      {
+         // This should never happen, since the format should be verified before writing to DB
+         ErrLog(<<"Failed to apply a static registration due to parse error: " << e);
+      }
+   }
+}
+
+bool
+ReproRunner::createWebAdmin()
+{
+   assert(!mWebAdmin);
+   assert(!mWebAdminThread);
+   int httpPort = mProxyConfig->getConfigInt("HttpPort", 5080);
+   if (httpPort) 
+   {
+      mWebAdmin = new WebAdmin(*mProxy,
+                               *mRegistrationPersistenceManager, 
+                               mHttpRealm, 
+                               httpPort);
+      if (!mWebAdmin->isSane())
+      {
+         CritLog(<<"Failed to start the WebAdmin");
+         cleanupObjects();
+         return false;
+      }
+      mWebAdminThread = new WebAdminThread(*mWebAdmin);
+   }
+   return true;
+}
+
+void
+ReproRunner::createRegSync()
+{
+   assert(!mRegSyncClient);
+   assert(!mRegSyncServerV4);
+   assert(!mRegSyncServerV6);
+   assert(!mRegSyncServerThread);
+   if(mRegSyncPort != 0)
+   {
+      std::list<RegSyncServer*> regSyncServerList;
+      if(mUseV4) 
+      {
+         mRegSyncServerV4 = new RegSyncServer(dynamic_cast<InMemorySyncRegDb*>(mRegistrationPersistenceManager), mRegSyncPort, V4);
+         regSyncServerList.push_back(mRegSyncServerV4);
+      }
+      if(mUseV6) 
+      {
+         mRegSyncServerV6 = new RegSyncServer(dynamic_cast<InMemorySyncRegDb*>(mRegistrationPersistenceManager), mRegSyncPort, V6);
+         regSyncServerList.push_back(mRegSyncServerV6);
+      }
+      if(!regSyncServerList.empty())
+      {
+         mRegSyncServerThread = new RegSyncServerThread(regSyncServerList);
+      }
+      Data regSyncPeerAddress(mProxyConfig->getConfigData("RegSyncPeer", ""));
+      if(!regSyncPeerAddress.empty())
+      {
+         mRegSyncClient = new RegSyncClient(dynamic_cast<InMemorySyncRegDb*>(mRegistrationPersistenceManager), regSyncPeerAddress, mRegSyncPort);
+      }
+   }
+}
+
+void
+ReproRunner::createCommandServer()
+{
+   assert(!mCommandServerV4);
+   assert(!mCommandServerV6);
+   assert(!mCommandServerThread);
+   int commandPort = mProxyConfig->getConfigInt("CommandPort", 5081);
+   if(commandPort != 0)
+   {
+      std::list<CommandServer*> commandServerList;
+      if(mUseV4) 
+      {
+         mCommandServerV4 = new CommandServer(*this, commandPort, V4);
+         commandServerList.push_back(mCommandServerV4);
+      }
+      if(mUseV6) 
+      {
+         mCommandServerV6 = new CommandServer(*this, commandPort, V6);
+         commandServerList.push_back(mCommandServerV6);
+      }
+      if(!commandServerList.empty())
+      {
+         mCommandServerThread = new CommandServerThread(commandServerList);
+      }
+   }
+}
+
+Data
+ReproRunner::addDomains(TransactionUser& tu, bool log)
+{
+   assert(mProxyConfig);
+   Data realm;
+   
+   std::vector<Data> configDomains;
+   if(mProxyConfig->getConfigValue("Domains", configDomains))
+   {
+      for (std::vector<Data>::const_iterator i=configDomains.begin(); 
+         i != configDomains.end(); ++i)
+      {
+         if(log) InfoLog (<< "Adding domain " << *i << " from command line");
+         tu.addDomain(*i);
+         if ( realm.empty() )
+         {
+            realm = *i;
+         }
+      }
+   }
+
+   const ConfigStore::ConfigData& dList = mProxyConfig->getDataStore()->mConfigStore.getConfigs();
+   for (ConfigStore::ConfigData::const_iterator i=dList.begin(); 
+           i != dList.end(); ++i)
+   {
+      if(log) InfoLog (<< "Adding domain " << i->second.mDomain << " from config");
+      tu.addDomain( i->second.mDomain );
+      if ( realm.empty() )
+      {
+         realm = i->second.mDomain;
+      }
+   }
+
+   Data localhostname(DnsUtil::getLocalHostName());
+   if(log) InfoLog (<< "Adding local hostname domain " << localhostname );
+   tu.addDomain(localhostname);
+   if ( realm.empty() )
+   {
+      realm = localhostname;
+   }
+
+   if(log) InfoLog (<< "Adding localhost domain.");
+   tu.addDomain("localhost");
+   if ( realm.empty() )
+   {
+      realm = "localhost";
+   }
+   
+   list<pair<Data,Data> > ips = DnsUtil::getInterfaces();
+   for ( list<pair<Data,Data> >::const_iterator i=ips.begin(); i!=ips.end(); i++)
+   {
+      if(log) InfoLog( << "Adding domain for IP " << i->second << " from interface " << i->first  );
+      tu.addDomain(i->second);
+   }
+
+   if(log) InfoLog (<< "Adding 127.0.0.1 domain.");
+   tu.addDomain("127.0.0.1");
+
+   return realm;
+}
+
+bool
+ReproRunner::addTransports(bool& allTransportsSpecifyRecordRoute)
+{
+   assert(mProxyConfig);
+   assert(mSipStack);
+   allTransportsSpecifyRecordRoute=false;
+   bool useEmailAsSIP = mProxyConfig->getConfigBool("TLSUseEmailAsSIP", false);
+   try
+   {
+      // Check if advanced transport settings are provided
+      unsigned int transportNum = 1;
+      Data settingKeyBase("Transport" + Data(transportNum));
+      Data interfaceSettingKey(settingKeyBase + "Interface");
+      Data interfaceSettings = mProxyConfig->getConfigData(interfaceSettingKey, "", true);
+      if(!interfaceSettings.empty())
+      {
+         // Sample config file format for advanced transport settings
+         // Transport1Interface = 192.168.1.106:5061
+         // Transport1Type = TLS
+         // Transport1TlsDomain = sipdomain.com
+         // Transport1TlsClientVerification = None
+         // Transport1RecordRouteUri = sip:sipdomain.com;transport=TLS
+         // Transport1RcvBufLen = 2000
+
+         allTransportsSpecifyRecordRoute = true;
+
+         const char *anchor;
+         while(!interfaceSettings.empty())
+         {
+            Data typeSettingKey(settingKeyBase + "Type");
+            Data tlsDomainSettingKey(settingKeyBase + "TlsDomain");
+            Data tlsCVMSettingKey(settingKeyBase + "TlsClientVerification");
+            Data recordRouteUriSettingKey(settingKeyBase + "RecordRouteUri");
+            Data rcvBufSettingKey(settingKeyBase + "RcvBufLen");
+
+            // Parse out interface settings
+            ParseBuffer pb(interfaceSettings);
+            anchor = pb.position();
+            pb.skipToChar(':');
+            if(!pb.eof())
+            {
+               Data ipAddr;
+               Data portData;
+               pb.data(ipAddr, anchor);
+               pb.skipChar();
+               anchor = pb.position();
+               pb.skipToEnd();
+               pb.data(portData, anchor);
+               if(!DnsUtil::isIpAddress(ipAddr))
+               {
+                  CritLog(<< "Malformed IP-address found in " << interfaceSettingKey << " setting: " << ipAddr);
+               }
+               int port = portData.convertInt();
+               if(port == 0)
+               {
+                  CritLog(<< "Invalid port found in " << interfaceSettingKey << " setting: " << port);
+               }
+               TransportType tt = Tuple::toTransport(mProxyConfig->getConfigData(typeSettingKey, "UDP"));
+               if(tt == UNKNOWN_TRANSPORT)
+               {
+                  CritLog(<< "Unknown transport type found in " << typeSettingKey << " setting: " << mProxyConfig->getConfigData(typeSettingKey, "UDP"));
+               }
+               Data tlsDomain = mProxyConfig->getConfigData(tlsDomainSettingKey, "");
+               Data tlsCVMValue = mProxyConfig->getConfigData(tlsCVMSettingKey, "NONE");
+               SecurityTypes::TlsClientVerificationMode cvm = SecurityTypes::None;
+               if(isEqualNoCase(tlsCVMValue, "Optional"))
+               {
+                  cvm = SecurityTypes::Optional;
+               }
+               else if(isEqualNoCase(tlsCVMValue, "Mandatory"))
+               {
+                  cvm = SecurityTypes::Mandatory;
+               }
+               else if(!isEqualNoCase(tlsCVMValue, "None"))
+               {
+                  CritLog(<< "Unknown TLS client verification mode found in " << tlsCVMSettingKey << " setting: " << tlsCVMValue);
+               }
+               int rcvBufLen = mProxyConfig->getConfigInt(rcvBufSettingKey, 0);
+               Transport *t = mSipStack->addTransport(tt,
+                                 port,
+                                 DnsUtil::isIpV6Address(ipAddr) ? V6 : V4,
+                                 StunEnabled, 
+                                 ipAddr,       // interface to bind to
+                                 tlsDomain,
+                                 Data::Empty,  // private key passphrase - not currently used
+                                 SecurityTypes::TLSv1, // sslType
+                                 0,            // transport flags
+                                 cvm,          // tls client verification mode
+                                 useEmailAsSIP);
+
+               if (t && rcvBufLen>0 )
+               {
+#if defined(RESIP_SIPSTACK_HAVE_FDPOLL)
+                  // this new method is part of the epoll changeset,
+                  // which isn't commited yet.
+                  t->setRcvBufLen(rcvBufLen);
+#else
+                   assert(0);
+#endif
+               }
+
+               Data recordRouteUri = mProxyConfig->getConfigData(recordRouteUriSettingKey, "");
+               if(!recordRouteUri.empty())
+               {
+                  try
+                  {
+                     if(isEqualNoCase(recordRouteUri, "auto")) // auto generated record route uri
+                     {
+                        if(tt == TLS || tt == DTLS)
+                        {
+                           NameAddr rr;
+                           rr.uri().host()=tlsDomain;
+                           rr.uri().port()=port;
+                           rr.uri().param(resip::p_transport)=resip::Tuple::toDataLower(tt);
+                           t->setRecordRoute(rr);
+                           InfoLog (<< "Transport specific record-route enabled (generated): " << rr);
+                        }
+                        else
+                        {
+                           NameAddr rr;
+                           rr.uri().host()=ipAddr;
+                           rr.uri().port()=port;
+                           rr.uri().param(resip::p_transport)=resip::Tuple::toDataLower(tt);
+                           t->setRecordRoute(rr);
+                           InfoLog (<< "Transport specific record-route enabled (generated): " << rr);
+                        }
+                     }
+                     else
+                     {
+                        NameAddr rr(recordRouteUri);
+                        t->setRecordRoute(rr);
+                        InfoLog (<< "Transport specific record-route enabled: " << rr);
+                     }
+                  }
+                  catch(BaseException& e)
+                  {
+                     ErrLog (<< "Invalid uri provided in " << recordRouteUriSettingKey << " setting (ignoring): " << e);
+                     allTransportsSpecifyRecordRoute = false;
+                  }
+               }
+               else 
+               {
+                  allTransportsSpecifyRecordRoute = false;
+               }
+            }
+            else
+            {
+               CritLog(<< "Port not specified in " << interfaceSettingKey << " setting: expected format is <IPAddress>:<Port>");
+               return false;
+            }
+
+            // Check if there is another transport
+            transportNum++;
+            settingKeyBase = Data("Transport" + Data(transportNum));
+            interfaceSettingKey = Data(settingKeyBase + "Interface");
+            interfaceSettings = mProxyConfig->getConfigData(interfaceSettingKey, "", true);
+         }
+      }
+      else
+      {
+         int udpPort = mProxyConfig->getConfigInt("UDPPort", 5060);
+         int tcpPort = mProxyConfig->getConfigInt("TCPPort", 5060);
+         int tlsPort = mProxyConfig->getConfigInt("TLSPort", 5061);
+		 int wsPort = mProxyConfig->getConfigInt("WSPort", 5062);
+         int dtlsPort = mProxyConfig->getConfigInt("DTLSPort", 0);
+         Data tlsDomain = mProxyConfig->getConfigData("TLSDomainName", "");
+         Data tlsCVMValue = mProxyConfig->getConfigData("TLSClientVerification", "NONE");
+         SecurityTypes::TlsClientVerificationMode cvm = SecurityTypes::None;
+         if(isEqualNoCase(tlsCVMValue, "Optional"))
+         {
+            cvm = SecurityTypes::Optional;
+         }
+         else if(isEqualNoCase(tlsCVMValue, "Mandatory"))
+         {
+            cvm = SecurityTypes::Mandatory;
+         }
+         else if(!isEqualNoCase(tlsCVMValue, "None"))
+         {
+            CritLog(<< "Unknown TLS client verification mode found in TLSClientVerification setting: " << tlsCVMValue);
+         }
+
+         if (udpPort)
+         {
+            if (mUseV4) mSipStack->addTransport(UDP, udpPort, V4, StunEnabled);
+            if (mUseV6) mSipStack->addTransport(UDP, udpPort, V6, StunEnabled);
+         }
+         if (tcpPort)
+         {
+            if (mUseV4) mSipStack->addTransport(TCP, tcpPort, V4, StunEnabled);
+            if (mUseV6) mSipStack->addTransport(TCP, tcpPort, V6, StunEnabled);
+         }
+         if (tlsPort)
+         {
+            if (mUseV4) mSipStack->addTransport(TLS, tlsPort, V4, StunEnabled, Data::Empty, tlsDomain, Data::Empty, SecurityTypes::TLSv1, 0, cvm, useEmailAsSIP);
+            if (mUseV6) mSipStack->addTransport(TLS, tlsPort, V6, StunEnabled, Data::Empty, tlsDomain, Data::Empty, SecurityTypes::TLSv1, 0, cvm, useEmailAsSIP);
+         }
+		 if (wsPort)
+		 {
+			if (mUseV4) mSipStack->addTransport(WS, wsPort, V4, StunEnabled);
+            if (mUseV6) mSipStack->addTransport(WS, wsPort, V6, StunEnabled);
+		 }
+         if (dtlsPort)
+         {
+            if (mUseV4) mSipStack->addTransport(DTLS, dtlsPort, V4, StunEnabled, Data::Empty, tlsDomain);
+            if (mUseV6) mSipStack->addTransport(DTLS, dtlsPort, V6, StunEnabled, Data::Empty, tlsDomain);
+         }
+      }
+   }
+   catch (BaseException& e)
+   {
+      std::cerr << "Likely a port is already in use" << endl;
+      InfoLog (<< "Caught: " << e);
+      return false;
+   }
+   return true;
+}
+
+void 
+ReproRunner::addProcessor(repro::ProcessorChain& chain, std::auto_ptr<Processor> processor)
+{
+   chain.addProcessor(processor);
+}
+
+void  // Monkeys
+ReproRunner::makeRequestProcessorChain(ProcessorChain& chain)
+{
+   assert(mProxyConfig);
+   assert(mRegistrationPersistenceManager);
+
+   // Add strict route fixup monkey
+   addProcessor(chain, std::auto_ptr<Processor>(new StrictRouteFixup));
+
+   // Add is trusted node monkey
+   addProcessor(chain, std::auto_ptr<Processor>(new IsTrustedNode(*mProxyConfig)));
+
+   // Add Certificate Authenticator - if required
+   if(mProxyConfig->getConfigBool("EnableCertificateAuthenticator", false) && mAuthRequestDispatcher)
+   {
+      // TODO: perhaps this should be initialised from the trusted node
+      // monkey?  Or should the list of trusted TLS peers be independent
+      // from the trusted node list?
+      // Should we used the same trustedPeers object that was
+      // passed to TlsPeerAuthManager perhaps?
+      std::set<Data> trustedPeers;
+      addProcessor(chain, std::auto_ptr<Processor>(new CertificateAuthenticator(*mProxyConfig, mSipStack, trustedPeers)));
+   }
+
+   // Add digest authenticator monkey - if required
+   if (!mSipAuthDisabled)
+   {
+      assert(mAuthRequestDispatcher);
+      DigestAuthenticator* da = new DigestAuthenticator(*mProxyConfig, mAuthRequestDispatcher);
+
+      addProcessor(chain, std::auto_ptr<Processor>(da));
+   }
+
+   // Add am I responsible monkey
+   addProcessor(chain, std::auto_ptr<Processor>(new AmIResponsible)); 
+
+   // Add RequestFilter monkey
+   if(!mProxyConfig->getConfigBool("DisableRequestFilterProcessor", false))
+   {
+      if(mAsyncProcessorDispatcher)
+      {
+         addProcessor(chain, std::auto_ptr<Processor>(new RequestFilter(*mProxyConfig, mAsyncProcessorDispatcher)));
+      }
+      else
+      {
+         WarningLog(<< "Could not start RequestFilter Processor due to no worker thread pool (NumAsyncProcessorWorkerThreads=0)");
+      }
+   }
+
+   // [TODO] support for GRUU is on roadmap.  When it is added the GruuMonkey will go here
+      
+   // [TODO] support for Manipulating Tel URIs is on the roadmap.
+   //        When added, the telUriMonkey will go here 
+
+   std::vector<Data> routeSet;
+   mProxyConfig->getConfigValue("Routes", routeSet);
+   if (routeSet.empty())
+   {
+      // add static route monkey
+      addProcessor(chain, std::auto_ptr<Processor>(new StaticRoute(*mProxyConfig))); 
+   }
+   else
+   {
+      // add simple static route monkey
+      addProcessor(chain, std::auto_ptr<Processor>(new SimpleStaticRoute(*mProxyConfig))); 
+   }
+
+   // Add location server monkey
+   addProcessor(chain, std::auto_ptr<Processor>(new LocationServer(*mProxyConfig, *mRegistrationPersistenceManager, mAuthRequestDispatcher)));
+
+   // Add message silo monkey
+   if(mProxyConfig->getConfigBool("MessageSiloEnabled", false))
+   {
+      if(mAsyncProcessorDispatcher && mRegistrar)
+      {
+         MessageSilo* silo = new MessageSilo(*mProxyConfig, mAsyncProcessorDispatcher);
+         mRegistrar->addRegistrarHandler(silo);
+         addProcessor(chain, std::auto_ptr<Processor>(silo));
+      }
+      else
+      {
+         WarningLog(<< "Could not start MessageSilo Processor due to no worker thread pool (NumAsyncProcessorWorkerThreads=0) or Registrar");
+      }
+   }
+}
+
+void  // Lemurs
+ReproRunner::makeResponseProcessorChain(ProcessorChain& chain)
+{
+   assert(mProxyConfig);
+   assert(mRegistrationPersistenceManager);
+
+   // Add outbound target handler lemur
+   addProcessor(chain, std::auto_ptr<Processor>(new OutboundTargetHandler(*mRegistrationPersistenceManager))); 
+
+   if (mProxyConfig->getConfigBool("RecursiveRedirect", false))
+   {
+      // Add recursive redirect lemur
+      addProcessor(chain, std::auto_ptr<Processor>(new RecursiveRedirect)); 
+   }
+}
+
+void  // Baboons
+ReproRunner::makeTargetProcessorChain(ProcessorChain& chain)
+{
+   assert(mProxyConfig);
+
+#ifndef RESIP_FIXED_POINT
+   if(mProxyConfig->getConfigBool("GeoProximityTargetSorting", false))
+   {
+      addProcessor(chain, std::auto_ptr<Processor>(new GeoProximityTargetSorter(*mProxyConfig)));
+   }
+#endif
+
+   if(mProxyConfig->getConfigBool("QValue", true))
+   {
+      // Add q value target handler baboon
+      addProcessor(chain, std::auto_ptr<Processor>(new QValueTargetHandler(*mProxyConfig))); 
+   }
+   
+   // Add simple target handler baboon
+   addProcessor(chain, std::auto_ptr<Processor>(new SimpleTargetHandler)); 
+}
+
+
+/* ====================================================================
+ * The Vovida Software License, Version 1.0 
+ * 
+ * Copyright (c) 2000 Vovida Networks, Inc.  All rights reserved.
+ * 
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in
+ *    the documentation and/or other materials provided with the
+ *    distribution.
+ * 
+ * 3. The names "VOCAL", "Vovida Open Communication Application Library",
+ *    and "Vovida Open Communication Application Library (VOCAL)" must
+ *    not be used to endorse or promote products derived from this
+ *    software without prior written permission. For written
+ *    permission, please contact vocal@vovida.org.
+ *
+ * 4. Products derived from this software may not be called "VOCAL", nor
+ *    may "VOCAL" appear in their name, without prior written
+ *    permission of Vovida Networks, Inc.
+ * 
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESSED OR IMPLIED
+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
+ * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND
+ * NON-INFRINGEMENT ARE DISCLAIMED.  IN NO EVENT SHALL VOVIDA
+ * NETWORKS, INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT DAMAGES
+ * IN EXCESS OF $1,000, NOR FOR ANY INDIRECT, INCIDENTAL, SPECIAL,
+ * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
+ * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
+ * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
+ * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
+ * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
+ * DAMAGE.
+ * 
+ * ====================================================================
+ */
Index: repro/ReproRunner.hxx
===================================================================
--- repro/ReproRunner.hxx	(revision 9737)
+++ repro/ReproRunner.hxx	(working copy)
@@ -4,6 +4,8 @@
 #include "rutil/Data.hxx"
 #include "rutil/ServerProcess.hxx"
 
+#include <memory>
+
 namespace resip
 {
    class TransactionUser;
Index: repro/RequestContext.cxx
===================================================================
--- repro/RequestContext.cxx	(revision 9737)
+++ repro/RequestContext.cxx	(working copy)
@@ -148,16 +148,32 @@
    if (sip->isRequest())
    {
       DebugLog(<<"Got a request.");
-      bool postProcess=false;
+
+	  bool postProcess = false;
+
+	  Uri& requestUri = sip->header(h_RequestLine).uri();
+	  if(requestUri.exists(resip::p_wsSrcIp) && requestUri.exists(resip::p_wsSrcPort) && sip->getSource().getType() != resip::WS){
+		  requestUri.host() = requestUri.param(resip::p_wsSrcIp);
+		  requestUri.remove(resip::p_wsSrcIp);
+		  requestUri.port() = requestUri.param(resip::p_wsSrcPort);
+		  requestUri.remove(resip::p_wsSrcPort);
+		  requestUri.param(resip::p_transport) = "WS";
+		  sip->setForceTarget(requestUri);
+	  }
+
       switch(mOriginalRequest->method())
       {
          case ACK:
             processRequestAckTransaction(sip,original);
             break;
+
          case INVITE:
-            postProcess=processRequestInviteTransaction(sip,original);
-            if(postProcess) doPostRequestProcessing(sip,original);
+			 {
+				postProcess=processRequestInviteTransaction(sip,original);
+				if(postProcess) doPostRequestProcessing(sip,original);
+			 }
             break;
+
          default:
             postProcess=processRequestNonInviteTransaction(sip,original);
             if(postProcess) doPostRequestProcessing(sip,original);
@@ -167,6 +183,7 @@
    {
       assert(!original);
       bool postProcess=false;
+
       switch(mOriginalRequest->method())
       {
          case ACK:
@@ -375,7 +392,7 @@
          handleSelfAimedStrayAck(msg);
       }
       // Note: mTopRoute is only populated if RemoveTopRouteIfSelf successfully removes the top route.
-      else if(!mTopRoute.uri().host().empty() || getProxy().isMyUri(msg->header(h_From).uri()))
+      else if(msg->getSource().getType() == resip::WS || msg->hasForceTarget() || !mTopRoute.uri().host().empty() || getProxy().isMyUri(msg->header(h_From).uri()))
       {
          // Top most route is us, or From header uri is ours.  Note:  The From check is 
          // required to interoperate with endpoints that configure outbound proxy 
@@ -621,10 +638,15 @@
       {
          ErrLog(<<"In RequestContext, after processing "
          << "a sip response (_not_ a NIT/408): all transactions are terminated,"
-         << " but we have not sent a final response. (What happened here?) ");
+         << " but we have not sent a final response. (What happened here?) -+");
 
+
+#if 0 // FIXME: this cause segmentation fault...why?
          // Send best response
          mResponseContext.forwardBestResponse();
+#else
+		 ErrLog(<<"Not calling forwardBestResponse() to avoid segmentation fault. By the wat, FD_SIZE=" << FD_SETSIZE);
+#endif
       }
    }
 }
Index: repro/monkeys/AmIResponsible.cxx
===================================================================
--- repro/monkeys/AmIResponsible.cxx	(revision 9737)
+++ repro/monkeys/AmIResponsible.cxx	(working copy)
@@ -118,15 +118,15 @@
             // for now, just see if the sender claims to be from one of our domains
             // send a 403 if not on the list
 
-            // .slg. Allow trusted nodes to relay
+            // .slg. Allow trusted nodes to relay 
             if (!context.getKeyValueStore().getBoolValue(IsTrustedNode::mFromTrustedNodeKey) && 
-                !context.getProxy().isMyUri(request.header(h_From).uri()))
+                !context.getProxy().isMyUri(request.header(h_From).uri()) && !request.hasForceTarget())
             {
                // make 403, send, dispose of memory
                resip::SipMessage response;
                InfoLog (<< *this << ": will not relay to " << uri << " from " 
                         << request.header(h_From).uri() << ", send 403");
-               Helper::makeResponse(response, context.getOriginalRequest(), 403, "Relaying Forbidden"); 
+               Helper::makeResponse(response, context.getOriginalRequest(), 403, "Relaying Forbidden");
                context.sendResponse(response);
                return Processor::SkipThisChain;
             }
Index: repro/repro.config
===================================================================
--- repro/repro.config	(revision 9737)
+++ repro/repro.config	(working copy)
@@ -9,12 +9,12 @@
 
 # Logging Type: syslog|cerr|cout|file
 # Note:  Logging to cout can negatively effect performance.
-#        When repro is placed into production 'file' or 
+#        When repro is placed into production 'file' or
 #        'syslog' should be used.
 LoggingType = cout
 
 # Logging level: NONE|CRIT|ERR|WARNING|INFO|DEBUG|STACK
-LogLevel = INFO
+LogLevel = DEBUG
 
 # Log Filename
 LogFilename = repro.log
@@ -34,14 +34,17 @@
 IPAddress =
 
 # Local port to listen on for SIP messages over UDP - 0 to disable
-UDPPort = 5060
+UDPPort = 4060
 
 # Local port to listen on for SIP messages over TCP - 0 to disable
-TCPPort = 5060
+TCPPort = 4060
 
 # Local port to listen on for SIP messages over TLS - 0 to disable
-TLSPort = 5061
+TLSPort = 0
 
+# Local port to listen on for SIP messages over WS (WebSocket) - 0 to disable
+WSPort = 4062
+
 # Local port to listen on for SIP messages over DTLS - 0 to disable
 DTLSPort = 0
 
@@ -103,9 +106,13 @@
 # Transport3TlsClientVerification = Mandatory
 # Transport3RecordRouteUri = sip:h1.sipdomain.com;transport=TLS
 
+#Transport1Interface = 192.168.0.10:5060
+#Transport1Type = WS
+#Transport1RecordRouteUri = auto
 
 # Comma separated list of DNS servers, overrides default OS detected list (leave blank 
 # for default)
+
 DNSServers =
 
 # Enable IPv6
@@ -116,7 +123,7 @@
 
 # Port on which to run the HTTP configuration interface and/or certificate server 
 # 0 to disable (default: 5080)
-HttpPort = 5080
+HttpPort = 0
 
 # disable HTTP challenges for web based configuration GUI
 DisableHttpAuth = false
@@ -126,7 +133,7 @@
 
 # Port on which to listen for and send XML RPC messaging used in command processing 
 # 0 to disable (default: 5081)
-CommandPort = 5081
+CommandPort = 0
 
 # Port on which to listen for and send XML RPC messaging used in registration sync 
 # process - 0 to disable (default: 0)
@@ -236,7 +243,7 @@
 EnableCertServer = false
 
 # Value of server header for local UAS responses
-ServerText =
+ServerText = webrtc2sip
 
 # Enables Congestion Management
 CongestionManagement = true
@@ -285,10 +292,10 @@
 # interface) - comma separate list
 # Note:  Domains specified here cannot be used when creating users, domains used in user
 #        AORs must be specified on the web interface.
-Domains =
+Domains = df7jal23ls0d.invalid
 
 # Uri to use as Record-Route
-RecordRouteUri =
+RecordRouteUri = 
 
 # Force record-routing
 # WARNING: Before enabling this, ensure you have a RecordRouteUri setup, or are using
@@ -297,10 +304,10 @@
 ForceRecordRouting = false
 
 # Assume path option
-AssumePath = false
+AssumePath = true
 
 # Disable registrar
-DisableRegistrar = false
+DisableRegistrar = true
 
 # Specify a comma separate list of enum suffixes to search for enum dns resolution
 EnumSuffixes =
@@ -383,7 +390,7 @@
 ########################################################
 
 # Disable DIGEST challenges - disables this monkey
-DisableAuth = false
+DisableAuth = true
 
 # Http hostname for this server (used in Identity headers)
 HttpHostname =
Index: repro/repro_9_0.vcproj
===================================================================
--- repro/repro_9_0.vcproj	(revision 9737)
+++ repro/repro_9_0.vcproj	(working copy)
@@ -44,8 +44,8 @@
 				Name="VCCLCompilerTool"
 				AdditionalOptions="/MP"
 				Optimization="0"
-				AdditionalIncludeDirectories="&quot;$(ProjectDir)../&quot;;&quot;$(ProjectDir)../resip/stack&quot;;&quot;$(ProjectDir)../contrib/db/build_windows&quot;;&quot;$(ProjectDir)../contrib/pcre&quot;;&quot;$(ProjectDir)../contrib/MySQLConnectorC/include&quot;"
-				PreprocessorDefinitions="WIN32;_DEBUG;_CONSOLE;USE_IPV6;USE_MYSQL;LEAK_CHECK"
+				AdditionalIncludeDirectories="&quot;$(ProjectDir)../&quot;;&quot;$(ProjectDir)../resip/stack&quot;;&quot;$(ProjectDir)../contrib/db/build_windows&quot;;&quot;$(ProjectDir)../contrib/pcre&quot;;&quot;$(ProjectDir)../contrib/MySQLConnectorC/include&quot;;C:\Projects\doubango\branches\2.0\doubango\thirdparties\win32\include"
+				PreprocessorDefinitions="WIN32;_DEBUG;_CONSOLE;USE_IPV6;USE_MYSQL__;USE_SSL;LEAK_CHECK"
 				MinimalRebuild="false"
 				BasicRuntimeChecks="3"
 				RuntimeLibrary="3"
@@ -66,7 +66,7 @@
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="Ws2_32.lib Iphlpapi.lib winmm.lib Dnsapi.lib &quot;$(ProjectDir)..\contrib\MySQLConnectorC\lib\debug\libmysql.lib&quot;"
+				AdditionalDependencies="Ws2_32.lib Iphlpapi.lib winmm.lib Dnsapi.lib &quot;$(ProjectDir)..\contrib\MySQLConnectorC\lib\debug\libmysql.lib&quot; &quot;C:\Projects\doubango\branches\2.0\doubango\thirdparties\win32\lib\openssl\libeay32.lib&quot; &quot;C:\Projects\doubango\branches\2.0\doubango\thirdparties\win32\lib\openssl\ssleay32.lib&quot;"
 				OutputFile="$(OutDir)/repro.exe"
 				LinkIncremental="2"
 				AdditionalLibraryDirectories=""
Index: repro/reprolib_9_0.vcproj
===================================================================
--- repro/reprolib_9_0.vcproj	(revision 9737)
+++ repro/reprolib_9_0.vcproj	(working copy)
@@ -44,8 +44,8 @@
 				Name="VCCLCompilerTool"
 				AdditionalOptions="/MP"
 				Optimization="0"
-				AdditionalIncludeDirectories="&quot;$(ProjectDir)../&quot;;&quot;$(ProjectDir)../resip/stack&quot;;&quot;$(ProjectDir)../contrib/pcre&quot;;&quot;$(ProjectDir)../contrib/GeoIP/libGeoIP&quot;;&quot;$(ProjectDir)../contrib/MySQLConnectorC/include&quot;"
-				PreprocessorDefinitions="WIN32;_DEBUG;USE_ARES;USE_IPV6;LEAK_CHECK;;USE_MYSQL;USE_MAXMIND_GEOIP"
+				AdditionalIncludeDirectories="&quot;$(ProjectDir)../&quot;;&quot;$(ProjectDir)../resip/stack&quot;;&quot;$(ProjectDir)../contrib/pcre&quot;;&quot;$(ProjectDir)../contrib/GeoIP/libGeoIP&quot;;&quot;$(ProjectDir)../contrib/MySQLConnectorC/include&quot;;C:\Projects\doubango\branches\2.0\doubango\thirdparties\win32\include"
+				PreprocessorDefinitions="WIN32;_DEBUG;USE_SSL;USE_ARES;USE_IPV6;LEAK_CHECK;USE_MYSQL____;USE_MAXMIND_GEOI___"
 				MinimalRebuild="false"
 				BasicRuntimeChecks="0"
 				RuntimeLibrary="3"
@@ -320,14 +320,6 @@
 				RelativePath=".\stateAgents\CertPublicationHandler.cxx"
 				>
 				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
 					>
@@ -340,14 +332,6 @@
 				RelativePath=".\stateAgents\CertServer.cxx"
 				>
 				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
 					>
@@ -360,14 +344,6 @@
 				RelativePath=".\stateAgents\CertSubscriptionHandler.cxx"
 				>
 				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
 					>
@@ -424,14 +400,6 @@
 				RelativePath=".\stateAgents\PrivateKeyPublicationHandler.cxx"
 				>
 				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
 					>
@@ -444,14 +412,6 @@
 				RelativePath=".\stateAgents\PrivateKeySubscriptionHandler.cxx"
 				>
 				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
 					>
@@ -599,10 +559,6 @@
 				>
 			</File>
 			<File
-				RelativePath=".\monkeys\CertificateAuthenticator.hxx"
-				>
-			</File>
-			<File
 				RelativePath=".\AsyncProcessor.hxx"
 				>
 			</File>
@@ -615,6 +571,10 @@
 				>
 			</File>
 			<File
+				RelativePath=".\monkeys\CertificateAuthenticator.hxx"
+				>
+			</File>
+			<File
 				RelativePath=".\stateAgents\CertPublicationHandler.hxx"
 				>
 			</File>
Index: resip/dum/dum_9_0.vcproj
===================================================================
--- resip/dum/dum_9_0.vcproj	(revision 9737)
+++ resip/dum/dum_9_0.vcproj	(working copy)
@@ -44,8 +44,8 @@
 				Name="VCCLCompilerTool"
 				AdditionalOptions="/MP"
 				Optimization="0"
-				AdditionalIncludeDirectories="&quot;$(ProjectDir)/../../&quot;;&quot;$(ProjectDir)/../../../&quot;"
-				PreprocessorDefinitions="WIN32;_DEBUG;USE_ARES;USE_IPV6;LEAK_CHECK"
+				AdditionalIncludeDirectories="&quot;$(ProjectDir)/../../&quot;;&quot;$(ProjectDir)/../../../&quot;;C:\Projects\doubango\branches\2.0\doubango\thirdparties\win32\include"
+				PreprocessorDefinitions="WIN32;_DEBUG;USE_ARES;USE_IPV6;USE_SSL;LEAK_CHECK"
 				MinimalRebuild="false"
 				BasicRuntimeChecks="0"
 				RuntimeLibrary="3"
@@ -445,7 +445,6 @@
 				>
 				<FileConfiguration
 					Name="Debug|Win32"
-					ExcludedFromBuild="true"
 					>
 					<Tool
 						Name="VCCLCompilerTool"
Index: resip/stack/Connection.cxx
===================================================================
--- resip/stack/Connection.cxx	(revision 9737)
+++ resip/stack/Connection.cxx	(working copy)
@@ -37,6 +37,11 @@
    mWho.mFlowKey=(FlowKey)socket;
    InfoLog (<< "Connection::Connection: new connection created to who: " << mWho);
 
+   if(transport && transport->transport() == WS){
+		mSendingTransmissionFormat = WebSocketHandshake;
+		mReceivingTransmissionFormat = WebSocketHandshake;
+   }
+
    if(mWho.mFlowKey && ConnectionBase::transport())
    {
       getConnectionManager().addConnection(this);
@@ -118,8 +123,77 @@
          mSendingTransmissionFormat = Uncompressed;
       }
    }
+   else if(mSendingTransmissionFormat == WebSocketHandshake)
+   {
+	   mSendingTransmissionFormat = WebSocketData;
+   }
+   else if(mSendingTransmissionFormat == WebSocketData)
+   {
+	   SendData *dataWs, *oldSd;
+	   const Data& dataRaw = mOutstandingSends.front()->data;
+		UInt64 dataSize = 1 + 1 + dataRaw.size();
+		UInt64 lSize = (UInt64)dataRaw.size();
+		UInt8* uBuffer;
+		
+		if(!mDeprecatedWebSocketVersion)
+		{
+			if(lSize > 0x7D && lSize <= 0xFFFF){
+				dataSize += 2;
+			}
+			else if(lSize > 0xFFFF){
+				dataSize += 8;
+			}
+		}
+		
+		oldSd = mOutstandingSends.front();
+		dataWs = new SendData(oldSd->destination,
+									 Data(Data::Take, new char[(int)dataSize], (Data::size_type)dataSize),
+									 oldSd->transactionId,
+									 oldSd->sigcompId,
+									 false);
+		assert(dataWs && dataWs->data.data());
+		uBuffer = (UInt8*)dataWs->data.data();
 
+		if(mDeprecatedWebSocketVersion)
+		{
+			uBuffer[0] = 0x00;
+			uBuffer[dataSize - 1] = 0xFF;
+			uBuffer = &uBuffer[1];
+		}
+		else
+		{
+			uBuffer[0] = 0x82;
+			if(lSize <= 0x7D){
+				uBuffer[1] = (UInt8)lSize;
+				uBuffer = &uBuffer[2];
+			}
+			else if(lSize <= 0xFFFF){
+				uBuffer[1] = 0x7E;
+				uBuffer[2] = (lSize >> 8) & 0xFF;
+				uBuffer[3] = (lSize & 0xFF);
+				uBuffer = &uBuffer[4];
+			}
+			else{
+				uBuffer[1] = 0x7F;
+				uBuffer[2] = (lSize >> 56) & 0xFF;
+				uBuffer[3] = (lSize >> 48) & 0xFF;
+				uBuffer[4] = (lSize >> 40) & 0xFF;
+				uBuffer[5] = (lSize >> 32) & 0xFF;
+				uBuffer[6] = (lSize >> 24) & 0xFF;
+				uBuffer[7] = (lSize >> 16) & 0xFF;
+				uBuffer[8] = (lSize >> 8) & 0xFF;
+				uBuffer[9] = (lSize & 0xFF);
+				uBuffer = &uBuffer[10];
+			}
+		}
+		
+		memcpy(uBuffer, dataRaw.data(), dataRaw.size());		
+		mOutstandingSends.front() = dataWs;
+		dataWs = 0;
+		delete oldSd;
+   }
 
+
 #ifdef USE_SIGCOMP
    // Perform compression here, if appropriate
    if (mSendingTransmissionFormat == Compressed
@@ -277,12 +351,40 @@
    else
 #endif
    {
-     if(!preparseNewBytes(bytesRead))
-     {
-        // Iffy; only way we have right now to indicate that this connection has
-        // gone away.
-        bytesRead=-1;
-     }
+	 if (mReceivingTransmissionFormat == WebSocketHandshake){
+		 if(wsProcessHandshake(bytesRead))
+		 {
+			 ensureWritable();
+			 if(performWrites())
+			 {
+				mReceivingTransmissionFormat = WebSocketData;
+			 }
+		 }
+		 else
+		 {
+			 bytesRead=-1;
+		 }
+	 }
+	 else
+	 {
+		 if (mReceivingTransmissionFormat == WebSocketData){
+			int wsBytesRead = bytesRead;
+			bool gotCompleteMsg = false;
+			if(wsProcessData(wsBytesRead, gotCompleteMsg))
+			{
+				if(!preparseNewBytes(wsBytesRead, mDeprecatedWebSocketVersion/* FIXME: mangled sdp content */, gotCompleteMsg))
+				{
+					bytesRead=-1;
+				}
+			}
+		 }
+		 else if(!preparseNewBytes(bytesRead))
+		 {
+			// Iffy; only way we have right now to indicate that this connection has
+			// gone away.
+			bytesRead=-1;
+		 }
+	 }
    }
    return bytesRead;
 }
Index: resip/stack/ConnectionBase.cxx
===================================================================
--- resip/stack/ConnectionBase.cxx	(revision 9737)
+++ resip/stack/ConnectionBase.cxx	(working copy)
@@ -5,14 +5,19 @@
 #include "rutil/Logger.hxx"
 #include "resip/stack/ConnectionBase.hxx"
 #include "resip/stack/SipMessage.hxx"
+#include "resip/stack/WsDecorator.hxx"
 #include "rutil/WinLeakCheck.hxx"
 
-#ifdef USE_SSL
+
+#if defined(USE_SSL)
 #include "resip/stack/ssl/Security.hxx"
 #include "resip/stack/ssl/TlsConnection.hxx"
+#include "rutil/ssl/SHA1Stream.hxx"
 #endif
 
-#ifdef USE_SIGCOMP
+#include "rutil/MD5Stream.hxx"
+
+#if defined(USE_SIGCOMP)
 #include <osc/Stack.h>
 #include <osc/TcpStream.h>
 #include <osc/SigcompMessage.h>
@@ -40,6 +45,7 @@
 // NO: #endif
      mSendingTransmissionFormat(Unknown),
      mReceivingTransmissionFormat(Unknown),
+	 mDeprecatedWebSocketVersion(false),
      mMessage(0),
      mBuffer(0),
      mBufferPos(0),
@@ -110,7 +116,7 @@
 }
 
 bool
-ConnectionBase::preparseNewBytes(int bytesRead)
+ConnectionBase::preparseNewBytes(int bytesRead, bool isWsMg /*false*/, bool isWsMsgComplete /*= false*/)
 {
    DebugLog(<< "In State: " << connectionStates[mConnState]);
    
@@ -157,6 +163,10 @@
 
          assert(mTransport);
          mMessage = new SipMessage(mTransport);
+		 if(mTransport->transport() == resip::WS){
+			 std::auto_ptr<resip::MessageDecorator> wsDecorator(new WsDecorator());
+			 mMessage->addOutboundDecorator(wsDecorator);
+		 }
          
          DebugLog(<< "ConnectionBase::process setting source " << mWho);
          mMessage->setSource(mWho);
@@ -209,7 +219,7 @@
          unsigned int numUnprocessedChars = 
             (unsigned int)((mBuffer + chunkLength) - unprocessedCharPtr);
 
-         if(numUnprocessedChars > 2048 &&
+         if(numUnprocessedChars > ConnectionBase::ChunkSize &&
             scanChunkResult == MsgHeaderScanner::scrNextChunk)
          {
             WarningLog(<< "Discarding preparse; header-field-value (or "
@@ -305,7 +315,8 @@
             try
             {
                // The message header is complete.
-               contentLength=mMessage->const_header(h_ContentLength).value();
+				contentLength = isWsMg ? ( isWsMsgComplete ? numUnprocessedChars : (numUnprocessedChars + 1024) ):
+					 ( mMessage->const_header(h_ContentLength).value() );
             }
             catch(resip::BaseException& e)  // Could be SipMessage::Exception or ParseException
             {
@@ -435,7 +446,8 @@
 
          try
          {
-             contentLength = mMessage->const_header(h_ContentLength).value();
+             contentLength = isWsMg ? ( isWsMsgComplete ? (mBufferPos + bytesRead) : ((mBufferPos + bytesRead) + 1024) ):
+					 ( mMessage->const_header(h_ContentLength).value() );
          }
          catch(resip::BaseException& e)  // Could be SipMessage::Exception or ParseException
          {
@@ -524,6 +536,227 @@
    return true;
 }
 
+bool
+ConnectionBase::wsProcessHandshake(int bytesRead)
+{
+	mConnState = WebSocket;
+
+	mMessage = new SipMessage(mWho.transport);
+	assert(mMessage);
+
+    mMessage->setSource(mWho);
+    mMessage->setTlsDomain(mWho.transport->tlsDomain());
+    
+    mMsgHeaderScanner.prepareForMessage(mMessage);
+    char *unprocessedCharPtr;
+	MsgHeaderScanner::ScanChunkResult scanResult = mMsgHeaderScanner.scanChunk(mBuffer, bytesRead, &unprocessedCharPtr);
+    if (scanResult != MsgHeaderScanner::scrEnd)
+    {
+		if(scanResult != MsgHeaderScanner::scrNextChunk){
+			StackLog(<<"Failed to parse message");
+			StackLog(<< Data(mBuffer, bytesRead));
+		}
+       delete mMessage;
+       mMessage=0;
+	   return false;
+    }
+	
+	try{
+		Data wsResponse;
+		wsResponse =		"HTTP/1.1 101 WebSocket Protocol Handshake\r\n"
+							"Upgrade: WebSocket\r\n"
+							"Connection: Upgrade\r\n"
+							"Sec-WebSocket-Protocol: sip\r\n";
+
+		if(mMessage->exists(h_SecWebSocketKey1) && mMessage->exists(h_SecWebSocketKey2)){
+			Data SecWebSocketKey1 =  mMessage->const_header(h_SecWebSocketKey1).value();
+			Data SecWebSocketKey2 =  mMessage->const_header(h_SecWebSocketKey2).value();
+			Data Digits1, Digits2;
+			unsigned int SpacesCount1 = 0, SpacesCount2 = 0;
+			unsigned int Value1, Value2;
+			for(unsigned int i = 0; i < SecWebSocketKey1.size(); ++i){
+				if(SecWebSocketKey1[i] == ' ') ++SpacesCount1;
+				if(isdigit(SecWebSocketKey1[i])) Digits1 += SecWebSocketKey1[i];
+			}
+			Value1 = htonl(Digits1.convertUnsignedLong() / SpacesCount1);
+			for(unsigned int i = 0; i < SecWebSocketKey2.size(); ++i){
+				if(SecWebSocketKey2[i] == ' ') ++SpacesCount2;
+				if(isdigit(SecWebSocketKey2[i])) Digits2 += SecWebSocketKey2[i];
+			}
+			Value2 = htonl(Digits2.convertUnsignedLong() / SpacesCount2);
+			
+			MD5Stream wsMD5Stream;
+			char tmp[9] = { '\0' };
+			memcpy(tmp, &Value1, 4);
+			memcpy(&tmp[4], &Value2, 4);
+			wsMD5Stream << tmp;
+			if(unprocessedCharPtr < (mBuffer + bytesRead)){
+				unsigned int dataLen = (mBuffer + bytesRead) - unprocessedCharPtr;
+				Data content(unprocessedCharPtr, dataLen);
+				wsMD5Stream << content;
+			}
+			
+			if(mMessage->exists(h_Origin)){
+				wsResponse += "Sec-WebSocket-Origin: " + mMessage->const_header(h_Origin).value() + "\r\n";
+			}
+			if(mMessage->exists(h_Host)){
+				wsResponse += Data("Sec-WebSocket-Location: ") + Data(transport()->transport() == resip::WSS ? "wss://" : "ws://") + mMessage->const_header(h_Host).value() + Data("/\r\n");
+			}
+			wsResponse += "\r\n" + wsMD5Stream.getBin();
+			mDeprecatedWebSocketVersion = true;
+		}
+		else if(mMessage->exists(h_SecWebSocketKey)){
+			SHA1Stream wsSha1Stream;
+			wsSha1Stream << (mMessage->const_header(h_SecWebSocketKey).value() + Data("258EAFA5-E914-47DA-95CA-C5AB0DC85B11"));
+			Data wsAcceptKey = wsSha1Stream.getBin(160).base64encode();
+			wsResponse +=	"Sec-WebSocket-Accept: "+ wsAcceptKey +"\r\n"
+							"\r\n";
+			mDeprecatedWebSocketVersion = false;
+		}
+		else{
+			ErrLog(<<"No SecWebSocketKey header");
+		   delete mMessage;
+		   mMessage = 0;
+		   mBuffer = 0;
+		   return false;
+		}
+		
+		mOutstandingSends.push_back(new SendData(
+					   who(),
+					   wsResponse,
+					   Data::Empty,
+					   Data::Empty,
+					   true));
+	}
+	catch(resip::ParseException& e)
+    {
+       ErrLog(<<"Cannot auth request is missing " << e);
+       delete mMessage;
+       mMessage = 0;
+       mBuffer = 0;
+       return false;
+    }
+	
+	delete mMessage;
+    mMessage=0;
+
+	return true;
+}
+
+bool
+ConnectionBase::wsProcessData(int &bytesRead, bool &gotCompleteMsg)
+{
+	UInt8* uBuffer = (UInt8*)&mBuffer[mBufferPos];
+	gotCompleteMsg = false;
+	
+	if(mDeprecatedWebSocketVersion)
+	{
+		int i, j;
+		if(mBufferPos == 0)
+		{
+			mConnState = NewMessage;
+
+			// http://tools.ietf.org/html/draft-hixie-thewebsocketprotocol-76#page-19 5.3.  Data framing
+			const UInt8 type = mBuffer[0];
+			if(!(type & 0x80))
+			{
+				if(type != 0x00)
+				{
+					ErrLog(<< "Unexpected type: ");
+					return false;
+				}
+				for(i = j = 1; i < bytesRead; ++i)
+				{
+					if(uBuffer[i] == 0xFF)
+					{
+						gotCompleteMsg = true;
+						break;
+					}
+				}
+			}
+			else
+			{
+				ErrLog(<< "Not implemented yet: ");
+				return false;
+			}
+		}
+		else
+		{
+			for(i = j = 0; i < bytesRead; ++i)
+			{
+				if(uBuffer[i] == 0xFF)
+				{
+					gotCompleteMsg = true;
+					break;
+				}
+			}
+		}
+
+		bytesRead = (i - j);
+		memmove(uBuffer, &uBuffer[j], (i - j));
+		return true;
+	}
+	else
+	{
+		if(bytesRead < 16)
+		{
+			ErrLog(<< "Too short to contain ws data ");
+			return false;
+		}
+		UInt8 *uData;
+		UInt64 payIdx, toRead, dataLen = 0;
+
+		if(mBufferPos == 0)
+		{
+			const UInt8 maskFlag = (uBuffer[1] >> 7);
+			
+			mConnState = NewMessage;		
+
+			if(uBuffer[0] & 0x40 || uBuffer[0] & 0x20 || uBuffer[0] & 0x10)
+			{
+				WarningLog(<< "Unknown extension: " << ((uBuffer[0] >> 4) & 0x07));
+				// do not exit
+			}
+
+			mWsPayLen = uBuffer[1] & 0x7F;
+			dataLen += 2;
+			
+			if(mWsPayLen == 126)
+			{
+				mWsPayLen = (uBuffer[dataLen] << 8 | uBuffer[dataLen + 1]);
+				dataLen += 2;
+			}
+			else if(mWsPayLen == 127)
+			{
+				mWsPayLen = (((UInt64)uBuffer[dataLen]) << 56 | ((UInt64)uBuffer[dataLen + 1]) << 48 | ((UInt64)uBuffer[dataLen + 2]) << 40 | ((UInt64)uBuffer[dataLen + 3]) << 32 | ((UInt64)uBuffer[dataLen + 4]) << 24 | ((UInt64)uBuffer[dataLen + 5]) << 16 | ((UInt64)uBuffer[dataLen + 6]) << 8 || ((UInt64)uBuffer[dataLen + 7]));
+				dataLen += 8;
+			}
+
+			if(maskFlag)
+			{
+				mWsMaskKey[0] = uBuffer[dataLen];
+				mWsMaskKey[1] = uBuffer[dataLen + 1];
+				mWsMaskKey[2] = uBuffer[dataLen + 2];
+				mWsMaskKey[3] = uBuffer[dataLen + 3];
+				dataLen += 4;
+			}
+		}
+
+		toRead = resipMin(mWsPayLen, (bytesRead - dataLen));
+		uData = &uBuffer[dataLen];
+		for(payIdx = 0; payIdx < toRead; ++payIdx)
+		{
+			uBuffer[payIdx] = (uData[payIdx] ^ mWsMaskKey[(payIdx & 3)]);
+		}
+		
+		bytesRead = (int) toRead;
+		mWsPayLen -= toRead;
+		gotCompleteMsg = (mWsPayLen == 0);
+
+		return true;
+	}
+}
+
 #ifdef USE_SIGCOMP
 void
 ConnectionBase::decompressNewBytes(int bytesRead)
Index: resip/stack/ConnectionBase.hxx
===================================================================
--- resip/stack/ConnectionBase.hxx	(revision 9737)
+++ resip/stack/ConnectionBase.hxx	(working copy)
@@ -48,7 +48,7 @@
       const UInt64& whenLastUsed() { return mLastUsed; }
       void resetLastUsed() { mLastUsed = Timer::getTimeMs(); }
 
-      enum { ChunkSize = 2048 }; // !jf! what is the optimal size here?
+      enum { ChunkSize = 0xFFFF }; // !jf! what is the optimal size here?
 
    protected:
       enum ConnState
@@ -57,6 +57,7 @@
          ReadingHeaders,
          PartialBody,
          SigComp, // This indicates that incoming bytes are compressed.
+		 WebSocket,
          MAX
       };
 
@@ -64,11 +65,15 @@
       {
          Unknown,
          Uncompressed,
-         Compressed
+         Compressed,
+		 WebSocketHandshake,
+		 WebSocketData,
       } TransmissionFormat;
 
       ConnState getCurrentState() const { return mConnState; }
-      bool preparseNewBytes(int bytesRead);
+      bool preparseNewBytes(int bytesRead, bool isWsMg = false, bool isWsMsgComplete = false);
+	  bool wsProcessHandshake(int bytesRead);
+	  bool wsProcessData(int &bytesRead, bool &gotCompleteMsg);
       void decompressNewBytes(int bytesRead);
       std::pair<char*, size_t> getWriteBuffer();
       std::pair<char*, size_t> getCurrentWriteBuffer();
@@ -100,12 +105,15 @@
       osc::TcpStream *mSigcompFramer;
       TransmissionFormat mSendingTransmissionFormat;
       TransmissionFormat mReceivingTransmissionFormat;
+	  bool mDeprecatedWebSocketVersion;
 
    private:
       SipMessage* mMessage;
       char* mBuffer;
       size_t mBufferPos;
       size_t mBufferSize;
+	  UInt8 mWsMaskKey[4];
+	  UInt64 mWsPayLen;
 
       static char connectionStates[MAX][32];
       UInt64 mLastUsed;
Index: resip/stack/DnsInterface.cxx
===================================================================
--- resip/stack/DnsInterface.cxx	(revision 9737)
+++ resip/stack/DnsInterface.cxx	(working copy)
@@ -49,6 +49,7 @@
 static Data TcpNAPTRType("SIP+D2T");
 static Data TlsNAPTRType("SIPS+D2T");
 static Data DtlsNAPTRType("SIPS+D2U");
+static Data WsNAPTRType("SIP+D2W");
 void 
 DnsInterface::addTransportType(TransportType type, IpVersion version)
 {
@@ -66,7 +67,10 @@
          break;
       case DTLS:
          mSupportedNaptrs.insert(DtlsNAPTRType);
-         break;         
+         break;
+	 case WS:
+         mSupportedNaptrs.insert(WsNAPTRType);
+         break;
       default:
          assert(0);
          break;
Index: resip/stack/DnsResult.cxx
===================================================================
--- resip/stack/DnsResult.cxx	(revision 9737)
+++ resip/stack/DnsResult.cxx	(working copy)
@@ -485,7 +485,8 @@
    {
       CritLog(<<"Cannot lookup target="<<target
 	      <<" because DnsInterface doesn't support transport="<<mTransport);
-      assert(0);
+	  // DMI
+      // assert(0);
    }
 }
 
@@ -497,6 +498,7 @@
       switch (transport)
       {
          case UDP:
+		 case WS:
             return Symbols::DefaultSipPort;
          case TCP:
             return mSips ? Symbols::DefaultSipsPort : Symbols::DefaultSipPort;
Index: resip/stack/EnableFlowTimer.hxx
===================================================================
--- resip/stack/EnableFlowTimer.hxx	(revision 9737)
+++ resip/stack/EnableFlowTimer.hxx	(working copy)
@@ -1,94 +1,94 @@
-#ifndef EnableFlowTimer_Include_Guard
-#define EnableFlowTimer_Include_Guard
-
-#include "resip/stack/TransactionMessage.hxx"
-#include "resip/stack/Tuple.hxx"
-
-namespace resip
-{
-class EnableFlowTimer : public TransactionMessage
-{
-   public:
-      explicit EnableFlowTimer(const resip::Tuple& flow) :
-         mFlow(flow)
-      {}
-      virtual ~EnableFlowTimer(){}
-
-      virtual const Data& getTransactionId() const {return Data::Empty;}
-      const Tuple& getFlow() const { return mFlow; }
-
-      virtual bool isClientTransaction() const {return true;}
-      virtual EncodeStream& encode(EncodeStream& strm) const
-      {
-         return strm << "EnableFlowTimer: " << mFlow;
-      }
-      virtual EncodeStream& encodeBrief(EncodeStream& strm) const
-      {
-         return strm << "EnableFlowTimer: " << mFlow;
-      }
-
-      virtual Message* clone() const
-      {
-         return new EnableFlowTimer(*this);
-      }
-
-   protected:
-      const resip::Tuple mFlow;
-
-}; // class EnableFlowTimer
-
-} // namespace resip
-
-#endif // include guard
-
-/* ====================================================================
- * The Vovida Software License, Version 1.0 
- * 
- * Copyright (c) 2004 Vovida Networks, Inc.  All rights reserved.
- * 
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- * 
- * 1. Redistributions of source code must retain the above copyright
- *    notice, this list of conditions and the following disclaimer.
- * 
- * 2. Redistributions in binary form must reproduce the above copyright
- *    notice, this list of conditions and the following disclaimer in
- *    the documentation and/or other materials provided with the
- *    distribution.
- * 
- * 3. The names "VOCAL", "Vovida Open Communication Application Library",
- *    and "Vovida Open Communication Application Library (VOCAL)" must
- *    not be used to endorse or promote products derived from this
- *    software without prior written permission. For written
- *    permission, please contact vocal@vovida.org.
- *
- * 4. Products derived from this software may not be called "VOCAL", nor
- *    may "VOCAL" appear in their name, without prior written
- *    permission of Vovida Networks, Inc.
- * 
- * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESSED OR IMPLIED
- * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
- * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND
- * NON-INFRINGEMENT ARE DISCLAIMED.  IN NO EVENT SHALL VOVIDA
- * NETWORKS, INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT DAMAGES
- * IN EXCESS OF $1,000, NOR FOR ANY INDIRECT, INCIDENTAL, SPECIAL,
- * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
- * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
- * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
- * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
- * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
- * DAMAGE.
- * 
- * ====================================================================
- * 
- * This software consists of voluntary contributions made by Vovida
- * Networks, Inc. and many individuals on behalf of Vovida Networks,
- * Inc.  For more information on Vovida Networks, Inc., please see
- * <http://www.vovida.org/>.
- *
- * vi: set shiftwidth=3 expandtab:
- */
-
+#ifndef EnableFlowTimer_Include_Guard
+#define EnableFlowTimer_Include_Guard
+
+#include "resip/stack/TransactionMessage.hxx"
+#include "resip/stack/Tuple.hxx"
+
+namespace resip
+{
+class EnableFlowTimer : public TransactionMessage
+{
+   public:
+      explicit EnableFlowTimer(const resip::Tuple& flow) :
+         mFlow(flow)
+      {}
+      virtual ~EnableFlowTimer(){}
+
+      virtual const Data& getTransactionId() const {return Data::Empty;}
+      const Tuple& getFlow() const { return mFlow; }
+
+      virtual bool isClientTransaction() const {return true;}
+      virtual EncodeStream& encode(EncodeStream& strm) const
+      {
+         return strm << "EnableFlowTimer: " << mFlow;
+      }
+      virtual EncodeStream& encodeBrief(EncodeStream& strm) const
+      {
+         return strm << "EnableFlowTimer: " << mFlow;
+      }
+
+      virtual Message* clone() const
+      {
+         return new EnableFlowTimer(*this);
+      }
+
+   protected:
+      const resip::Tuple mFlow;
+
+}; // class EnableFlowTimer
+
+} // namespace resip
+
+#endif // include guard
+
+/* ====================================================================
+ * The Vovida Software License, Version 1.0 
+ * 
+ * Copyright (c) 2004 Vovida Networks, Inc.  All rights reserved.
+ * 
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in
+ *    the documentation and/or other materials provided with the
+ *    distribution.
+ * 
+ * 3. The names "VOCAL", "Vovida Open Communication Application Library",
+ *    and "Vovida Open Communication Application Library (VOCAL)" must
+ *    not be used to endorse or promote products derived from this
+ *    software without prior written permission. For written
+ *    permission, please contact vocal@vovida.org.
+ *
+ * 4. Products derived from this software may not be called "VOCAL", nor
+ *    may "VOCAL" appear in their name, without prior written
+ *    permission of Vovida Networks, Inc.
+ * 
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESSED OR IMPLIED
+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
+ * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND
+ * NON-INFRINGEMENT ARE DISCLAIMED.  IN NO EVENT SHALL VOVIDA
+ * NETWORKS, INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT DAMAGES
+ * IN EXCESS OF $1,000, NOR FOR ANY INDIRECT, INCIDENTAL, SPECIAL,
+ * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
+ * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
+ * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
+ * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
+ * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
+ * DAMAGE.
+ * 
+ * ====================================================================
+ * 
+ * This software consists of voluntary contributions made by Vovida
+ * Networks, Inc. and many individuals on behalf of Vovida Networks,
+ * Inc.  For more information on Vovida Networks, Inc., please see
+ * <http://www.vovida.org/>.
+ *
+ * vi: set shiftwidth=3 expandtab:
+ */
+
Index: resip/stack/HeaderHash.cxx
===================================================================
--- resip/stack/HeaderHash.cxx	(revision 9737)
+++ resip/stack/HeaderHash.cxx	(working copy)
@@ -1,5 +1,5 @@
 /* C++ code produced by gperf version 3.0.4 */
-/* Command-line: gperf -C -D -E -L C++ -t -k '*' --compare-strncmp --ignore-case -Z HeaderHash HeaderHash.gperf  */
+/* Command-line: gperf -D -E -L C++ -t -k '*' --compare-strncmp --ignore-case -Z HeaderHash HeaderHash.gperf  */
 
 #if !((' ' == 32) && ('!' == 33) && ('"' == 34) && ('#' == 35) \
       && ('%' == 37) && ('&' == 38) && ('\'' == 39) && ('(' == 40) \
@@ -39,7 +39,7 @@
 using namespace std;
 #line 10 "HeaderHash.gperf"
 struct headers { const char *name; Headers::Type type; };
-/* maximum key range = 430, duplicates = 0 */
+/* maximum key range = 478, duplicates = 0 */
 
 #ifndef GPERF_DOWNCASE
 #define GPERF_DOWNCASE 1
@@ -91,40 +91,40 @@
 private:
   static inline unsigned int hash (const char *str, unsigned int len);
 public:
-  static const struct headers *in_word_set (const char *str, unsigned int len);
+  static const  struct headers *in_word_set (const char *str, unsigned int len);
 };
 
 inline unsigned int
 HeaderHash::hash (register const char *str, register unsigned int len)
 {
-  static const unsigned short asso_values[] =
+  static unsigned short asso_values[] =
     {
-      431, 431, 431, 431, 431, 431, 431, 431, 431, 431,
-      431, 431, 431, 431, 431, 431, 431, 431, 431, 431,
-      431, 431, 431, 431, 431, 431, 431, 431, 431, 431,
-      431, 431, 431, 431, 431, 431, 431, 431, 431, 431,
-      431, 431, 431, 431, 431,   0, 431, 431, 431, 431,
-      431, 431, 431, 431, 431, 431, 431, 431, 431, 431,
-      431, 431, 431, 431, 431,   0,  55,  15,   0,  30,
-       35,  10,   5,  25,   5,  70,  40,  75,   0,   5,
-        0,  25,  10,  50,   0,  10,  45,   0,  60,  20,
-       50, 431, 431, 431, 431, 431, 431,   0,  55,  15,
-        0,  30,  35,  10,   5,  25,   5,  70,  40,  75,
-        0,   5,   0,  25,  10,  50,   0,  10,  45,   0,
-       60,  20,  50, 431, 431, 431, 431, 431, 431, 431,
-      431, 431, 431, 431, 431, 431, 431, 431, 431, 431,
-      431, 431, 431, 431, 431, 431, 431, 431, 431, 431,
-      431, 431, 431, 431, 431, 431, 431, 431, 431, 431,
-      431, 431, 431, 431, 431, 431, 431, 431, 431, 431,
-      431, 431, 431, 431, 431, 431, 431, 431, 431, 431,
-      431, 431, 431, 431, 431, 431, 431, 431, 431, 431,
-      431, 431, 431, 431, 431, 431, 431, 431, 431, 431,
-      431, 431, 431, 431, 431, 431, 431, 431, 431, 431,
-      431, 431, 431, 431, 431, 431, 431, 431, 431, 431,
-      431, 431, 431, 431, 431, 431, 431, 431, 431, 431,
-      431, 431, 431, 431, 431, 431, 431, 431, 431, 431,
-      431, 431, 431, 431, 431, 431, 431, 431, 431, 431,
-      431, 431, 431, 431, 431, 431
+      479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
+      479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
+      479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
+      479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
+      479, 479, 479, 479, 479,   0, 479, 479, 479,   5,
+        0, 479, 479, 479, 479, 479, 479, 479, 479, 479,
+      479, 479, 479, 479, 479,   0,  60,  15,   0,  30,
+       45,  20,   5,  25,   5,  75,  40,  50,   0,   5,
+        0,   0,  10,  35,   0,   5,  70,   0,  55,  20,
+        0, 479, 479, 479, 479, 479, 479,   0,  60,  15,
+        0,  30,  45,  20,   5,  25,   5,  75,  40,  50,
+        0,   5,   0,   0,  10,  35,   0,   5,  70,   0,
+       55,  20,   0, 479, 479, 479, 479, 479, 479, 479,
+      479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
+      479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
+      479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
+      479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
+      479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
+      479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
+      479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
+      479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
+      479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
+      479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
+      479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
+      479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
+      479, 479, 479, 479, 479, 479
     };
   register int hval = len;
 
@@ -214,14 +214,14 @@
 {
   enum
     {
-      TOTAL_KEYWORDS = 101,
+      TOTAL_KEYWORDS = 107,
       MIN_WORD_LENGTH = 1,
       MAX_WORD_LENGTH = 25,
       MIN_HASH_VALUE = 1,
-      MAX_HASH_VALUE = 430
+      MAX_HASH_VALUE = 478
     };
 
-  static const struct headers wordlist[] =
+  static struct headers wordlist[] =
     {
 #line 20 "HeaderHash.gperf"
       {"t", Headers::To},
@@ -229,7 +229,7 @@
       {"o", Headers::Event},
 #line 36 "HeaderHash.gperf"
       {"to", Headers::To},
-#line 92 "HeaderHash.gperf"
+#line 98 "HeaderHash.gperf"
       {"path", Headers::Path},
 #line 22 "HeaderHash.gperf"
       {"r", Headers::ReferTo},
@@ -243,236 +243,252 @@
       {"e", Headers::ContentEncoding},
 #line 52 "HeaderHash.gperf"
       {"date", Headers::Date},
-#line 17 "HeaderHash.gperf"
-      {"f", Headers::From},
-#line 86 "HeaderHash.gperf"
+#line 18 "HeaderHash.gperf"
+      {"s", Headers::Subject},
+#line 92 "HeaderHash.gperf"
       {"join", Headers::Join},
 #line 15 "HeaderHash.gperf"
       {"l", Headers::ContentLength},
 #line 29 "HeaderHash.gperf"
       {"contact", Headers::Contact},
-#line 21 "HeaderHash.gperf"
-      {"v", Headers::Via},
-#line 18 "HeaderHash.gperf"
-      {"s", Headers::Subject},
-#line 76 "HeaderHash.gperf"
-      {"warning", Headers::Warning},
-#line 23 "HeaderHash.gperf"
-      {"b", Headers::ReferredBy},
+#line 17 "HeaderHash.gperf"
+      {"f", Headers::From},
+#line 63 "HeaderHash.gperf"
+      {"host", Headers::Host},
+#line 13 "HeaderHash.gperf"
+      {"m", Headers::Contact},
 #line 34 "HeaderHash.gperf"
       {"route", Headers::Route},
 #line 24 "HeaderHash.gperf"
       {"x", Headers::SessionExpires},
-#line 83 "HeaderHash.gperf"
+#line 23 "HeaderHash.gperf"
+      {"b", Headers::ReferredBy},
+#line 82 "HeaderHash.gperf"
+      {"warning", Headers::Warning},
+#line 89 "HeaderHash.gperf"
       {"hide", Headers::UNKNOWN},
 #line 38 "HeaderHash.gperf"
       {"accept", Headers::Accept},
+#line 21 "HeaderHash.gperf"
+      {"v", Headers::Via},
 #line 19 "HeaderHash.gperf"
       {"k", Headers::Supported},
-#line 37 "HeaderHash.gperf"
-      {"via", Headers::Via},
-#line 13 "HeaderHash.gperf"
-      {"m", Headers::Contact},
+#line 109 "HeaderHash.gperf"
+      {"rseq", Headers::RSeq},
+#line 27 "HeaderHash.gperf"
+      {"cseq", Headers::CSeq},
 #line 47 "HeaderHash.gperf"
       {"content-id", Headers::ContentId},
+#line 102 "HeaderHash.gperf"
+      {"reason", Headers::Reason},
 #line 43 "HeaderHash.gperf"
       {"allow", Headers::Allow},
-#line 95 "HeaderHash.gperf"
+#line 62 "HeaderHash.gperf"
+      {"origin", Headers::Origin},
+#line 85 "HeaderHash.gperf"
+      {"authorization", Headers::Authorization},
+#line 76 "HeaderHash.gperf"
+      {"supported", Headers::Supported},
+#line 37 "HeaderHash.gperf"
+      {"via", Headers::Via},
+#line 80 "HeaderHash.gperf"
+      {"unsupported", Headers::Unsupported},
+#line 57 "HeaderHash.gperf"
+      {"organization", Headers::Organization},
+#line 64 "HeaderHash.gperf"
+      {"priority", Headers::Priority},
+#line 101 "HeaderHash.gperf"
       {"rack", Headers::RAck},
-#line 96 "HeaderHash.gperf"
-      {"reason", Headers::Reason},
-#line 58 "HeaderHash.gperf"
-      {"priority", Headers::Priority},
-#line 84 "HeaderHash.gperf"
+#line 90 "HeaderHash.gperf"
       {"identity", Headers::Identity},
 #line 39 "HeaderHash.gperf"
       {"accept-contact", Headers::AcceptContact},
-#line 82 "HeaderHash.gperf"
-      {"event", Headers::Event},
 #line 50 "HeaderHash.gperf"
       {"content-type", Headers::ContentType},
-#line 63 "HeaderHash.gperf"
+#line 69 "HeaderHash.gperf"
       {"reply-to", Headers::ReplyTo},
+#line 32 "HeaderHash.gperf"
+      {"from", Headers::From},
+#line 87 "HeaderHash.gperf"
+      {"encryption", Headers::UNKNOWN},
 #line 70 "HeaderHash.gperf"
-      {"supported", Headers::Supported},
-#line 81 "HeaderHash.gperf"
-      {"encryption", Headers::UNKNOWN},
-#line 103 "HeaderHash.gperf"
-      {"rseq", Headers::RSeq},
-#line 94 "HeaderHash.gperf"
-      {"privacy", Headers::Privacy},
-#line 68 "HeaderHash.gperf"
+      {"require", Headers::Require},
+#line 74 "HeaderHash.gperf"
       {"sip-etag", Headers::SIPETag},
-#line 27 "HeaderHash.gperf"
-      {"cseq", Headers::CSeq},
-#line 74 "HeaderHash.gperf"
-      {"unsupported", Headers::Unsupported},
+#line 83 "HeaderHash.gperf"
+      {"www-authenticate",Headers::WWWAuthenticate},
 #line 28 "HeaderHash.gperf"
       {"call-id", Headers::CallID},
-#line 97 "HeaderHash.gperf"
+#line 68 "HeaderHash.gperf"
+      {"record-route", Headers::RecordRoute},
+#line 88 "HeaderHash.gperf"
+      {"event", Headers::Event},
+#line 103 "HeaderHash.gperf"
       {"refer-to",Headers::ReferTo},
-#line 32 "HeaderHash.gperf"
-      {"from", Headers::From},
-#line 77 "HeaderHash.gperf"
-      {"www-authenticate",Headers::WWWAuthenticate},
-#line 62 "HeaderHash.gperf"
-      {"record-route", Headers::RecordRoute},
+#line 106 "HeaderHash.gperf"
+      {"reject-contact", Headers::RejectContact},
+#line 81 "HeaderHash.gperf"
+      {"user-agent", Headers::UserAgent},
+#line 54 "HeaderHash.gperf"
+      {"in-reply-to", Headers::InReplyTo},
+#line 115 "HeaderHash.gperf"
+      {"min-se", Headers::MinSE},
 #line 100 "HeaderHash.gperf"
-      {"reject-contact", Headers::RejectContact},
+      {"privacy", Headers::Privacy},
 #line 53 "HeaderHash.gperf"
       {"error-info", Headers::ErrorInfo},
-#line 54 "HeaderHash.gperf"
-      {"in-reply-to", Headers::InReplyTo},
-#line 57 "HeaderHash.gperf"
-      {"organization", Headers::Organization},
-#line 93 "HeaderHash.gperf"
-      {"target-dialog", Headers::TargetDialog},
-#line 64 "HeaderHash.gperf"
-      {"require", Headers::Require},
-#line 79 "HeaderHash.gperf"
-      {"authorization", Headers::Authorization},
+#line 35 "HeaderHash.gperf"
+      {"subject", Headers::Subject},
 #line 30 "HeaderHash.gperf"
       {"content-length", Headers::ContentLength},
-#line 75 "HeaderHash.gperf"
-      {"user-agent", Headers::UserAgent},
 #line 48 "HeaderHash.gperf"
       {"content-encoding", Headers::ContentEncoding},
+#line 99 "HeaderHash.gperf"
+      {"target-dialog", Headers::TargetDialog},
 #line 42 "HeaderHash.gperf"
       {"alert-info",Headers::AlertInfo},
-#line 65 "HeaderHash.gperf"
+#line 71 "HeaderHash.gperf"
       {"retry-after", Headers::RetryAfter},
+#line 105 "HeaderHash.gperf"
+      {"replaces",Headers::Replaces},
 #line 40 "HeaderHash.gperf"
       {"accept-encoding", Headers::AcceptEncoding},
+#line 78 "HeaderHash.gperf"
+      {"answer-mode", Headers::AnswerMode},
+#line 45 "HeaderHash.gperf"
+      {"call-info", Headers::CallInfo},
 #line 49 "HeaderHash.gperf"
       {"content-language", Headers::ContentLanguage},
-#line 45 "HeaderHash.gperf"
-      {"call-info", Headers::CallInfo},
-#line 35 "HeaderHash.gperf"
-      {"subject", Headers::Subject},
+#line 118 "HeaderHash.gperf"
+      {"history-info", Headers::HistoryInfo},
+#line 91 "HeaderHash.gperf"
+      {"identity-info", Headers::IdentityInfo},
+#line 66 "HeaderHash.gperf"
+      {"proxy-authorization", Headers::ProxyAuthorization},
 #line 41 "HeaderHash.gperf"
       {"accept-language", Headers::AcceptLanguage},
-#line 85 "HeaderHash.gperf"
-      {"identity-info", Headers::IdentityInfo},
-#line 67 "HeaderHash.gperf"
+#line 73 "HeaderHash.gperf"
       {"server", Headers::Server},
-#line 99 "HeaderHash.gperf"
-      {"replaces",Headers::Replaces},
-#line 109 "HeaderHash.gperf"
-      {"min-se", Headers::MinSE},
-#line 112 "HeaderHash.gperf"
-      {"history-info", Headers::HistoryInfo},
-#line 89 "HeaderHash.gperf"
-      {"p-called-party-id", Headers::PCalledPartyId},
-#line 44 "HeaderHash.gperf"
-      {"authentication-info", Headers::AuthenticationInfo},
-#line 72 "HeaderHash.gperf"
-      {"answer-mode", Headers::AnswerMode},
 #line 31 "HeaderHash.gperf"
       {"expires", Headers::Expires},
-#line 111 "HeaderHash.gperf"
+#line 117 "HeaderHash.gperf"
       {"remote-party-id", Headers::RemotePartyId},
-#line 59 "HeaderHash.gperf"
-      {"proxy-authenticate", Headers::ProxyAuthenticate},
-#line 66 "HeaderHash.gperf"
-      {"flow-timer", Headers::FlowTimer},
-#line 88 "HeaderHash.gperf"
+#line 95 "HeaderHash.gperf"
+      {"p-called-party-id", Headers::PCalledPartyId},
+#line 77 "HeaderHash.gperf"
+      {"timestamp", Headers::Timestamp},
+#line 94 "HeaderHash.gperf"
       {"p-associated-uri", Headers::PAssociatedUri},
-#line 110 "HeaderHash.gperf"
-      {"refer-sub", Headers::ReferSub},
-#line 98 "HeaderHash.gperf"
-      {"referred-by",Headers::ReferredBy},
-#line 69 "HeaderHash.gperf"
+#line 44 "HeaderHash.gperf"
+      {"authentication-info", Headers::AuthenticationInfo},
+#line 96 "HeaderHash.gperf"
+      {"p-media-authorization", Headers::PMediaAuthorization},
+#line 75 "HeaderHash.gperf"
       {"sip-if-match", Headers::SIPIfMatch},
-#line 61 "HeaderHash.gperf"
+#line 67 "HeaderHash.gperf"
       {"proxy-require", Headers::ProxyRequire},
-#line 60 "HeaderHash.gperf"
-      {"proxy-authorization", Headers::ProxyAuthorization},
-#line 80 "HeaderHash.gperf"
-      {"allow-events", Headers::AllowEvents},
+#line 72 "HeaderHash.gperf"
+      {"flow-timer", Headers::FlowTimer},
+#line 65 "HeaderHash.gperf"
+      {"proxy-authenticate", Headers::ProxyAuthenticate},
+#line 33 "HeaderHash.gperf"
+      {"max-forwards", Headers::MaxForwards},
 #line 46 "HeaderHash.gperf"
       {"content-disposition", Headers::ContentDisposition},
-#line 33 "HeaderHash.gperf"
-      {"max-forwards", Headers::MaxForwards},
-#line 71 "HeaderHash.gperf"
-      {"timestamp", Headers::Timestamp},
-#line 107 "HeaderHash.gperf"
-      {"service-route", Headers::ServiceRoute},
-#line 91 "HeaderHash.gperf"
-      {"p-preferred-identity", Headers::PPreferredIdentity},
+#line 116 "HeaderHash.gperf"
+      {"refer-sub", Headers::ReferSub},
 #line 104 "HeaderHash.gperf"
+      {"referred-by",Headers::ReferredBy},
+#line 93 "HeaderHash.gperf"
+      {"p-asserted-identity", Headers::PAssertedIdentity},
+#line 86 "HeaderHash.gperf"
+      {"allow-events", Headers::AllowEvents},
+#line 110 "HeaderHash.gperf"
       {"security-client", Headers::SecurityClient},
-#line 90 "HeaderHash.gperf"
-      {"p-media-authorization", Headers::PMediaAuthorization},
-#line 87 "HeaderHash.gperf"
-      {"p-asserted-identity", Headers::PAssertedIdentity},
-#line 51 "HeaderHash.gperf"
-      {"content-transfer-encoding", Headers::ContentTransferEncoding},
-#line 73 "HeaderHash.gperf"
+#line 55 "HeaderHash.gperf"
+      {"min-expires", Headers::MinExpires},
+#line 113 "HeaderHash.gperf"
+      {"service-route", Headers::ServiceRoute},
+#line 79 "HeaderHash.gperf"
       {"priv-answer-mode", Headers::PrivAnswerMode},
-#line 102 "HeaderHash.gperf"
+#line 108 "HeaderHash.gperf"
       {"response-key", Headers::UNKNOWN},
-#line 55 "HeaderHash.gperf"
-      {"min-expires", Headers::MinExpires},
-#line 106 "HeaderHash.gperf"
-      {"security-verify", Headers::SecurityVerify},
-#line 78 "HeaderHash.gperf"
+#line 107 "HeaderHash.gperf"
+      {"request-disposition", Headers::RequestDisposition},
+#line 97 "HeaderHash.gperf"
+      {"p-preferred-identity", Headers::PPreferredIdentity},
+#line 84 "HeaderHash.gperf"
       {"subscription-state",Headers::SubscriptionState},
-#line 105 "HeaderHash.gperf"
+#line 51 "HeaderHash.gperf"
+      {"content-transfer-encoding", Headers::ContentTransferEncoding},
+#line 111 "HeaderHash.gperf"
       {"security-server", Headers::SecurityServer},
-#line 101 "HeaderHash.gperf"
-      {"request-disposition", Headers::RequestDisposition},
 #line 56 "HeaderHash.gperf"
       {"mime-version", Headers::MIMEVersion},
-#line 108 "HeaderHash.gperf"
-      {"session-expires", Headers::SessionExpires}
+#line 112 "HeaderHash.gperf"
+      {"security-verify", Headers::SecurityVerify},
+#line 114 "HeaderHash.gperf"
+      {"session-expires", Headers::SessionExpires},
+#line 61 "HeaderHash.gperf"
+      {"sec-websocket-accept", Headers::SecWebSocketAccept},
+#line 58 "HeaderHash.gperf"
+      {"sec-websocket-key", Headers::SecWebSocketKey},
+#line 60 "HeaderHash.gperf"
+      {"sec-websocket-key2", Headers::SecWebSocketKey2},
+#line 59 "HeaderHash.gperf"
+      {"sec-websocket-key1", Headers::SecWebSocketKey1}
     };
 
-  static const signed char lookup[] =
+  static signed char lookup[] =
     {
        -1,   0,  -1,  -1,  -1,  -1,   1,   2,  -1,   3,
        -1,   4,  -1,  -1,  -1,  -1,   5,  -1,  -1,  -1,
        -1,   6,  -1,  -1,  -1,  -1,   7,  -1,  -1,  -1,
        -1,   8,  -1,  -1,   9,  -1,  10,  -1,  -1,  11,
-       -1,  12,  13,  -1,  -1,  -1,  14,  -1,  -1,  -1,
-       -1,  15,  16,  -1,  -1,  -1,  17,  -1,  -1,  -1,
-       18,  19,  -1,  -1,  20,  -1,  21,  -1,  -1,  -1,
-       -1,  22,  -1,  23,  -1,  -1,  24,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  25,  -1,  -1,  -1,  -1,
-       26,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  27,
-       -1,  28,  -1,  29,  -1,  -1,  -1,  -1,  30,  31,
-       32,  -1,  33,  34,  35,  36,  -1,  -1,  -1,  37,
-       -1,  -1,  38,  39,  40,  -1,  41,  42,  43,  44,
-       -1,  45,  -1,  -1,  -1,  -1,  -1,  46,  -1,  47,
-       48,  49,  50,  51,  -1,  -1,  -1,  52,  53,  54,
-       55,  56,  -1,  -1,  -1,  57,  58,  -1,  -1,  -1,
-       59,  -1,  -1,  -1,  -1,  -1,  60,  -1,  -1,  61,
-       -1,  -1,  62,  -1,  -1,  63,  -1,  -1,  64,  -1,
-       -1,  65,  -1,  66,  -1,  -1,  67,  -1,  -1,  -1,
-       -1,  -1,  68,  -1,  -1,  -1,  -1,  69,  -1,  70,
+       -1,  12,  13,  -1,  -1,  -1,  14,  -1,  -1,  15,
+       -1,  16,  -1,  -1,  -1,  17,  18,  -1,  -1,  -1,
+       -1,  19,  20,  -1,  21,  -1,  22,  -1,  -1,  -1,
+       -1,  23,  -1,  -1,  -1,  -1,  24,  -1,  -1,  25,
+       -1,  -1,  -1,  -1,  26,  27,  28,  -1,  -1,  -1,
+       29,  30,  -1,  31,  32,  -1,  -1,  -1,  33,  -1,
+       -1,  34,  35,  36,  37,  -1,  -1,  -1,  38,  39,
+       -1,  -1,  40,  41,  42,  43,  -1,  44,  45,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  46,  47,  -1,  -1,
+       -1,  -1,  48,  -1,  -1,  49,  -1,  -1,  50,  51,
+       52,  53,  -1,  -1,  -1,  -1,  54,  55,  -1,  -1,
+       56,  -1,  -1,  -1,  -1,  -1,  -1,  57,  -1,  58,
+       -1,  59,  -1,  60,  -1,  61,  62,  -1,  63,  -1,
+       64,  65,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  66,
+       -1,  67,  -1,  -1,  -1,  -1,  -1,  68,  69,  70,
+       71,  72,  73,  -1,  -1,  74,  -1,  75,  -1,  76,
+       -1,  77,  -1,  -1,  78,  -1,  79,  -1,  -1,  -1,
+       -1,  -1,  80,  81,  -1,  82,  -1,  -1,  83,  -1,
+       -1,  -1,  84,  -1,  85,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  86,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  71,  72,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       73,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  74,  -1,
-       75,  -1,  -1,  -1,  -1,  -1,  76,  -1,  -1,  77,
-       -1,  78,  79,  -1,  -1,  -1,  -1,  -1,  80,  81,
-       -1,  -1,  82,  -1,  83,  -1,  -1,  84,  -1,  -1,
-       -1,  -1,  -1,  -1,  85,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  86,  -1,  87,  -1,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  88,  89,  -1,  -1,  90,
-       -1,  -1,  -1,  -1,  -1,  91,  92,  -1,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  -1,  93,  -1,  -1,
-       -1,  -1,  -1,  -1,  -1,  -1,  94,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  87,  -1,  -1,  88,
+       -1,  -1,  89,  -1,  -1,  90,  -1,  -1,  -1,  -1,
+       -1,  91,  -1,  -1,  -1,  -1,  -1,  -1,  92,  -1,
+       -1,  93,  94,  -1,  95,  96,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  97,  -1,
+       98,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       95,  -1,  -1,  96,  -1,  -1,  -1,  -1,  -1,  -1,
-       97,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  98,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       99,  -1, 100,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 101,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1, 102,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-       -1,  -1,  99,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+      103,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
        -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-      100
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
+       -1,  -1, 104, 105,  -1,  -1,  -1,  -1, 106
     };
 
   if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
@@ -494,6 +510,6 @@
     }
   return 0;
 }
-#line 113 "HeaderHash.gperf"
+#line 119 "HeaderHash.gperf"
 
 }
Index: resip/stack/HeaderHash.gperf
===================================================================
--- resip/stack/HeaderHash.gperf	(revision 9737)
+++ resip/stack/HeaderHash.gperf	(working copy)
@@ -55,6 +55,12 @@
 min-expires, Headers::MinExpires
 mime-version, Headers::MIMEVersion
 organization, Headers::Organization
+sec-websocket-key, Headers::SecWebSocketKey
+sec-websocket-key1, Headers::SecWebSocketKey1
+sec-websocket-key2, Headers::SecWebSocketKey2
+sec-websocket-accept, Headers::SecWebSocketAccept
+origin, Headers::Origin
+host, Headers::Host
 priority, Headers::Priority
 proxy-authenticate, Headers::ProxyAuthenticate
 proxy-authorization, Headers::ProxyAuthorization
Index: resip/stack/HeaderTypes.hxx
===================================================================
--- resip/stack/HeaderTypes.hxx	(revision 9737)
+++ resip/stack/HeaderTypes.hxx	(working copy)
@@ -82,6 +82,12 @@
          defineHeader(MinExpires, "Min-Expires", UInt32Category, "RFC 3261"),
          defineHeader(MIMEVersion, "MIME-Version", Token, "RFC 3261"),
          defineHeader(Organization, "Organization", StringCategory, "RFC 3261"),
+		 defineHeader(SecWebSocketKey, "Sec-WebSocket-Key", StringCategory, "RFC 6455"),
+		 defineHeader(SecWebSocketKey1, "Sec-WebSocket-Key1", StringCategory, "draft-hixie- thewebsocketprotocol-76"),
+		 defineHeader(SecWebSocketKey2, "Sec-WebSocket-Key2", StringCategory, "draft-hixie- thewebsocketprotocol-76"),
+		 defineHeader(Origin, "Origin", StringCategory, "draft-hixie- thewebsocketprotocol-76"),
+		 defineHeader(Host, "Host", StringCategory, "draft-hixie- thewebsocketprotocol-76"),
+		 defineHeader(SecWebSocketAccept, "Sec-WebSocket-Accept", StringCategory, "RFC 6455"),
          defineHeader(Priority, "Priority", Token, "RFC 3261"),
          defineMultiHeader(ProxyAuthorization, "Proxy-Authorization", Auth, "RFC 3261"),
          defineHeader(ReplyTo, "Reply-To", NameAddr, "RFC 3261"),
Index: resip/stack/Headers.cxx
===================================================================
--- resip/stack/Headers.cxx	(revision 9737)
+++ resip/stack/Headers.cxx	(working copy)
@@ -221,6 +221,12 @@
 typedef ParserContainer<StringCategory> StringCategories;
 
 defineHeader(Organization, "Organization", StringCategory, "RFC 3261");
+defineHeader(SecWebSocketKey, "Sec-WebSocket-Key", StringCategory, "RFC 6455");
+defineHeader(SecWebSocketKey1, "Sec-WebSocket-Key1", StringCategory, "draft-hixie- thewebsocketprotocol-76");
+defineHeader(SecWebSocketKey2, "Sec-WebSocket-Key2", StringCategory, "draft-hixie- thewebsocketprotocol-76");
+defineHeader(Origin, "Origin", StringCategory, "draft-hixie- thewebsocketprotocol-76");
+defineHeader(Host, "Host", StringCategory, "draft-hixie- thewebsocketprotocol-76");
+defineHeader(SecWebSocketAccept, "Sec-WebSocket-Accept", StringCategory, "RFC 6455");
 defineHeader(Server, "Server", StringCategory, "RFC 3261");
 defineHeader(Subject, "Subject", StringCategory, "RFC 3261");
 defineHeader(UserAgent, "User-Agent", StringCategory, "RFC 3261");
Index: resip/stack/Headers.hxx
===================================================================
--- resip/stack/Headers.hxx	(revision 9737)
+++ resip/stack/Headers.hxx	(working copy)
@@ -211,11 +211,18 @@
 
 defineHeader(ContentTransferEncoding, "Content-Transfer-Encoding", StringCategory, "RFC ?");
 defineHeader(Organization, "Organization", StringCategory, "RFC 3261");
+defineHeader(SecWebSocketKey, "Sec-WebSocket-Key", StringCategory, "RFC 6455");
+defineHeader(SecWebSocketKey1, "Sec-WebSocket-Key1", StringCategory, "draft-hixie- thewebsocketprotocol-76");
+defineHeader(SecWebSocketKey2, "Sec-WebSocket-Key2", StringCategory, "draft-hixie- thewebsocketprotocol-76");
+defineHeader(Origin, "Origin", StringCategory, "draft-hixie- thewebsocketprotocol-76");
+defineHeader(Host, "Host", StringCategory, "draft-hixie- thewebsocketprotocol-76");
+defineHeader(SecWebSocketAccept, "Sec-WebSocket-Accept", StringCategory, "RFC 6455");
 defineHeader(Server, "Server", StringCategory, "RFC 3261");
 defineHeader(Subject, "Subject", StringCategory, "RFC 3261");
 defineHeader(UserAgent, "User-Agent", StringCategory, "RFC 3261");
 defineHeader(Timestamp, "Timestamp", StringCategory, "RFC 3261");
 
+
 //====================
 // ExpiresCategory:
 //====================
Index: resip/stack/Helper.cxx
===================================================================
--- resip/stack/Helper.cxx	(revision 9737)
+++ resip/stack/Helper.cxx	(working copy)
@@ -1625,8 +1625,16 @@
       request.header(h_Routes).push_back(NameAddr(request.const_header(h_RequestLine).uri()));
       request.header(h_RequestLine).uri() = request.const_header(h_Routes).front().uri();
       request.header(h_Routes).pop_front(); // !jf!
-      assert(!request.hasForceTarget());
-      request.setForceTarget(request.const_header(h_RequestLine).uri());
+
+	  //FIXME: DMI
+#if 0
+	  assert(!request.hasForceTarget());
+#else
+	  if(request.hasForceTarget()){
+		CritLog(<< "assert(!request.hasForceTarget())");
+	  }
+#endif
+	  request.setForceTarget(request.const_header(h_RequestLine).uri());
    }
 }
 
Index: resip/stack/KeepAlivePong.hxx
===================================================================
--- resip/stack/KeepAlivePong.hxx	(revision 9737)
+++ resip/stack/KeepAlivePong.hxx	(working copy)
@@ -1,92 +1,92 @@
-#if !defined(RESIP_KEEPALIVEPONG_HXX)
-#define RESIP_KEEPALIVEPONG_HXX 
-
-#include "rutil/HeapInstanceCounter.hxx"
-#include "resip/stack/TransactionMessage.hxx"
-#include "resip/stack/Tuple.hxx"
-
-namespace resip
-{
-
-class KeepAlivePong : public TransactionMessage
-{
-   public:
-      RESIP_HeapCount(ConnectionPingStarted);
-
-      KeepAlivePong(const Tuple& flow) : 
-         mFlow(flow)
-      {
-      }
-      virtual const Data& getTransactionId() const { assert(0); return Data::Empty; }
-      virtual bool isClientTransaction() const { assert(0); return false; }
-      virtual Message* clone() const { return new KeepAlivePong(mFlow); }
-      virtual EncodeStream& encode(EncodeStream& strm) const { return encodeBrief(strm); }
-      virtual EncodeStream& encodeBrief(EncodeStream& str) const 
-      {
-         return str << "KeepAlivePong " << mFlow;
-      }
-
-      FlowKey getFlowKey() const 
-      {
-         return mFlow.mFlowKey;
-      }
-      
-      const Tuple& getFlow() const
-      {
-         return mFlow;
-      }
-      
-   private:
-      const Tuple mFlow;
-};
-
-}
-
-#endif
-/* ====================================================================
- * The Vovida Software License, Version 1.0 
- * 
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- * 
- * 1. Redistributions of source code must retain the above copyright
- *    notice, this list of conditions and the following disclaimer.
- * 
- * 2. Redistributions in binary form must reproduce the above copyright
- *    notice, this list of conditions and the following disclaimer in
- *    the documentation and/or other materials provided with the
- *    distribution.
- * 
- * 3. The names "VOCAL", "Vovida Open Communication Application Library",
- *    and "Vovida Open Communication Application Library (VOCAL)" must
- *    not be used to endorse or promote products derived from this
- *    software without prior written permission. For written
- *    permission, please contact vocal@vovida.org.
- *
- * 4. Products derived from this software may not be called "VOCAL", nor
- *    may "VOCAL" appear in their name, without prior written
- *    permission of Vovida Networks, Inc.
- * 
- * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESSED OR IMPLIED
- * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
- * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND
- * NON-INFRINGEMENT ARE DISCLAIMED.  IN NO EVENT SHALL VOVIDA
- * NETWORKS, INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT DAMAGES
- * IN EXCESS OF $1,000, NOR FOR ANY INDIRECT, INCIDENTAL, SPECIAL,
- * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
- * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
- * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
- * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
- * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
- * DAMAGE.
- * 
- * ====================================================================
- * 
- * This software consists of voluntary contributions made by Vovida
- * Networks, Inc. and many individuals on behalf of Vovida Networks,
- * Inc.  For more information on Vovida Networks, Inc., please see
- * <http://www.vovida.org/>.
- *
- */
+#if !defined(RESIP_KEEPALIVEPONG_HXX)
+#define RESIP_KEEPALIVEPONG_HXX 
+
+#include "rutil/HeapInstanceCounter.hxx"
+#include "resip/stack/TransactionMessage.hxx"
+#include "resip/stack/Tuple.hxx"
+
+namespace resip
+{
+
+class KeepAlivePong : public TransactionMessage
+{
+   public:
+      RESIP_HeapCount(ConnectionPingStarted);
+
+      KeepAlivePong(const Tuple& flow) : 
+         mFlow(flow)
+      {
+      }
+      virtual const Data& getTransactionId() const { assert(0); return Data::Empty; }
+      virtual bool isClientTransaction() const { assert(0); return false; }
+      virtual Message* clone() const { return new KeepAlivePong(mFlow); }
+      virtual EncodeStream& encode(EncodeStream& strm) const { return encodeBrief(strm); }
+      virtual EncodeStream& encodeBrief(EncodeStream& str) const 
+      {
+         return str << "KeepAlivePong " << mFlow;
+      }
+
+      FlowKey getFlowKey() const 
+      {
+         return mFlow.mFlowKey;
+      }
+      
+      const Tuple& getFlow() const
+      {
+         return mFlow;
+      }
+      
+   private:
+      const Tuple mFlow;
+};
+
+}
+
+#endif
+/* ====================================================================
+ * The Vovida Software License, Version 1.0 
+ * 
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in
+ *    the documentation and/or other materials provided with the
+ *    distribution.
+ * 
+ * 3. The names "VOCAL", "Vovida Open Communication Application Library",
+ *    and "Vovida Open Communication Application Library (VOCAL)" must
+ *    not be used to endorse or promote products derived from this
+ *    software without prior written permission. For written
+ *    permission, please contact vocal@vovida.org.
+ *
+ * 4. Products derived from this software may not be called "VOCAL", nor
+ *    may "VOCAL" appear in their name, without prior written
+ *    permission of Vovida Networks, Inc.
+ * 
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESSED OR IMPLIED
+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
+ * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND
+ * NON-INFRINGEMENT ARE DISCLAIMED.  IN NO EVENT SHALL VOVIDA
+ * NETWORKS, INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT DAMAGES
+ * IN EXCESS OF $1,000, NOR FOR ANY INDIRECT, INCIDENTAL, SPECIAL,
+ * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
+ * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
+ * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
+ * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
+ * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
+ * DAMAGE.
+ * 
+ * ====================================================================
+ * 
+ * This software consists of voluntary contributions made by Vovida
+ * Networks, Inc. and many individuals on behalf of Vovida Networks,
+ * Inc.  For more information on Vovida Networks, Inc., please see
+ * <http://www.vovida.org/>.
+ *
+ */
Index: resip/stack/Makefile.am
===================================================================
--- resip/stack/Makefile.am	(revision 9737)
+++ resip/stack/Makefile.am	(working copy)
@@ -153,7 +153,9 @@
 	X509Contents.cxx \
 	KeepAliveMessage.cxx \
 	StatelessHandler.cxx \
-	InvalidContents.cxx
+	InvalidContents.cxx \
+	WsTransport.cxx \
+	WsDecorator.cxx
 
 if USE_SSL
 libresip_la_SOURCES += \
Index: resip/stack/MessageFilterRule.cxx
===================================================================
--- resip/stack/MessageFilterRule.cxx	(revision 9737)
+++ resip/stack/MessageFilterRule.cxx	(working copy)
@@ -57,7 +57,15 @@
       if (!hostIsInList( msg.header(h_RequestLine).uri().host()))
       {
          DebugLog(<< "Host is not in list. Rule does not match.");
-         return false;
+		 //if(msg.header(resip::h_Contacts).size() > 0){
+		 //	 const resip::NameAddr& contact = msg.header(resip::h_Contacts).front();
+		 //	if (isEqualNoCase(contact.uri().host(), resip::Data("df7jal23ls0d.invalid"))){
+		//		//mTransactionUser->addDomain(msg.header(h_RequestLine).uri().host());
+		//		//goto Skip;
+		//	}
+		//}
+
+		 return false;
       }
    }
 
Index: resip/stack/MethodHash.cxx
===================================================================
--- resip/stack/MethodHash.cxx	(revision 9737)
+++ resip/stack/MethodHash.cxx	(working copy)
@@ -1,5 +1,5 @@
 /* C++ code produced by gperf version 3.0.4 */
-/* Command-line: gperf -C -D -E -L C++ -t -k '*' --compare-strncmp -Z MethodHash MethodHash.gperf  */
+/* Command-line: gperf -D -E -L C++ -t -k '*' --compare-strncmp --ignore-case -Z MethodHash MethodHash.gperf  */
 
 #if !((' ' == 32) && ('!' == 33) && ('"' == 34) && ('#' == 35) \
       && ('%' == 37) && ('&' == 38) && ('\'' == 39) && ('(' == 40) \
@@ -40,6 +40,51 @@
 struct methods { const char *name; MethodTypes type; };
 /* maximum key range = 31, duplicates = 0 */
 
+#ifndef GPERF_DOWNCASE
+#define GPERF_DOWNCASE 1
+static unsigned char gperf_downcase[256] =
+  {
+      0,   1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,  14,
+     15,  16,  17,  18,  19,  20,  21,  22,  23,  24,  25,  26,  27,  28,  29,
+     30,  31,  32,  33,  34,  35,  36,  37,  38,  39,  40,  41,  42,  43,  44,
+     45,  46,  47,  48,  49,  50,  51,  52,  53,  54,  55,  56,  57,  58,  59,
+     60,  61,  62,  63,  64,  97,  98,  99, 100, 101, 102, 103, 104, 105, 106,
+    107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
+    122,  91,  92,  93,  94,  95,  96,  97,  98,  99, 100, 101, 102, 103, 104,
+    105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
+    120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
+    135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
+    150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
+    165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
+    180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
+    195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
+    210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
+    225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
+    240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
+    255
+  };
+#endif
+
+#ifndef GPERF_CASE_STRNCMP
+#define GPERF_CASE_STRNCMP 1
+static int
+gperf_case_strncmp (register const char *s1, register const char *s2, register unsigned int n)
+{
+  for (; n > 0;)
+    {
+      unsigned char c1 = gperf_downcase[(unsigned char)*s1++];
+      unsigned char c2 = gperf_downcase[(unsigned char)*s2++];
+      if (c1 != 0 && c1 == c2)
+        {
+          n--;
+          continue;
+        }
+      return (int)c1 - (int)c2;
+    }
+  return 0;
+}
+#endif
+
 class MethodHash
 {
 private:
@@ -51,7 +96,7 @@
 inline unsigned int
 MethodHash::hash (register const char *str, register unsigned int len)
 {
-  static const unsigned char asso_values[] =
+  static unsigned char asso_values[] =
     {
       35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
       35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
@@ -62,6 +107,10 @@
       35, 35, 35, 35, 35,  5, 10,  5,  5,  0,
        0, 15,  0,  0, 35,  0,  0,  0,  0,  0,
        0, 35,  0,  0,  0,  0,  0, 35, 35,  5,
+      35, 35, 35, 35, 35, 35, 35,  5, 10,  5,
+       5,  0,  0, 15,  0,  0, 35,  0,  0,  0,
+       0,  0,  0, 35,  0,  0,  0,  0,  0, 35,
+      35,  5, 35, 35, 35, 35, 35, 35, 35, 35,
       35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
       35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
       35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
@@ -74,10 +123,6 @@
       35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
       35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
       35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
-      35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
-      35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
-      35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
-      35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
       35, 35, 35, 35, 35, 35
     };
   register int hval = len;
@@ -127,7 +172,7 @@
       MAX_HASH_VALUE = 34
     };
 
-  static const struct methods wordlist[] =
+  static struct methods wordlist[] =
     {
 #line 24 "MethodHash.gperf"
       {"INFO", INFO},
@@ -163,7 +208,7 @@
       {"SUBSCRIBE", SUBSCRIBE}
     };
 
-  static const signed char lookup[] =
+  static signed char lookup[] =
     {
       -1, -1, -1, -1,  0,  1,  2,  3,  4, -1, -1,  5,  6,  7,
       -1,  8,  9, 10, 11, -1, -1, 12, -1, 13, -1, -1, -1, 14,
@@ -182,7 +227,7 @@
             {
               register const char *s = wordlist[index].name;
 
-              if (*str == *s && !strncmp (str + 1, s + 1, len - 1) && s[len] == '\0')
+              if ((((unsigned char)*str ^ (unsigned char)*s) & ~32) == 0 && !gperf_case_strncmp (str, s, len) && s[len] == '\0')
                 return &wordlist[index];
             }
         }
Index: resip/stack/ParameterHash.cxx
===================================================================
--- resip/stack/ParameterHash.cxx	(revision 9737)
+++ resip/stack/ParameterHash.cxx	(working copy)
@@ -1,5 +1,5 @@
 /* C++ code produced by gperf version 3.0.4 */
-/* Command-line: gperf -C -D -E -L C++ -t -k '*' --compare-strncmp --ignore-case -Z ParameterHash ParameterHash.gperf  */
+/* Command-line: gperf -D -E -L C++ -t -k '*' --compare-strncmp --ignore-case -Z ParameterHash ParameterHash.gperf  */
 
 #if !((' ' == 32) && ('!' == 33) && ('"' == 34) && ('#' == 35) \
       && ('%' == 37) && ('&' == 38) && ('\'' == 39) && ('(' == 40) \
@@ -37,7 +37,7 @@
 using namespace std;
 #line 8 "ParameterHash.gperf"
 struct params { const char *name; ParameterTypes::Type type; };
-/* maximum key range = 266, duplicates = 0 */
+/* maximum key range = 226, duplicates = 0 */
 
 #ifndef GPERF_DOWNCASE
 #define GPERF_DOWNCASE 1
@@ -95,34 +95,34 @@
 inline unsigned int
 ParameterHash::hash (register const char *str, register unsigned int len)
 {
-  static const unsigned short asso_values[] =
+  static unsigned char asso_values[] =
     {
-      268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
-      268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
-      268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
-      268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
-      268, 268, 268,   0, 268,  40,   0, 268, 268, 268,
-      268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
-      268, 268, 268, 268, 268,   0,  25,   0,  15,   0,
-       15,  35,  75,  10, 268,  10,   0,  25,   5,   5,
-        5,  45,   0,   0,   0,  40,  85,   5,  65,  65,
-       40, 268, 268, 268, 268, 268, 268,   0,  25,   0,
-       15,   0,  15,  35,  75,  10, 268,  10,   0,  25,
-        5,   5,   5,  45,   0,   0,   0,  40,  85,   5,
-       65,  65,  40, 268, 268, 268, 268, 268, 268, 268,
-      268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
-      268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
-      268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
-      268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
-      268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
-      268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
-      268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
-      268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
-      268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
-      268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
-      268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
-      268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
-      268, 268, 268, 268, 268, 268
+      228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
+      228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
+      228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
+      228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
+      228, 228, 228,  10, 228,  10,   5, 228, 228, 228,
+      228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
+      228, 228, 228, 228, 228,  10,  15,   0,  20,   0,
+       30,  35,  55,   0, 228,  15,  20,  35,   0,   0,
+        0, 118,   5,   0,   0,   0,  80,   0, 120,  50,
+       10, 228, 228, 228, 228, 228, 228,  10,  15,   0,
+       20,   0,  30,  35,  55,   0, 228,  15,  20,  35,
+        0,   0,   0, 118,   5,   0,   0,   0,  80,   0,
+      120,  50,  10, 228, 228, 228, 228, 228, 228, 228,
+      228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
+      228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
+      228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
+      228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
+      228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
+      228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
+      228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
+      228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
+      228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
+      228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
+      228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
+      228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
+      228, 228, 228, 228, 228, 228
     };
   register int hval = len;
 
@@ -176,217 +176,218 @@
 {
   enum
     {
-      TOTAL_KEYWORDS = 89,
+      TOTAL_KEYWORDS = 91,
       MIN_WORD_LENGTH = 1,
       MAX_WORD_LENGTH = 13,
       MIN_HASH_VALUE = 2,
-      MAX_HASH_VALUE = 267
+      MAX_HASH_VALUE = 227
     };
 
-  static const struct params wordlist[] =
+  static struct params wordlist[] =
     {
-#line 39 "ParameterHash.gperf"
-      {"lr", ParameterTypes::lr},
-#line 37 "ParameterHash.gperf"
-      {"ttl", ParameterTypes::ttl},
-#line 63 "ParameterHash.gperf"
-      {"stale", ParameterTypes::stale},
 #line 59 "ParameterHash.gperf"
       {"nc", ParameterTypes::nc},
-#line 23 "ParameterHash.gperf"
-      {"actor", ParameterTypes::actor},
 #line 82 "ParameterHash.gperf"
       {"site", ParameterTypes::site},
-#line 53 "ParameterHash.gperf"
-      {"rport", ParameterTypes::rport},
-#line 70 "ParameterHash.gperf"
-      {"reason", ParameterTypes::reason},
-#line 10 "ParameterHash.gperf"
-      {"data", ParameterTypes::data},
 #line 58 "ParameterHash.gperf"
       {"nonce", ParameterTypes::nonce},
 #line 55 "ParameterHash.gperf"
       {"cnonce", ParameterTypes::cnonce},
-#line 11 "ParameterHash.gperf"
-      {"control", ParameterTypes::control},
+#line 68 "ParameterHash.gperf"
+      {"uri", ParameterTypes::uri},
+#line 34 "ParameterHash.gperf"
+      {"user", ParameterTypes::user},
+#line 41 "ParameterHash.gperf"
+      {"purpose", ParameterTypes::purpose},
 #line 62 "ParameterHash.gperf"
       {"response", ParameterTypes::response},
+#line 80 "ParameterHash.gperf"
+      {"size", ParameterTypes::size},
+#line 53 "ParameterHash.gperf"
+      {"rport", ParameterTypes::rport},
+#line 28 "ParameterHash.gperf"
+      {"ob", ParameterTypes::ob},
+#line 23 "ParameterHash.gperf"
+      {"actor", ParameterTypes::actor},
+#line 70 "ParameterHash.gperf"
+      {"reason", ParameterTypes::reason},
+#line 57 "ParameterHash.gperf"
+      {"id", ParameterTypes::id},
+#line 37 "ParameterHash.gperf"
+      {"ttl", ParameterTypes::ttl},
+#line 51 "ParameterHash.gperf"
+      {"rinstance", ParameterTypes::rinstance},
+#line 39 "ParameterHash.gperf"
+      {"lr", ParameterTypes::lr},
+#line 96 "ParameterHash.gperf"
+      {"url", ParameterTypes::url},
 #line 33 "ParameterHash.gperf"
       {"transport", ParameterTypes::transport},
-#line 57 "ParameterHash.gperf"
-      {"id", ParameterTypes::id},
+#line 11 "ParameterHash.gperf"
+      {"control", ParameterTypes::control},
 #line 76 "ParameterHash.gperf"
       {"protocol", ParameterTypes::protocol},
-#line 51 "ParameterHash.gperf"
-      {"rinstance", ParameterTypes::rinstance},
-#line 61 "ParameterHash.gperf"
-      {"realm", ParameterTypes::realm},
-#line 28 "ParameterHash.gperf"
-      {"ob", ParameterTypes::ob},
-#line 32 "ParameterHash.gperf"
-      {"name", ParameterTypes::name},
+#line 99 "ParameterHash.gperf"
+      {"ws-src-ip", ParameterTypes::wsSrcIp},
+#line 63 "ParameterHash.gperf"
+      {"stale", ParameterTypes::stale},
+#line 13 "ParameterHash.gperf"
+      {"description", ParameterTypes::description},
+#line 22 "ParameterHash.gperf"
+      {"isfocus", ParameterTypes::isFocus},
+#line 26 "ParameterHash.gperf"
+      {"+sip.instance", ParameterTypes::Instance},
+#line 52 "ParameterHash.gperf"
+      {"comp", ParameterTypes::comp},
+#line 100 "ParameterHash.gperf"
+      {"ws-src-port", ParameterTypes::wsSrcPort},
 #line 29 "ParameterHash.gperf"
       {"gr", ParameterTypes::gr},
+#line 44 "ParameterHash.gperf"
+      {"duration", ParameterTypes::duration},
+#line 10 "ParameterHash.gperf"
+      {"data", ParameterTypes::data},
+#line 94 "ParameterHash.gperf"
+      {"app-id", ParameterTypes::appId},
+#line 95 "ParameterHash.gperf"
+      {"network-user", ParameterTypes::networkUser},
 #line 47 "ParameterHash.gperf"
       {"tag", ParameterTypes::tag},
-#line 52 "ParameterHash.gperf"
-      {"comp", ParameterTypes::comp},
-#line 96 "ParameterHash.gperf"
-      {"url", ParameterTypes::url},
-#line 34 "ParameterHash.gperf"
-      {"user", ParameterTypes::user},
-#line 40 "ParameterHash.gperf"
-      {"q", ParameterTypes::q},
-#line 26 "ParameterHash.gperf"
-      {"+sip.instance", ParameterTypes::Instance},
-#line 84 "ParameterHash.gperf"
-      {"mode", ParameterTypes::mode},
-#line 90 "ParameterHash.gperf"
-      {"model", ParameterTypes::model},
+#line 32 "ParameterHash.gperf"
+      {"name", ParameterTypes::name},
+#line 81 "ParameterHash.gperf"
+      {"permission", ParameterTypes::permission},
 #line 18 "ParameterHash.gperf"
       {"application", ParameterTypes::application},
-#line 68 "ParameterHash.gperf"
-      {"uri", ParameterTypes::uri},
-#line 80 "ParameterHash.gperf"
-      {"size", ParameterTypes::size},
-#line 98 "ParameterHash.gperf"
-      {"addtransport", ParameterTypes::addTransport},
-#line 67 "ParameterHash.gperf"
-      {"qop", ParameterTypes::qop},
-#line 38 "ParameterHash.gperf"
-      {"maddr", ParameterTypes::maddr},
-#line 13 "ParameterHash.gperf"
-      {"description", ParameterTypes::description},
-#line 41 "ParameterHash.gperf"
-      {"purpose", ParameterTypes::purpose},
-#line 75 "ParameterHash.gperf"
-      {"filename", ParameterTypes::filename},
-#line 56 "ParameterHash.gperf"
-      {"domain", ParameterTypes::domain},
-#line 35 "ParameterHash.gperf"
-      {"ext", ParameterTypes::extension},
-#line 24 "ParameterHash.gperf"
-      {"text", ParameterTypes::text},
-#line 81 "ParameterHash.gperf"
-      {"permission", ParameterTypes::permission},
 #line 21 "ParameterHash.gperf"
       {"type", ParameterTypes::type},
-#line 77 "ParameterHash.gperf"
-      {"micalg", ParameterTypes::micalg},
-#line 22 "ParameterHash.gperf"
-      {"isfocus", ParameterTypes::isFocus},
 #line 64 "ParameterHash.gperf"
       {"username", ParameterTypes::username},
-#line 94 "ParameterHash.gperf"
-      {"app-id", ParameterTypes::appId},
-#line 86 "ParameterHash.gperf"
-      {"charset", ParameterTypes::charset},
-#line 44 "ParameterHash.gperf"
-      {"duration", ParameterTypes::duration},
+#line 84 "ParameterHash.gperf"
+      {"mode", ParameterTypes::mode},
 #line 42 "ParameterHash.gperf"
       {"to-tag", ParameterTypes::toTag},
-#line 45 "ParameterHash.gperf"
-      {"expires", ParameterTypes::expires},
-#line 85 "ParameterHash.gperf"
-      {"server", ParameterTypes::server},
-#line 71 "ParameterHash.gperf"
-      {"d-alg", ParameterTypes::dAlg},
-#line 14 "ParameterHash.gperf"
-      {"events", ParameterTypes::events},
 #line 93 "ParameterHash.gperf"
       {"document", ParameterTypes::document},
-#line 66 "ParameterHash.gperf"
-      {"refresher", ParameterTypes::refresher},
-#line 25 "ParameterHash.gperf"
-      {"extensions", ParameterTypes::extensions},
-#line 60 "ParameterHash.gperf"
-      {"opaque", ParameterTypes::opaque},
-#line 50 "ParameterHash.gperf"
-      {"require", ParameterTypes::require},
 #line 15 "ParameterHash.gperf"
       {"priority", ParameterTypes::priority},
+#line 56 "ParameterHash.gperf"
+      {"domain", ParameterTypes::domain},
+#line 30 "ParameterHash.gperf"
+      {"pub-gruu", ParameterTypes::pubGruu},
+#line 61 "ParameterHash.gperf"
+      {"realm", ParameterTypes::realm},
+#line 27 "ParameterHash.gperf"
+      {"reg-id", ParameterTypes::regid},
+#line 86 "ParameterHash.gperf"
+      {"charset", ParameterTypes::charset},
+#line 90 "ParameterHash.gperf"
+      {"model", ParameterTypes::model},
+#line 87 "ParameterHash.gperf"
+      {"access-type", ParameterTypes::accessType},
+#line 98 "ParameterHash.gperf"
+      {"addtransport", ParameterTypes::addTransport},
+#line 14 "ParameterHash.gperf"
+      {"events", ParameterTypes::events},
 #line 83 "ParameterHash.gperf"
       {"directory", ParameterTypes::directory},
-#line 27 "ParameterHash.gperf"
-      {"reg-id", ParameterTypes::regid},
-#line 17 "ParameterHash.gperf"
-      {"schemes", ParameterTypes::schemes},
-#line 79 "ParameterHash.gperf"
-      {"expiration", ParameterTypes::expiration},
 #line 48 "ParameterHash.gperf"
       {"branch", ParameterTypes::branch},
 #line 91 "ParameterHash.gperf"
       {"version", ParameterTypes::version},
-#line 72 "ParameterHash.gperf"
-      {"d-qop", ParameterTypes::dQop},
+#line 31 "ParameterHash.gperf"
+      {"temp-gruu", ParameterTypes::tempGruu},
+#line 38 "ParameterHash.gperf"
+      {"maddr", ParameterTypes::maddr},
+#line 85 "ParameterHash.gperf"
+      {"server", ParameterTypes::server},
+#line 17 "ParameterHash.gperf"
+      {"schemes", ParameterTypes::schemes},
+#line 71 "ParameterHash.gperf"
+      {"d-alg", ParameterTypes::dAlg},
+#line 75 "ParameterHash.gperf"
+      {"filename", ParameterTypes::filename},
+#line 19 "ParameterHash.gperf"
+      {"video", ParameterTypes::video},
+#line 77 "ParameterHash.gperf"
+      {"micalg", ParameterTypes::micalg},
+#line 78 "ParameterHash.gperf"
+      {"boundary", ParameterTypes::boundary},
+#line 66 "ParameterHash.gperf"
+      {"refresher", ParameterTypes::refresher},
+#line 97 "ParameterHash.gperf"
+      {"sigcomp-id", ParameterTypes::sigcompId},
 #line 89 "ParameterHash.gperf"
       {"vendor", ParameterTypes::vendor},
-#line 95 "ParameterHash.gperf"
-      {"network-user", ParameterTypes::networkUser},
 #line 49 "ParameterHash.gperf"
       {"received", ParameterTypes::received},
-#line 19 "ParameterHash.gperf"
-      {"video", ParameterTypes::video},
-#line 87 "ParameterHash.gperf"
-      {"access-type", ParameterTypes::accessType},
-#line 20 "ParameterHash.gperf"
-      {"language", ParameterTypes::language},
 #line 36 "ParameterHash.gperf"
       {"method", ParameterTypes::method},
 #line 16 "ParameterHash.gperf"
       {"methods", ParameterTypes::methods},
-#line 43 "ParameterHash.gperf"
-      {"from-tag", ParameterTypes::fromTag},
+#line 20 "ParameterHash.gperf"
+      {"language", ParameterTypes::language},
+#line 40 "ParameterHash.gperf"
+      {"q", ParameterTypes::q},
+#line 73 "ParameterHash.gperf"
+      {"d-ver", ParameterTypes::dVer},
+#line 67 "ParameterHash.gperf"
+      {"qop", ParameterTypes::qop},
+#line 35 "ParameterHash.gperf"
+      {"ext", ParameterTypes::extension},
+#line 24 "ParameterHash.gperf"
+      {"text", ParameterTypes::text},
 #line 69 "ParameterHash.gperf"
       {"retry-after", ParameterTypes::retryAfter},
-#line 73 "ParameterHash.gperf"
-      {"d-ver", ParameterTypes::dVer},
+#line 88 "ParameterHash.gperf"
+      {"profile-type", ParameterTypes::profileType},
 #line 12 "ParameterHash.gperf"
       {"mobility", ParameterTypes::mobility},
+#line 25 "ParameterHash.gperf"
+      {"extensions", ParameterTypes::extensions},
+#line 45 "ParameterHash.gperf"
+      {"expires", ParameterTypes::expires},
+#line 43 "ParameterHash.gperf"
+      {"from-tag", ParameterTypes::fromTag},
+#line 60 "ParameterHash.gperf"
+      {"opaque", ParameterTypes::opaque},
+#line 50 "ParameterHash.gperf"
+      {"require", ParameterTypes::require},
+#line 74 "ParameterHash.gperf"
+      {"smime-type", ParameterTypes::smimeType},
+#line 79 "ParameterHash.gperf"
+      {"expiration", ParameterTypes::expiration},
 #line 46 "ParameterHash.gperf"
       {"handling", ParameterTypes::handling},
-#line 97 "ParameterHash.gperf"
-      {"sigcomp-id", ParameterTypes::sigcompId},
-#line 88 "ParameterHash.gperf"
-      {"profile-type", ParameterTypes::profileType},
+#line 72 "ParameterHash.gperf"
+      {"d-qop", ParameterTypes::dQop},
 #line 54 "ParameterHash.gperf"
       {"algorithm", ParameterTypes::algorithm},
-#line 78 "ParameterHash.gperf"
-      {"boundary", ParameterTypes::boundary},
-#line 74 "ParameterHash.gperf"
-      {"smime-type", ParameterTypes::smimeType},
 #line 65 "ParameterHash.gperf"
       {"early-only", ParameterTypes::earlyOnly},
-#line 31 "ParameterHash.gperf"
-      {"temp-gruu", ParameterTypes::tempGruu},
-#line 30 "ParameterHash.gperf"
-      {"pub-gruu", ParameterTypes::pubGruu},
 #line 92 "ParameterHash.gperf"
       {"effective-by", ParameterTypes::effectiveBy}
     };
 
-  static const signed char lookup[] =
+  static signed char lookup[] =
     {
-      -1, -1,  0,  1, -1,  2, -1,  3, -1, -1,  4, -1, -1, -1,
-       5,  6,  7, -1, -1,  8,  9, 10, 11, 12, 13, -1, -1, 14,
-      15, 16, 17, -1, 18, -1, 19, -1, -1, 20, 21, 22, -1, -1,
-      -1, 23, 24, -1, 25, -1, 26, 27, 28, 29, -1, 30, 31, -1,
-      -1, 32, 33, -1, 34, 35, 36, 37, -1, -1, 38, -1, 39, 40,
-      41, -1, -1, -1, 42, -1, 43, 44, 45, -1, -1, 46, 47, 48,
-      -1, -1, 49, 50, -1, -1, -1, 51, -1, -1, -1, 52, 53, -1,
-      54, 55, 56, 57, 58, 59, 60, -1, 61, 62, -1, -1, 63, 64,
-      65, -1, -1, 66, 67, 68, 69, -1, 70, 71, -1, 72, -1, -1,
-      73, 74, 75, -1, -1, 76, -1, -1, -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, 77, -1, -1, 78, -1, -1, -1, -1, 79,
-      -1, 80, -1, 81, -1, 82, -1, -1, -1, 83, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 84, -1,
-      -1, -1, -1, -1, -1, -1, -1, -1, 85, -1, -1, -1, 86, -1,
+      -1, -1,  0, -1,  1,  2,  3, -1,  4,  5, -1, -1,  6,  7,
+       8,  9, -1, 10, -1, -1, 11, 12, 13, 14, 15, -1, -1, 16,
+      17, 18, -1, -1, 19, 20, 21, 22, 23, 24, 25, 26, -1, 27,
+      28, 29, 30, -1, 31, 32, 33, 34, 35, 36, -1, -1, 37, -1,
+      -1, -1, 38, 39, -1, 40, -1, 41, -1, -1, -1, -1, 42, -1,
+      -1, 43, -1, 44, -1, 45, 46, 47, -1, -1, 48, 49, 50, -1,
+      -1, -1, 51, -1, -1, 52, -1, 53, 54, -1, 55, 56, 57, 58,
+      -1, -1, 59, -1, -1, 60, -1, 61, 62, -1, 63, 64, 65, 66,
+      -1, 67, -1, -1, 68, 69, 70, 71, 72, 73, -1, 74, 75, -1,
+      76, 77, 78, -1, 79, -1, 80, 81, 82, 83, -1, -1, -1, -1,
+      84, -1, -1, -1, -1, 85, -1, -1, 86, -1, -1, -1, -1, 87,
       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
+      -1, 88, -1, -1, -1, -1, -1, 89, -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-      -1, -1, -1, -1, -1, -1, -1, -1, -1, 87, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-      -1, 88
+      -1, -1, -1, 90
     };
 
   if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
@@ -408,6 +409,6 @@
     }
   return 0;
 }
-#line 99 "ParameterHash.gperf"
+#line 101 "ParameterHash.gperf"
 
 }
Index: resip/stack/ParameterHash.gperf
===================================================================
--- resip/stack/ParameterHash.gperf	(revision 9737)
+++ resip/stack/ParameterHash.gperf	(working copy)
@@ -96,5 +96,7 @@
 url, ParameterTypes::url
 sigcomp-id, ParameterTypes::sigcompId
 addtransport, ParameterTypes::addTransport
+ws-src-ip, ParameterTypes::wsSrcIp
+ws-src-port, ParameterTypes::wsSrcPort
 %%
 }
Index: resip/stack/ParameterTypeEnums.hxx
===================================================================
--- resip/stack/ParameterTypeEnums.hxx	(revision 9737)
+++ resip/stack/ParameterTypeEnums.hxx	(working copy)
@@ -145,6 +145,8 @@
          defineParam(qop, "qop", DataParameter, "RFC 3261"),
          defineParam(qopOptions, "qop", DataParameter, "RFC 3261"),
          defineParam(addTransport, "addTransport", ExistsParameter, "Internal"),
+		 defineParam(wsSrcIp, "ws-src-ip", DataParameter, ""),
+		 defineParam(wsSrcPort, "ws-src-port", UInt32Parameter, ""),
 
          MAX_PARAMETER
       };
Index: resip/stack/ParameterTypes.cxx
===================================================================
--- resip/stack/ParameterTypes.cxx	(revision 9737)
+++ resip/stack/ParameterTypes.cxx	(working copy)
@@ -146,6 +146,8 @@
 // Internal use only
 defineParam(qopOptions,"qop",DataParameter, Auth, "RFC 3261");
 defineParam(addTransport, "addTransport", ExistsParameter, Uri, "RESIP INTERNAL");
+defineParam(wsSrcIp, "ws-src-ip", DataParameter, Uri, "RESIP INTERNAL (WebSocket)");
+defineParam(wsSrcPort, "ws-src-port", UInt32Parameter, Uri, "RESIP INTERNAL (WebSocket)");
 
 #include "resip/stack/ParameterHash.hxx"
 
Index: resip/stack/ParameterTypes.hxx
===================================================================
--- resip/stack/ParameterTypes.hxx	(revision 9737)
+++ resip/stack/ParameterTypes.hxx	(working copy)
@@ -183,6 +183,8 @@
 // Internal use only
 defineParam(qopOptions,"qop",DataParameter, Auth, "RFC 3261");
 defineParam(addTransport, "addTransport", ExistsParameter, Uri, "RESIP INTERNAL");
+defineParam(wsSrcIp, "ws-src-ip", DataParameter, Uri, "RESIP INTERNAL (WebSocket)");
+defineParam(wsSrcPort, "ws-src-port", UInt32Parameter, Uri, "RESIP INTERNAL (WebSocket)");
 
 }
 
Index: resip/stack/SipMessage.cxx
===================================================================
--- resip/stack/SipMessage.cxx	(revision 9737)
+++ resip/stack/SipMessage.cxx	(working copy)
@@ -1506,6 +1506,12 @@
 
 defineHeader(ContentTransferEncoding, "Content-Transfer-Encoding", StringCategory, "RFC ?");
 defineHeader(Organization, "Organization", StringCategory, "RFC 3261");
+defineHeader(SecWebSocketKey, "Sec-WebSocket-Key", StringCategory, "RFC 6455");
+defineHeader(SecWebSocketKey1, "Sec-WebSocket-Key1", StringCategory, "draft-hixie- thewebsocketprotocol-76");
+defineHeader(SecWebSocketKey2, "Sec-WebSocket-Key2", StringCategory, "draft-hixie- thewebsocketprotocol-76");
+defineHeader(Origin, "Origin", StringCategory, "draft-hixie- thewebsocketprotocol-76");
+defineHeader(Host, "Host", StringCategory, "draft-hixie- thewebsocketprotocol-76");
+defineHeader(SecWebSocketAccept, "Sec-WebSocket-Accept", StringCategory, "RFC 6455");
 defineHeader(Server, "Server", StringCategory, "RFC 3261");
 defineHeader(Subject, "Subject", StringCategory, "RFC 3261");
 defineHeader(UserAgent, "User-Agent", StringCategory, "RFC 3261");
Index: resip/stack/SipMessage.hxx
===================================================================
--- resip/stack/SipMessage.hxx	(revision 9737)
+++ resip/stack/SipMessage.hxx	(working copy)
@@ -386,6 +386,12 @@
 
       defineHeader(ContentTransferEncoding, "Content-Transfer-Encoding", StringCategory, "RFC 1521");
       defineHeader(Organization, "Organization", StringCategory, "RFC 3261");
+	  defineHeader(SecWebSocketKey, "Sec-WebSocket-Key", StringCategory, "RFC 6455");
+	  defineHeader(SecWebSocketKey1, "Sec-WebSocket-Key1", StringCategory, "draft-hixie- thewebsocketprotocol-76");
+	  defineHeader(SecWebSocketKey2, "Sec-WebSocket-Key2", StringCategory, "draft-hixie- thewebsocketprotocol-76");
+	  defineHeader(Origin, "Origin", StringCategory, "draft-hixie- thewebsocketprotocol-76");
+	  defineHeader(Host, "Host", StringCategory, "draft-hixie- thewebsocketprotocol-76");
+	  defineHeader(SecWebSocketAccept, "Sec-WebSocket-Accept", StringCategory, "RFC 6455");
       defineHeader(Server, "Server", StringCategory, "RFC 3261");
       defineHeader(Subject, "Subject", StringCategory, "RFC 3261");
       defineHeader(UserAgent, "User-Agent", StringCategory, "RFC 3261");
Index: resip/stack/SipStack.cxx
===================================================================
--- resip/stack/SipStack.cxx	(revision 9737)
+++ resip/stack/SipStack.cxx	(working copy)
@@ -30,6 +30,7 @@
 #include "rutil/AsyncProcessHandler.hxx"
 #include "resip/stack/TcpTransport.hxx"
 #include "resip/stack/UdpTransport.hxx"
+#include "resip/stack/WsTransport.hxx"
 #include "resip/stack/TransactionUser.hxx"
 #include "resip/stack/TransactionUserMessage.hxx"
 #include "resip/stack/TransactionControllerThread.hxx"
@@ -375,6 +376,21 @@
             assert(0);
 #endif
             break;
+
+		case WS:
+#if defined( USE_SSL )
+            transport = new WsTransport(stateMacFifo, 
+								port, 
+								version, 
+								ipInterface, 
+								mSocketFunc, 
+								*mCompression, 
+								transportFlags);
+#else
+			CritLog (<< "WebSockets not supported in this stack. You don't have openssl");
+            assert(0);
+#endif
+            break;
          default:
             assert(0);
             break;
Index: resip/stack/Symbols.cxx
===================================================================
--- resip/stack/Symbols.cxx	(revision 9737)
+++ resip/stack/Symbols.cxx	(working copy)
@@ -75,6 +75,7 @@
 
 const int Symbols::DefaultSipPort = 5060;
 const int Symbols::SipTlsPort = 5061;
+const int Symbols::SipWsPort = 5062;
 const int Symbols::DefaultSipsPort = 5061;
 
 const char* Symbols::SrvSip = "_sip";
Index: resip/stack/Symbols.hxx
===================================================================
--- resip/stack/Symbols.hxx	(revision 9737)
+++ resip/stack/Symbols.hxx	(working copy)
@@ -76,6 +76,7 @@
 
       static const int DefaultSipPort;
       static const int SipTlsPort;
+	  static const int SipWsPort;
       static const int DefaultSipsPort;
 
       static const char* SrvSip;
Index: resip/stack/TerminateFlow.hxx
===================================================================
--- resip/stack/TerminateFlow.hxx	(revision 9737)
+++ resip/stack/TerminateFlow.hxx	(working copy)
@@ -1,94 +1,94 @@
-#ifndef TerminateFlow_Include_Guard
-#define TerminateFlow_Include_Guard
-
-#include "resip/stack/TransactionMessage.hxx"
-#include "resip/stack/Tuple.hxx"
-
-namespace resip
-{
-class TerminateFlow : public TransactionMessage
-{
-   public:
-      explicit TerminateFlow(const resip::Tuple& flow) :
-         mFlow(flow)
-      {}
-      virtual ~TerminateFlow(){}
-
-      virtual const Data& getTransactionId() const {return Data::Empty;}
-      const Tuple& getFlow() const { return mFlow; }
-
-      virtual bool isClientTransaction() const {return true;}
-      virtual EncodeStream& encode(EncodeStream& strm) const
-      {
-         return strm << "TerminateFlow: " << mFlow;
-      }
-      virtual EncodeStream& encodeBrief(EncodeStream& strm) const
-      {
-         return strm << "TerminateFlow: " << mFlow;
-      }
-
-      virtual Message* clone() const
-      {
-         return new TerminateFlow(*this);
-      }
-
-   protected:
-      const resip::Tuple mFlow;
-
-}; // class TerminateFlow
-
-} // namespace resip
-
-#endif // include guard
-
-/* ====================================================================
- * The Vovida Software License, Version 1.0 
- * 
- * Copyright (c) 2004 Vovida Networks, Inc.  All rights reserved.
- * 
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- * 
- * 1. Redistributions of source code must retain the above copyright
- *    notice, this list of conditions and the following disclaimer.
- * 
- * 2. Redistributions in binary form must reproduce the above copyright
- *    notice, this list of conditions and the following disclaimer in
- *    the documentation and/or other materials provided with the
- *    distribution.
- * 
- * 3. The names "VOCAL", "Vovida Open Communication Application Library",
- *    and "Vovida Open Communication Application Library (VOCAL)" must
- *    not be used to endorse or promote products derived from this
- *    software without prior written permission. For written
- *    permission, please contact vocal@vovida.org.
- *
- * 4. Products derived from this software may not be called "VOCAL", nor
- *    may "VOCAL" appear in their name, without prior written
- *    permission of Vovida Networks, Inc.
- * 
- * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESSED OR IMPLIED
- * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
- * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND
- * NON-INFRINGEMENT ARE DISCLAIMED.  IN NO EVENT SHALL VOVIDA
- * NETWORKS, INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT DAMAGES
- * IN EXCESS OF $1,000, NOR FOR ANY INDIRECT, INCIDENTAL, SPECIAL,
- * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
- * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
- * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
- * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
- * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
- * DAMAGE.
- * 
- * ====================================================================
- * 
- * This software consists of voluntary contributions made by Vovida
- * Networks, Inc. and many individuals on behalf of Vovida Networks,
- * Inc.  For more information on Vovida Networks, Inc., please see
- * <http://www.vovida.org/>.
- *
- * vi: set shiftwidth=3 expandtab:
- */
-
+#ifndef TerminateFlow_Include_Guard
+#define TerminateFlow_Include_Guard
+
+#include "resip/stack/TransactionMessage.hxx"
+#include "resip/stack/Tuple.hxx"
+
+namespace resip
+{
+class TerminateFlow : public TransactionMessage
+{
+   public:
+      explicit TerminateFlow(const resip::Tuple& flow) :
+         mFlow(flow)
+      {}
+      virtual ~TerminateFlow(){}
+
+      virtual const Data& getTransactionId() const {return Data::Empty;}
+      const Tuple& getFlow() const { return mFlow; }
+
+      virtual bool isClientTransaction() const {return true;}
+      virtual EncodeStream& encode(EncodeStream& strm) const
+      {
+         return strm << "TerminateFlow: " << mFlow;
+      }
+      virtual EncodeStream& encodeBrief(EncodeStream& strm) const
+      {
+         return strm << "TerminateFlow: " << mFlow;
+      }
+
+      virtual Message* clone() const
+      {
+         return new TerminateFlow(*this);
+      }
+
+   protected:
+      const resip::Tuple mFlow;
+
+}; // class TerminateFlow
+
+} // namespace resip
+
+#endif // include guard
+
+/* ====================================================================
+ * The Vovida Software License, Version 1.0 
+ * 
+ * Copyright (c) 2004 Vovida Networks, Inc.  All rights reserved.
+ * 
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in
+ *    the documentation and/or other materials provided with the
+ *    distribution.
+ * 
+ * 3. The names "VOCAL", "Vovida Open Communication Application Library",
+ *    and "Vovida Open Communication Application Library (VOCAL)" must
+ *    not be used to endorse or promote products derived from this
+ *    software without prior written permission. For written
+ *    permission, please contact vocal@vovida.org.
+ *
+ * 4. Products derived from this software may not be called "VOCAL", nor
+ *    may "VOCAL" appear in their name, without prior written
+ *    permission of Vovida Networks, Inc.
+ * 
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESSED OR IMPLIED
+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
+ * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND
+ * NON-INFRINGEMENT ARE DISCLAIMED.  IN NO EVENT SHALL VOVIDA
+ * NETWORKS, INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT DAMAGES
+ * IN EXCESS OF $1,000, NOR FOR ANY INDIRECT, INCIDENTAL, SPECIAL,
+ * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
+ * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
+ * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
+ * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
+ * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
+ * DAMAGE.
+ * 
+ * ====================================================================
+ * 
+ * This software consists of voluntary contributions made by Vovida
+ * Networks, Inc. and many individuals on behalf of Vovida Networks,
+ * Inc.  For more information on Vovida Networks, Inc., please see
+ * <http://www.vovida.org/>.
+ *
+ * vi: set shiftwidth=3 expandtab:
+ */
+
Index: resip/stack/TransactionState.cxx
===================================================================
--- resip/stack/TransactionState.cxx	(revision 9737)
+++ resip/stack/TransactionState.cxx	(working copy)
@@ -2575,7 +2575,7 @@
    }
    else
    {
-      assert(0);
+      //assert(0);
    }
 }
 
Index: resip/stack/TransportSelector.cxx
===================================================================
--- resip/stack/TransportSelector.cxx	(revision 9737)
+++ resip/stack/TransportSelector.cxx	(working copy)
@@ -26,6 +26,7 @@
 #include "resip/stack/TcpBaseTransport.hxx"
 #include "resip/stack/TcpTransport.hxx"
 #include "resip/stack/UdpTransport.hxx"
+#include "resip/stack/WsTransport.hxx"
 #include "resip/stack/Uri.hxx"
 
 #include "rutil/DataStream.hxx"
@@ -205,6 +206,10 @@
    }
 #endif
 #endif
+   else if(transport->transport()==WS)
+   {
+      assert(dynamic_cast<WsTransport*>(transport));
+   }
    else
    {
       assert(0);
@@ -218,6 +223,7 @@
    {
       case UDP:
       case TCP:
+	  case WS:
       {
          assert(mExactTransports.find(tuple) == mExactTransports.end() &&
                 mAnyInterfaceTransports.find(tuple) == mAnyInterfaceTransports.end());
Index: resip/stack/Uri.cxx
===================================================================
--- resip/stack/Uri.cxx	(revision 9737)
+++ resip/stack/Uri.cxx	(working copy)
@@ -1320,6 +1320,8 @@
 defineParam(sigcompId, "sigcomp-id", QuotedDataParameter, "RFC 5049");
 defineParam(rinstance, "rinstance", DataParameter, "proprietary (resip)");
 defineParam(addTransport, "addTransport", ExistsParameter, "RESIP INTERNAL");
+defineParam(wsSrcIp, "ws-src-ip", DataParameter, "RESIP INTERNAL (WebSocket)");
+defineParam(wsSrcPort, "ws-src-port", UInt32Parameter, "RESIP INTERNAL (WebSocket)");
 
 #undef defineParam
 
Index: resip/stack/Uri.hxx
===================================================================
--- resip/stack/Uri.hxx	(revision 9737)
+++ resip/stack/Uri.hxx	(working copy)
@@ -248,6 +248,8 @@
       defineParam(sigcompId, "sigcomp-id", QuotedDataParameter, "RFC 5049");
       defineParam(rinstance, "rinstance", DataParameter, "proprietary (resip)");
       defineParam(addTransport, "addTransport", ExistsParameter, "RESIP INTERNAL");
+	  defineParam(wsSrcIp, "ws-src-ip", DataParameter, "RESIP INTERNAL (WebSocket)");
+	  defineParam(wsSrcPort, "ws-src-port", UInt32Parameter, "RESIP INTERNAL (WebSocket)");
 
 #undef defineParam
 
Index: resip/stack/WsDecorator.cxx
===================================================================
--- resip/stack/WsDecorator.cxx	(revision 0)
+++ resip/stack/WsDecorator.cxx	(working copy)
@@ -0,0 +1,59 @@
+#include "WsDecorator.hxx"
+
+#include "SipMessage.hxx"
+#include "Tuple.hxx"
+#include "Transport.hxx"
+
+
+using namespace std;
+using namespace resip;
+
+WsDecorator::WsDecorator()
+{
+}
+
+WsDecorator::~WsDecorator()
+{
+}
+
+void 
+WsDecorator::decorateMessage(resip::SipMessage &msg, const resip::Tuple &source, const resip::Tuple &destination, const resip::Data& sigcompId)
+{
+	const resip::Tuple& wsSource = msg.getSource();
+
+	if(wsSource.getType() == resip::WS){
+		if(msg.exists(resip::h_Contacts)){
+			resip::NameAddr& contact = msg.header(resip::h_Contacts).front();
+
+			if (isEqualNoCase(contact.uri().host(), resip::Data("df7jal23ls0d.invalid"))){
+				contact.uri().host() = resip::Tuple::inet_ntop(source);
+				contact.uri().port() = source.getPort();
+				contact.uri().param(resip::p_transport) = resip::Tuple::toDataLower(source.getType());
+				
+				contact.uri().param(resip::p_wsSrcIp) = resip::Tuple::inet_ntop(wsSource);
+				contact.uri().param(resip::p_wsSrcPort) = wsSource.getPort();
+			}
+		}
+
+		if(msg.exists(resip::h_Vias)){
+			resip::Via &via = msg.header(resip::h_Vias).back();
+			if (isEqualNoCase(via.sentHost(), resip::Data("df7jal23ls0d.invalid"))){
+				via.sentHost() = resip::Tuple::inet_ntop(wsSource);
+				via.sentPort() = wsSource.getPort();
+				via.transport() = "TCP"; // most servers get crazy if we send "WS" as transport
+			}
+		}
+	}
+}
+
+void 
+WsDecorator::rollbackMessage(resip::SipMessage& msg)
+{
+
+}
+
+MessageDecorator* WsDecorator::clone() const
+{
+	return new WsDecorator(*this);
+}
+
Index: resip/stack/WsDecorator.hxx
===================================================================
--- resip/stack/WsDecorator.hxx	(revision 0)
+++ resip/stack/WsDecorator.hxx	(working copy)
@@ -0,0 +1,25 @@
+#ifndef WSDecorator_Include_Guard
+#define WSDecorator_Include_Guard
+
+#include "MessageDecorator.hxx"
+#include "Tuple.hxx"
+
+namespace resip
+{
+class WsDecorator : public MessageDecorator
+{
+	public:
+      WsDecorator();
+	  virtual ~WsDecorator();
+
+		virtual void decorateMessage(SipMessage &msg, 
+                                    const Tuple &source,
+                                    const Tuple &destination,
+                                    const Data& sigcompId) ;
+	  virtual void rollbackMessage(SipMessage& msg);
+      virtual MessageDecorator* clone() const;
+};
+
+}// namespace resip
+
+#endif /* WSDecorator_Include_Guard */
Index: resip/stack/WsTransport.cxx
===================================================================
--- resip/stack/WsTransport.cxx	(revision 0)
+++ resip/stack/WsTransport.cxx	(working copy)
@@ -0,0 +1,99 @@
+#if defined(HAVE_CONFIG_H)
+#include "resip/stack/config.hxx"
+#endif
+
+#include <memory>
+#include "rutil/compat.hxx"
+#include "rutil/Data.hxx"
+#include "rutil/Socket.hxx"
+#include "rutil/Logger.hxx"
+#include "resip/stack/WsTransport.hxx"
+#include "resip/stack/TcpConnection.hxx"
+#include "rutil/WinLeakCheck.hxx"
+
+#define RESIPROCATE_SUBSYSTEM Subsystem::TRANSPORT
+
+using namespace std;
+using namespace resip;
+
+WsTransport::WsTransport(Fifo<TransactionMessage>& fifo, int portNum,
+                           IpVersion version, const Data& pinterface,
+                           AfterSocketCreationFuncPtr socketFunc,
+                           Compression &compression,
+                           unsigned transportFlags)
+   : TcpBaseTransport(fifo, portNum, version, pinterface, socketFunc, compression, transportFlags)
+{
+   mTuple.setType(transport());
+
+   init();
+
+   InfoLog (<< "Creating WS transport host=" << pinterface
+            << " port=" << mTuple.getPort()
+            << " ipv4=" << bool(version==V4) );
+            
+   mTxFifo.setDescription("WsTransport::mTxFifo");
+}
+
+WsTransport::~WsTransport()
+{
+}
+
+Connection*
+WsTransport::createConnection(const Tuple& who, Socket fd, bool server)
+{
+   assert(this);
+   Connection* conn = new TcpConnection(this,who, fd, mCompression);
+   return conn;
+}
+
+
+/* ====================================================================
+ * The Vovida Software License, Version 1.0
+ *
+ * Copyright (c) 2000 Vovida Networks, Inc.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ *
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in
+ *    the documentation and/or other materials provided with the
+ *    distribution.
+ *
+ * 3. The names "VOCAL", "Vovida Open Communication Application Library",
+ *    and "Vovida Open Communication Application Library (VOCAL)" must
+ *    not be used to endorse or promote products derived from this
+ *    software without prior written permission. For written
+ *    permission, please contact vocal@vovida.org.
+ *
+ * 4. Products derived from this software may not be called "VOCAL", nor
+ *    may "VOCAL" appear in their name, without prior written
+ *    permission of Vovida Networks, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESSED OR IMPLIED
+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
+ * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND
+ * NON-INFRINGEMENT ARE DISCLAIMED.  IN NO EVENT SHALL VOVIDA
+ * NETWORKS, INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT DAMAGES
+ * IN EXCESS OF $1,000, NOR FOR ANY INDIRECT, INCIDENTAL, SPECIAL,
+ * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
+ * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
+ * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
+ * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
+ * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
+ * DAMAGE.
+ *
+ * ====================================================================
+ *
+ * This software consists of voluntary contributions made by Vovida
+ * Networks, Inc. and many individuals on behalf of Vovida Networks,
+ * Inc.  For more information on Vovida Networks, Inc., please see
+ * <http://www.vovida.org/>.
+ *
+ * vi: set shiftwidth=3 expandtab:
+ */
Index: resip/stack/WsTransport.hxx
===================================================================
--- resip/stack/WsTransport.hxx	(revision 0)
+++ resip/stack/WsTransport.hxx	(working copy)
@@ -0,0 +1,85 @@
+#if !defined(RESIP_WSTRANSPORT_HXX)
+#define RESIP_WSTRANSPORT_HXX
+
+#include "resip/stack/TcpBaseTransport.hxx"
+#include "resip/stack/Compression.hxx"
+
+namespace resip
+{
+
+class Connection;
+class Message;
+class Security;
+
+class WsTransport : public TcpBaseTransport
+{
+   public:
+      RESIP_HeapCount(WsTransport);
+      WsTransport(Fifo<TransactionMessage>& fifo,
+                   int portNum,
+                   IpVersion version,
+                   const Data& interfaceObj,
+                   AfterSocketCreationFuncPtr socketFunc=0,
+                   Compression &compression = Compression::Disabled,
+                   unsigned transportFlags = 0);
+      virtual  ~WsTransport();
+
+      TransportType transport() const { return WS; }
+   protected:
+      Connection* createConnection(const Tuple& who, Socket fd, bool server=false);
+};
+
+}
+
+
+#endif
+
+/* ====================================================================
+ * The Vovida Software License, Version 1.0 
+ * 
+ * Copyright (c) 2000 Vovida Networks, Inc.  All rights reserved.
+ * 
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in
+ *    the documentation and/or other materials provided with the
+ *    distribution.
+ * 
+ * 3. The names "VOCAL", "Vovida Open Communication Application Library",
+ *    and "Vovida Open Communication Application Library (VOCAL)" must
+ *    not be used to endorse or promote products derived from this
+ *    software without prior written permission. For written
+ *    permission, please contact vocal@vovida.org.
+ *
+ * 4. Products derived from this software may not be called "VOCAL", nor
+ *    may "VOCAL" appear in their name, without prior written
+ *    permission of Vovida Networks, Inc.
+ * 
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESSED OR IMPLIED
+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
+ * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND
+ * NON-INFRINGEMENT ARE DISCLAIMED.  IN NO EVENT SHALL VOVIDA
+ * NETWORKS, INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT DAMAGES
+ * IN EXCESS OF $1,000, NOR FOR ANY INDIRECT, INCIDENTAL, SPECIAL,
+ * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
+ * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
+ * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
+ * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
+ * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
+ * DAMAGE.
+ * 
+ * ====================================================================
+ * 
+ * This software consists of voluntary contributions made by Vovida
+ * Networks, Inc. and many individuals on behalf of Vovida Networks,
+ * Inc.  For more information on Vovida Networks, Inc., please see
+ * <http://www.vovida.org/>.
+ *
+ */
\ No newline at end of file
Index: resip/stack/gperf_w32.bat
===================================================================
--- resip/stack/gperf_w32.bat	(revision 9737)
+++ resip/stack/gperf_w32.bat	(working copy)
@@ -1,17 +1,17 @@
-@echo off
-echo WARNING - use of this batch file is only recommended for advanced users.  
-echo           It is used to automate the first step required in creating the 
-echo           GPERF HASH files for resiprocate on windows.  Once this step 
-echo           has completed the generated files must be manually edited 
-echo           (at least until proper win 32 scripts are created)
-echo           for case insensitvity.
-echo.
-echo Note - Ensure gperf.exe is present in the path or resip/stack directory  
-echo        before continuing
-echo.
-pause
-gperf -D -E -L C++ -t -k "*" --compare-strncmp -Z MethodHash MethodHash.gperf > MethodHash.cxx
-gperf -D -E -L C++ -t -k "*" --compare-strncmp -Z HeaderHash HeaderHash.gperf > HeaderHash.cxx
-gperf -D -E -L C++ -t -k "*" --compare-strncmp -Z ParameterHash ParameterHash.gperf > ParameterHash.cxx
-echo Don't forget to manually add the tolower calls - see gperfNotes.txt and Makefile
-pause
+@echo off
+echo WARNING - use of this batch file is only recommended for advanced users.  
+echo           It is used to automate the first step required in creating the 
+echo           GPERF HASH files for resiprocate on windows.  Once this step 
+echo           has completed the generated files must be manually edited 
+echo           (at least until proper win 32 scripts are created)
+echo           for case insensitvity.
+echo.
+echo Note - Ensure gperf.exe is present in the path or resip/stack directory  
+echo        before continuing
+echo.
+pause
+gperf -D -E -L C++ -t -k "*" --compare-strncmp --ignore-case -Z MethodHash MethodHash.gperf > MethodHash.cxx
+gperf -D -E -L C++ -t -k "*" --compare-strncmp --ignore-case -Z HeaderHash HeaderHash.gperf > HeaderHash.cxx
+gperf -D -E -L C++ -t -k "*" --compare-strncmp --ignore-case -Z ParameterHash ParameterHash.gperf > ParameterHash.cxx
+echo Don't forget to manually add the tolower calls - see gperfNotes.txt and Makefile
+pause
Index: resip/stack/resiprocate_10_0.vcxproj
===================================================================
--- resip/stack/resiprocate_10_0.vcxproj	(revision 9737)
+++ resip/stack/resiprocate_10_0.vcxproj	(working copy)
@@ -1,647 +1,647 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <ItemGroup Label="ProjectConfigurations">
-    <ProjectConfiguration Include="Debug|Win32">
-      <Configuration>Debug</Configuration>
-      <Platform>Win32</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="Debug|x64">
-      <Configuration>Debug</Configuration>
-      <Platform>x64</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="Release|Win32">
-      <Configuration>Release</Configuration>
-      <Platform>Win32</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="Release|x64">
-      <Configuration>Release</Configuration>
-      <Platform>x64</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="SSL-Debug|Win32">
-      <Configuration>SSL-Debug</Configuration>
-      <Platform>Win32</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="SSL-Debug|x64">
-      <Configuration>SSL-Debug</Configuration>
-      <Platform>x64</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="SSL-Release|Win32">
-      <Configuration>SSL-Release</Configuration>
-      <Platform>Win32</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="SSL-Release|x64">
-      <Configuration>SSL-Release</Configuration>
-      <Platform>x64</Platform>
-    </ProjectConfiguration>
-  </ItemGroup>
-  <PropertyGroup Label="Globals">
-    <ProjectName>resiprocate</ProjectName>
-    <ProjectGuid>{2A8BE839-6466-4001-B224-8F1C3168D04A}</ProjectGuid>
-    <RootNamespace>resiprocate</RootNamespace>
-    <Keyword>Win32Proj</Keyword>
-  </PropertyGroup>
-  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='SSL-Release|Win32'" Label="Configuration">
-    <ConfigurationType>StaticLibrary</ConfigurationType>
-    <UseOfMfc>false</UseOfMfc>
-    <CharacterSet>MultiByte</CharacterSet>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='SSL-Release|x64'" Label="Configuration">
-    <ConfigurationType>StaticLibrary</ConfigurationType>
-    <UseOfMfc>false</UseOfMfc>
-    <CharacterSet>MultiByte</CharacterSet>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='SSL-Debug|Win32'" Label="Configuration">
-    <ConfigurationType>StaticLibrary</ConfigurationType>
-    <UseOfMfc>false</UseOfMfc>
-    <CharacterSet>MultiByte</CharacterSet>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='SSL-Debug|x64'" Label="Configuration">
-    <ConfigurationType>StaticLibrary</ConfigurationType>
-    <UseOfMfc>false</UseOfMfc>
-    <CharacterSet>MultiByte</CharacterSet>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
-    <ConfigurationType>StaticLibrary</ConfigurationType>
-    <UseOfMfc>false</UseOfMfc>
-    <CharacterSet>MultiByte</CharacterSet>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
-    <ConfigurationType>StaticLibrary</ConfigurationType>
-    <UseOfMfc>false</UseOfMfc>
-    <CharacterSet>MultiByte</CharacterSet>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
-    <ConfigurationType>StaticLibrary</ConfigurationType>
-    <UseOfMfc>false</UseOfMfc>
-    <CharacterSet>MultiByte</CharacterSet>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
-    <ConfigurationType>StaticLibrary</ConfigurationType>
-    <UseOfMfc>false</UseOfMfc>
-    <CharacterSet>MultiByte</CharacterSet>
-  </PropertyGroup>
-  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
-  <ImportGroup Label="ExtensionSettings">
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='SSL-Release|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" />
-    <Import Project="$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='SSL-Release|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" />
-    <Import Project="$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='SSL-Debug|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" />
-    <Import Project="$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='SSL-Debug|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" />
-    <Import Project="$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" />
-    <Import Project="$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" />
-    <Import Project="$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" />
-    <Import Project="$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" />
-    <Import Project="$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props" />
-  </ImportGroup>
-  <PropertyGroup Label="UserMacros" />
-  <PropertyGroup>
-    <_ProjectFileVersion>10.0.21006.1</_ProjectFileVersion>
-    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Debug\</OutDir>
-    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Debug\</OutDir>
-    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Debug\</IntDir>
-    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Debug\</IntDir>
-    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Release\</OutDir>
-    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Release\</OutDir>
-    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Release\</IntDir>
-    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Release\</IntDir>
-    <OutDir Condition="'$(Configuration)|$(Platform)'=='SSL-Debug|Win32'">SSL-Debug\</OutDir>
-    <OutDir Condition="'$(Configuration)|$(Platform)'=='SSL-Debug|x64'">SSL-Debug\</OutDir>
-    <IntDir Condition="'$(Configuration)|$(Platform)'=='SSL-Debug|Win32'">SSL-Debug\</IntDir>
-    <IntDir Condition="'$(Configuration)|$(Platform)'=='SSL-Debug|x64'">SSL-Debug\</IntDir>
-    <OutDir Condition="'$(Configuration)|$(Platform)'=='SSL-Release|Win32'">SSL-Release\</OutDir>
-    <OutDir Condition="'$(Configuration)|$(Platform)'=='SSL-Release|x64'">SSL-Release\</OutDir>
-    <IntDir Condition="'$(Configuration)|$(Platform)'=='SSL-Release|Win32'">SSL-Release\</IntDir>
-    <IntDir Condition="'$(Configuration)|$(Platform)'=='SSL-Release|x64'">SSL-Release\</IntDir>
-    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">AllRules.ruleset</CodeAnalysisRuleSet>
-    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">AllRules.ruleset</CodeAnalysisRuleSet>
-    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" />
-    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" />
-    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" />
-    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" />
-    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">AllRules.ruleset</CodeAnalysisRuleSet>
-    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Release|x64'">AllRules.ruleset</CodeAnalysisRuleSet>
-    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" />
-    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Release|x64'" />
-    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" />
-    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Release|x64'" />
-    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='SSL-Debug|Win32'">AllRules.ruleset</CodeAnalysisRuleSet>
-    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='SSL-Debug|x64'">AllRules.ruleset</CodeAnalysisRuleSet>
-    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='SSL-Debug|Win32'" />
-    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='SSL-Debug|x64'" />
-    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='SSL-Debug|Win32'" />
-    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='SSL-Debug|x64'" />
-    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='SSL-Release|Win32'">AllRules.ruleset</CodeAnalysisRuleSet>
-    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='SSL-Release|x64'">AllRules.ruleset</CodeAnalysisRuleSet>
-    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='SSL-Release|Win32'" />
-    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='SSL-Release|x64'" />
-    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='SSL-Release|Win32'" />
-    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='SSL-Release|x64'" />
-  </PropertyGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-    <ClCompile>
-      <AdditionalOptions>/Zm300 %(AdditionalOptions)</AdditionalOptions>
-      <Optimization>Disabled</Optimization>
-      <AdditionalIncludeDirectories>$(ProjectDir)../../contrib/ares;$(ProjectDir)../;$(ProjectDir)../../;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>WIN32;_DEBUG;_LIB;USE_ARES;USE_IPV6;LEAK_CHECK;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <MinimalRebuild>true</MinimalRebuild>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <BufferSecurityCheck>true</BufferSecurityCheck>
-      <RuntimeTypeInfo>true</RuntimeTypeInfo>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-    </ClCompile>
-    <Lib>
-      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
-    </Lib>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
-    <ClCompile>
-      <AdditionalOptions>/Zm300 %(AdditionalOptions)</AdditionalOptions>
-      <Optimization>Disabled</Optimization>
-      <AdditionalIncludeDirectories>$(ProjectDir)../../contrib/ares;$(ProjectDir)../;$(ProjectDir)../../;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>WIN32;_DEBUG;_LIB;USE_ARES;USE_IPV6;LEAK_CHECK;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <BufferSecurityCheck>true</BufferSecurityCheck>
-      <RuntimeTypeInfo>true</RuntimeTypeInfo>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-    </ClCompile>
-    <Lib>
-      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
-    </Lib>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
-    <ClCompile>
-      <AdditionalOptions>/Zm300 %(AdditionalOptions)</AdditionalOptions>
-      <Optimization>MaxSpeed</Optimization>
-      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
-      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
-      <OmitFramePointers>true</OmitFramePointers>
-      <AdditionalIncludeDirectories>$(ProjectDir)../../contrib/ares;$(ProjectDir)../;$(ProjectDir)../../;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>WIN32;NDEBUG;_LIB;USE_ARES;USE_IPV6;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <StringPooling>true</StringPooling>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <BufferSecurityCheck>false</BufferSecurityCheck>
-      <FunctionLevelLinking>true</FunctionLevelLinking>
-      <RuntimeTypeInfo>true</RuntimeTypeInfo>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>
-      </DebugInformationFormat>
-    </ClCompile>
-    <Lib>
-      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
-    </Lib>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
-    <ClCompile>
-      <AdditionalOptions>/Zm300 %(AdditionalOptions)</AdditionalOptions>
-      <Optimization>MaxSpeed</Optimization>
-      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
-      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
-      <OmitFramePointers>true</OmitFramePointers>
-      <AdditionalIncludeDirectories>$(ProjectDir)../../contrib/ares;$(ProjectDir)../;$(ProjectDir)../../;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>WIN32;NDEBUG;_LIB;USE_ARES;USE_IPV6;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <StringPooling>true</StringPooling>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <BufferSecurityCheck>false</BufferSecurityCheck>
-      <FunctionLevelLinking>true</FunctionLevelLinking>
-      <RuntimeTypeInfo>true</RuntimeTypeInfo>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>
-      </DebugInformationFormat>
-    </ClCompile>
-    <Lib>
-      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
-    </Lib>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='SSL-Debug|Win32'">
-    <ClCompile>
-      <AdditionalOptions>/Zm300 %(AdditionalOptions)</AdditionalOptions>
-      <Optimization>Disabled</Optimization>
-      <AdditionalIncludeDirectories>$(ProjectDir)../../contrib/ares;$(ProjectDir)../;$(ProjectDir)../../;$(ProjectDir)../../contrib/openssl/include;$(ProjectDir)../../contrib/openssl/inc32;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>WIN32;_DEBUG;_LIB;LEAK_CHECK;USE_SSL;USE_ARES;USE_IPV6;USE_DTLS;NO_IPHLPAPI;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <MinimalRebuild>true</MinimalRebuild>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <RuntimeTypeInfo>true</RuntimeTypeInfo>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>
-    </ClCompile>
-    <Lib>
-      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
-    </Lib>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='SSL-Debug|x64'">
-    <ClCompile>
-      <AdditionalOptions>/Zm300 %(AdditionalOptions)</AdditionalOptions>
-      <Optimization>Disabled</Optimization>
-      <AdditionalIncludeDirectories>$(ProjectDir)../../contrib/ares;$(ProjectDir)../;$(ProjectDir)../../;$(ProjectDir)../../contrib/openssl/include;$(ProjectDir)../../contrib/openssl/inc32;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>WIN32;_DEBUG;_LIB;LEAK_CHECK;USE_SSL;USE_ARES;USE_IPV6;USE_DTLS;NO_IPHLPAPI;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <RuntimeTypeInfo>true</RuntimeTypeInfo>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-    </ClCompile>
-    <Lib>
-      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
-    </Lib>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='SSL-Release|Win32'">
-    <ClCompile>
-      <AdditionalOptions>/Zm300 %(AdditionalOptions)</AdditionalOptions>
-      <Optimization>MaxSpeed</Optimization>
-      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
-      <OmitFramePointers>true</OmitFramePointers>
-      <AdditionalIncludeDirectories>$(ProjectDir)../../contrib/ares;$(ProjectDir)../;$(ProjectDir)../../;$(ProjectDir)../../contrib/openssl/include;$(ProjectDir)../../contrib/openssl/inc32;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>WIN32;NDEBUG;_LIB;USE_SSL;USE_ARES;USE_IPV6;NO_IPHLPAPI;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <StringPooling>true</StringPooling>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <FunctionLevelLinking>true</FunctionLevelLinking>
-      <RuntimeTypeInfo>true</RuntimeTypeInfo>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-    </ClCompile>
-    <Lib>
-      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
-    </Lib>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='SSL-Release|x64'">
-    <ClCompile>
-      <AdditionalOptions>/Zm300 %(AdditionalOptions)</AdditionalOptions>
-      <Optimization>MaxSpeed</Optimization>
-      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
-      <OmitFramePointers>true</OmitFramePointers>
-      <AdditionalIncludeDirectories>$(ProjectDir)../../contrib/ares;$(ProjectDir)../;$(ProjectDir)../../;$(ProjectDir)../../contrib/openssl/include;$(ProjectDir)../../contrib/openssl/inc32;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>WIN32;NDEBUG;_LIB;USE_SSL;USE_ARES;USE_IPV6;NO_IPHLPAPI;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <StringPooling>true</StringPooling>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <FunctionLevelLinking>true</FunctionLevelLinking>
-      <RuntimeTypeInfo>true</RuntimeTypeInfo>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-    </ClCompile>
-    <Lib>
-      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
-    </Lib>
-  </ItemDefinitionGroup>
-  <ItemGroup>
-    <ClCompile Include="Aor.cxx" />
-    <ClCompile Include="ApiCheck.cxx" />
-    <ClCompile Include="ApplicationSip.cxx" />
-    <ClCompile Include="Auth.cxx" />
-    <ClCompile Include="BasicNonceHelper.cxx" />
-    <ClCompile Include="BranchParameter.cxx" />
-    <ClCompile Include="CallId.cxx" />
-    <ClCompile Include="Compression.cxx" />
-    <ClCompile Include="Connection.cxx" />
-    <ClCompile Include="ConnectionBase.cxx" />
-    <ClCompile Include="ConnectionManager.cxx" />
-    <ClCompile Include="Contents.cxx" />
-    <ClCompile Include="ContentsFactoryBase.cxx" />
-    <ClCompile Include="CpimContents.cxx" />
-    <ClCompile Include="CSeqCategory.cxx" />
-    <ClCompile Include="DataParameter.cxx" />
-    <ClCompile Include="DateCategory.cxx" />
-    <ClCompile Include="DeprecatedDialog.cxx" />
-    <ClCompile Include="DnsInterface.cxx" />
-    <ClCompile Include="DnsResult.cxx" />
-    <ClCompile Include="DtlsMessage.cxx" />
-    <ClCompile Include="ssl\DtlsTransport.cxx">
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</ExcludedFromBuild>
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</ExcludedFromBuild>
-    </ClCompile>
-    <ClCompile Include="Embedded.cxx" />
-    <ClCompile Include="EventStackThread.cxx" />
-    <ClCompile Include="ExistsOrDataParameter.cxx" />
-    <ClCompile Include="ExistsParameter.cxx" />
-    <ClCompile Include="ExpiresCategory.cxx" />
-    <ClCompile Include="ExtensionHeader.cxx" />
-    <ClCompile Include="ExtensionParameter.cxx" />
-    <ClCompile Include="ExternalBodyContents.cxx" />
-    <ClCompile Include="GenericContents.cxx" />
-    <ClCompile Include="GenericUri.cxx" />
-    <ClCompile Include="HeaderFieldValue.cxx" />
-    <ClCompile Include="HeaderFieldValueList.cxx" />
-    <ClCompile Include="HeaderHash.cxx" />
-    <ClCompile Include="Headers.cxx" />
-    <ClCompile Include="HeaderTypes.cxx" />
-    <ClCompile Include="Helper.cxx" />
-    <ClCompile Include="IntegerCategory.cxx" />
-    <ClCompile Include="IntegerParameter.cxx" />
-    <ClCompile Include="InternalTransport.cxx" />
-    <ClCompile Include="InteropHelper.cxx" />
-    <ClCompile Include="InterruptableStackThread.cxx" />
-    <ClCompile Include="InvalidContents.cxx" />
-    <ClCompile Include="KeepAliveMessage.cxx" />
-    <ClCompile Include="LazyParser.cxx" />
-    <ClCompile Include="Message.cxx" />
-    <ClCompile Include="MessageFilterRule.cxx" />
-    <ClCompile Include="MessageWaitingContents.cxx" />
-    <ClCompile Include="MethodHash.cxx" />
-    <ClCompile Include="MethodTypes.cxx" />
-    <ClCompile Include="Mime.cxx" />
-    <ClCompile Include="MsgHeaderScanner.cxx" />
-    <ClCompile Include="MultipartAlternativeContents.cxx" />
-    <ClCompile Include="MultipartMixedContents.cxx" />
-    <ClCompile Include="MultipartRelatedContents.cxx" />
-    <ClCompile Include="MultipartSignedContents.cxx" />
-    <ClCompile Include="NameAddr.cxx" />
-    <ClCompile Include="NonceHelper.cxx" />
-    <ClCompile Include="OctetContents.cxx" />
-    <ClCompile Include="Parameter.cxx" />
-    <ClCompile Include="ParameterHash.cxx" />
-    <ClCompile Include="ParameterTypes.cxx" />
-    <ClCompile Include="ParserCategories.cxx" />
-    <ClCompile Include="ParserCategory.cxx" />
-    <ClCompile Include="ParserContainerBase.cxx" />
-    <ClCompile Include="Pidf.cxx" />
-    <ClCompile Include="Pkcs7Contents.cxx" />
-    <ClCompile Include="Pkcs8Contents.cxx" />
-    <ClCompile Include="PlainContents.cxx" />
-    <ClCompile Include="PrivacyCategory.cxx" />
-    <ClCompile Include="QuotedDataParameter.cxx" />
-    <ClCompile Include="QValue.cxx" />
-    <ClCompile Include="QValueParameter.cxx" />
-    <ClCompile Include="RAckCategory.cxx" />
-    <ClCompile Include="RequestLine.cxx" />
-    <ClCompile Include="Rlmi.cxx" />
-    <ClCompile Include="RportParameter.cxx" />
-    <ClCompile Include="SdpContents.cxx" />
-    <ClCompile Include="ssl\Security.cxx">
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</ExcludedFromBuild>
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</ExcludedFromBuild>
-    </ClCompile>
-    <ClCompile Include="SecurityAttributes.cxx" />
-    <ClCompile Include="SERNonceHelper.cxx" />
-    <ClCompile Include="SipFrag.cxx" />
-    <ClCompile Include="SipMessage.cxx" />
-    <ClCompile Include="SipStack.cxx" />
-    <ClCompile Include="StackThread.cxx" />
-    <ClCompile Include="StatelessHandler.cxx" />
-    <ClCompile Include="StatisticsHandler.cxx" />
-    <ClCompile Include="StatisticsManager.cxx" />
-    <ClCompile Include="StatisticsMessage.cxx" />
-    <ClCompile Include="StatusLine.cxx" />
-    <ClCompile Include="StringCategory.cxx" />
-    <ClCompile Include="Symbols.cxx" />
-    <ClCompile Include="TcpBaseTransport.cxx" />
-    <ClCompile Include="TcpConnection.cxx" />
-    <ClCompile Include="TcpTransport.cxx" />
-    <ClCompile Include="TimeAccumulate.cxx" />
-    <ClCompile Include="TimerMessage.cxx" />
-    <ClCompile Include="TimerQueue.cxx" />
-    <ClCompile Include="ssl\TlsConnection.cxx">
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</ExcludedFromBuild>
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</ExcludedFromBuild>
-    </ClCompile>
-    <ClCompile Include="ssl\TlsTransport.cxx">
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</ExcludedFromBuild>
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</ExcludedFromBuild>
-    </ClCompile>
-    <ClCompile Include="Token.cxx" />
-    <ClCompile Include="TransactionController.cxx" />
-    <ClCompile Include="TransactionMap.cxx" />
-    <ClCompile Include="TransactionState.cxx" />
-    <ClCompile Include="TransactionUser.cxx" />
-    <ClCompile Include="TransactionUserMessage.cxx" />
-    <ClCompile Include="Transport.cxx" />
-    <ClCompile Include="TransportFailure.cxx" />
-    <ClCompile Include="TransportSelector.cxx" />
-    <ClCompile Include="TransportThread.cxx" />
-    <ClCompile Include="TuIM.cxx" />
-    <ClCompile Include="Tuple.cxx" />
-    <ClCompile Include="TupleMarkManager.cxx" />
-    <ClCompile Include="TuSelector.cxx" />
-    <ClCompile Include="UdpTransport.cxx" />
-    <ClCompile Include="UInt32Category.cxx" />
-    <ClCompile Include="UInt32Parameter.cxx" />
-    <ClCompile Include="UnknownParameter.cxx" />
-    <ClCompile Include="Uri.cxx" />
-    <ClCompile Include="Via.cxx" />
-    <ClCompile Include="WarningCategory.cxx" />
-    <ClCompile Include="ssl\WinSecurity.cxx">
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</ExcludedFromBuild>
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</ExcludedFromBuild>
-    </ClCompile>
-    <ClCompile Include="X509Contents.cxx" />
-  </ItemGroup>
-  <ItemGroup>
-    <ClInclude Include="Aor.hxx" />
-    <ClInclude Include="ApiCheck.hxx" />
-    <ClInclude Include="ApiCheckList.hxx" />
-    <ClInclude Include="ApplicationMessage.hxx" />
-    <ClInclude Include="ApplicationSip.hxx" />
-    <ClInclude Include="Auth.hxx" />
-    <ClInclude Include="BasicNonceHelper.hxx" />
-    <ClInclude Include="BranchParameter.hxx" />
-    <ClInclude Include="CallId.hxx" />
-    <ClInclude Include="CancelableTimerQueue.hxx" />
-    <ClInclude Include="CancelClientInviteTransaction.hxx" />
-    <ClInclude Include="Compression.hxx" />
-    <ClInclude Include="Connection.hxx" />
-    <ClInclude Include="ConnectionBase.hxx" />
-    <ClInclude Include="ConnectionManager.hxx" />
-    <ClInclude Include="ConnectionTerminated.hxx" />
-    <ClInclude Include="Contents.hxx" />
-    <ClInclude Include="ContentsFactory.hxx" />
-    <ClInclude Include="ContentsFactoryBase.hxx" />
-    <ClInclude Include="CpimContents.hxx" />
-    <ClInclude Include="CSeqCategory.hxx" />
-    <ClInclude Include="DataParameter.hxx" />
-    <ClInclude Include="DateCategory.hxx" />
-    <ClInclude Include="DeprecatedDialog.hxx" />
-    <ClInclude Include="DnsInterface.hxx" />
-    <ClInclude Include="DnsResult.hxx" />
-    <ClInclude Include="DnsResultMessage.hxx" />
-    <ClInclude Include="DtlsMessage.hxx" />
-    <ClInclude Include="KeepAlivePong.hxx" />
-    <ClInclude Include="MessageDecorator.hxx" />
-    <ClInclude Include="ssl\DtlsTransport.hxx" />
-    <ClInclude Include="Embedded.hxx" />
-    <ClInclude Include="EventStackThread.hxx" />
-    <ClInclude Include="ExistsOrDataParameter.hxx" />
-    <ClInclude Include="ExistsParameter.hxx" />
-    <ClInclude Include="ExpiresCategory.hxx" />
-    <ClInclude Include="ExtensionHeader.hxx" />
-    <ClInclude Include="ExtensionParameter.hxx" />
-    <ClInclude Include="ExternalBodyContents.hxx" />
-    <ClInclude Include="GenericContents.hxx" />
-    <ClInclude Include="GenericUri.hxx" />
-    <ClInclude Include="HeaderFieldValue.hxx" />
-    <ClInclude Include="HeaderFieldValueList.hxx" />
-    <ClInclude Include="HeaderHash.hxx" />
-    <ClInclude Include="Headers.hxx" />
-    <ClInclude Include="HeaderTypes.hxx" />
-    <ClInclude Include="Helper.hxx" />
-    <ClInclude Include="IntegerCategory.hxx" />
-    <ClInclude Include="IntegerParameter.hxx" />
-    <ClInclude Include="InternalTransport.hxx" />
-    <ClInclude Include="InteropHelper.hxx" />
-    <ClInclude Include="InterruptableStackThread.hxx" />
-    <ClInclude Include="InvalidContents.hxx" />
-    <ClInclude Include="KeepAliveMessage.hxx" />
-    <ClInclude Include="LazyParser.hxx" />
-    <ClInclude Include="MarkListener.hxx" />
-    <ClInclude Include="Message.hxx" />
-    <ClInclude Include="MessageFilterRule.hxx" />
-    <ClInclude Include="MessageWaitingContents.hxx" />
-    <ClInclude Include="MethodHash.hxx" />
-    <ClInclude Include="MethodTypes.hxx" />
-    <ClInclude Include="Mime.hxx" />
-    <ClInclude Include="MsgHeaderScanner.hxx" />
-    <ClInclude Include="MultipartAlternativeContents.hxx" />
-    <ClInclude Include="MultipartMixedContents.hxx" />
-    <ClInclude Include="MultipartRelatedContents.hxx" />
-    <ClInclude Include="MultipartSignedContents.hxx" />
-    <ClInclude Include="NameAddr.hxx" />
-    <ClInclude Include="NonceHelper.hxx" />
-    <ClInclude Include="OctetContents.hxx" />
-    <ClInclude Include="Parameter.hxx" />
-    <ClInclude Include="ParameterHash.hxx" />
-    <ClInclude Include="ParameterTypeEnums.hxx" />
-    <ClInclude Include="ParameterTypes.hxx" />
-    <ClInclude Include="ParserCategories.hxx" />
-    <ClInclude Include="ParserCategory.hxx" />
-    <ClInclude Include="ParserContainer.hxx" />
-    <ClInclude Include="ParserContainerBase.hxx" />
-    <ClInclude Include="Pidf.hxx" />
-    <ClInclude Include="Pkcs7Contents.hxx" />
-    <ClInclude Include="Pkcs8Contents.hxx" />
-    <ClInclude Include="PlainContents.hxx" />
-    <ClInclude Include="PollStatistics.hxx" />
-    <ClInclude Include="PrivacyCategory.hxx" />
-    <ClInclude Include="QuotedDataParameter.hxx" />
-    <ClInclude Include="QValue.hxx" />
-    <ClInclude Include="QValueParameter.hxx" />
-    <ClInclude Include="RAckCategory.hxx" />
-    <ClInclude Include="RequestLine.hxx" />
-    <ClInclude Include="Rlmi.hxx" />
-    <ClInclude Include="RportParameter.hxx" />
-    <ClInclude Include="SdpContents.hxx" />
-    <ClInclude Include="ssl\Security.hxx" />
-    <ClInclude Include="SecurityAttributes.hxx" />
-    <ClInclude Include="SecurityTypes.hxx" />
-    <ClInclude Include="SendData.hxx" />
-    <ClInclude Include="SERNonceHelper.hxx" />
-    <ClInclude Include="ShutdownMessage.hxx" />
-    <ClInclude Include="SipFrag.hxx" />
-    <ClInclude Include="SipMessage.hxx" />
-    <ClInclude Include="SipStack.hxx" />
-    <ClInclude Include="StackThread.hxx" />
-    <ClInclude Include="StartLine.hxx" />
-    <ClInclude Include="StatelessHandler.hxx" />
-    <ClInclude Include="StatisticsHandler.hxx" />
-    <ClInclude Include="StatisticsManager.hxx" />
-    <ClInclude Include="StatisticsMessage.hxx" />
-    <ClInclude Include="StatusLine.hxx" />
-    <ClInclude Include="StringCategory.hxx" />
-    <ClInclude Include="Symbols.hxx" />
-    <ClInclude Include="TcpBaseTransport.hxx" />
-    <ClInclude Include="TcpConnection.hxx" />
-    <ClInclude Include="TcpTransport.hxx" />
-    <ClInclude Include="TerminateFlow.hxx" />
-    <ClInclude Include="TextParameter.hxx" />
-    <ClInclude Include="TimeAccumulate.hxx" />
-    <ClInclude Include="TimerMessage.hxx" />
-    <ClInclude Include="TimerQueue.hxx" />
-    <ClInclude Include="ssl\TlsConnection.hxx" />
-    <ClInclude Include="ssl\TlsTransport.hxx" />
-    <ClInclude Include="Token.hxx" />
-    <ClInclude Include="TransactionController.hxx" />
-    <ClInclude Include="TransactionControllerThread.hxx" />
-    <ClInclude Include="TransactionMap.hxx" />
-    <ClInclude Include="TransactionMessage.hxx" />
-    <ClInclude Include="TransactionState.hxx" />
-    <ClInclude Include="TransactionTerminated.hxx" />
-    <ClInclude Include="TransactionUser.hxx" />
-    <ClInclude Include="TransactionUserMessage.hxx" />
-    <ClInclude Include="Transport.hxx" />
-    <ClInclude Include="TransportFailure.hxx" />
-    <ClInclude Include="TransportSelector.hxx" />
-    <ClInclude Include="TransportSelectorThread.hxx" />
-    <ClInclude Include="TransportThread.hxx" />
-    <ClInclude Include="TuIM.hxx" />
-    <ClInclude Include="Tuple.hxx" />
-    <ClInclude Include="TupleMarkManager.hxx" />
-    <ClInclude Include="TuSelector.hxx" />
-    <ClInclude Include="UdpTransport.hxx" />
-    <ClInclude Include="UInt32Category.hxx" />
-    <ClInclude Include="UInt32Parameter.hxx" />
-    <ClInclude Include="UnknownHeaderType.hxx" />
-    <ClInclude Include="UnknownParameter.hxx" />
-    <ClInclude Include="UnknownParameterType.hxx" />
-    <ClInclude Include="Uri.hxx" />
-    <ClInclude Include="ValueFifo.hxx" />
-    <ClInclude Include="Via.hxx" />
-    <ClInclude Include="WarningCategory.hxx" />
-    <ClInclude Include="ssl\WinSecurity.hxx" />
-    <ClInclude Include="X509Contents.hxx" />
-    <ClInclude Include="ZeroOutStatistics.hxx" />
-  </ItemGroup>
-  <ItemGroup>
-    <None Include="HeaderHash.gperf" />
-    <None Include="MethodHash.gperf" />
-    <None Include="ParameterHash.gperf" />
-  </ItemGroup>
-  <ItemGroup>
-    <ProjectReference Include="..\..\rutil\rutil_10_0.vcxproj">
-      <Project>{3d0e5ceb-93dc-4fdb-918b-d08fa369e106}</Project>
-      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
-    </ProjectReference>
-  </ItemGroup>
-  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
-  <ImportGroup Label="ExtensionTargets">
-  </ImportGroup>
+﻿<?xml version="1.0" encoding="utf-8"?>
+<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <ItemGroup Label="ProjectConfigurations">
+    <ProjectConfiguration Include="Debug|Win32">
+      <Configuration>Debug</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Debug|x64">
+      <Configuration>Debug</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release|Win32">
+      <Configuration>Release</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release|x64">
+      <Configuration>Release</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="SSL-Debug|Win32">
+      <Configuration>SSL-Debug</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="SSL-Debug|x64">
+      <Configuration>SSL-Debug</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="SSL-Release|Win32">
+      <Configuration>SSL-Release</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="SSL-Release|x64">
+      <Configuration>SSL-Release</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+  </ItemGroup>
+  <PropertyGroup Label="Globals">
+    <ProjectName>resiprocate</ProjectName>
+    <ProjectGuid>{2A8BE839-6466-4001-B224-8F1C3168D04A}</ProjectGuid>
+    <RootNamespace>resiprocate</RootNamespace>
+    <Keyword>Win32Proj</Keyword>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='SSL-Release|Win32'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseOfMfc>false</UseOfMfc>
+    <CharacterSet>MultiByte</CharacterSet>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='SSL-Release|x64'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseOfMfc>false</UseOfMfc>
+    <CharacterSet>MultiByte</CharacterSet>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='SSL-Debug|Win32'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseOfMfc>false</UseOfMfc>
+    <CharacterSet>MultiByte</CharacterSet>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='SSL-Debug|x64'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseOfMfc>false</UseOfMfc>
+    <CharacterSet>MultiByte</CharacterSet>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseOfMfc>false</UseOfMfc>
+    <CharacterSet>MultiByte</CharacterSet>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseOfMfc>false</UseOfMfc>
+    <CharacterSet>MultiByte</CharacterSet>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseOfMfc>false</UseOfMfc>
+    <CharacterSet>MultiByte</CharacterSet>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseOfMfc>false</UseOfMfc>
+    <CharacterSet>MultiByte</CharacterSet>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
+  <ImportGroup Label="ExtensionSettings">
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='SSL-Release|Win32'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" />
+    <Import Project="$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='SSL-Release|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" />
+    <Import Project="$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='SSL-Debug|Win32'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" />
+    <Import Project="$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='SSL-Debug|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" />
+    <Import Project="$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" />
+    <Import Project="$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" />
+    <Import Project="$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" />
+    <Import Project="$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" />
+    <Import Project="$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props" />
+  </ImportGroup>
+  <PropertyGroup Label="UserMacros" />
+  <PropertyGroup>
+    <_ProjectFileVersion>10.0.21006.1</_ProjectFileVersion>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Debug\</OutDir>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Debug\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Debug\</IntDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Debug\</IntDir>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Release\</OutDir>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Release\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Release\</IntDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Release\</IntDir>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='SSL-Debug|Win32'">SSL-Debug\</OutDir>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='SSL-Debug|x64'">SSL-Debug\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='SSL-Debug|Win32'">SSL-Debug\</IntDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='SSL-Debug|x64'">SSL-Debug\</IntDir>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='SSL-Release|Win32'">SSL-Release\</OutDir>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='SSL-Release|x64'">SSL-Release\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='SSL-Release|Win32'">SSL-Release\</IntDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='SSL-Release|x64'">SSL-Release\</IntDir>
+    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">AllRules.ruleset</CodeAnalysisRuleSet>
+    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">AllRules.ruleset</CodeAnalysisRuleSet>
+    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" />
+    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" />
+    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" />
+    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" />
+    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">AllRules.ruleset</CodeAnalysisRuleSet>
+    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Release|x64'">AllRules.ruleset</CodeAnalysisRuleSet>
+    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" />
+    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Release|x64'" />
+    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" />
+    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Release|x64'" />
+    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='SSL-Debug|Win32'">AllRules.ruleset</CodeAnalysisRuleSet>
+    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='SSL-Debug|x64'">AllRules.ruleset</CodeAnalysisRuleSet>
+    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='SSL-Debug|Win32'" />
+    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='SSL-Debug|x64'" />
+    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='SSL-Debug|Win32'" />
+    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='SSL-Debug|x64'" />
+    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='SSL-Release|Win32'">AllRules.ruleset</CodeAnalysisRuleSet>
+    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='SSL-Release|x64'">AllRules.ruleset</CodeAnalysisRuleSet>
+    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='SSL-Release|Win32'" />
+    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='SSL-Release|x64'" />
+    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='SSL-Release|Win32'" />
+    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='SSL-Release|x64'" />
+  </PropertyGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
+    <ClCompile>
+      <AdditionalOptions>/Zm300 %(AdditionalOptions)</AdditionalOptions>
+      <Optimization>Disabled</Optimization>
+      <AdditionalIncludeDirectories>$(ProjectDir)../../contrib/ares;$(ProjectDir)../;$(ProjectDir)../../;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;_DEBUG;_LIB;USE_ARES;USE_IPV6;LEAK_CHECK;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <MinimalRebuild>true</MinimalRebuild>
+      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
+      <BufferSecurityCheck>true</BufferSecurityCheck>
+      <RuntimeTypeInfo>true</RuntimeTypeInfo>
+      <PrecompiledHeader>
+      </PrecompiledHeader>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+    </ClCompile>
+    <Lib>
+      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
+    </Lib>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
+    <ClCompile>
+      <AdditionalOptions>/Zm300 %(AdditionalOptions)</AdditionalOptions>
+      <Optimization>Disabled</Optimization>
+      <AdditionalIncludeDirectories>$(ProjectDir)../../contrib/ares;$(ProjectDir)../;$(ProjectDir)../../;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;_DEBUG;_LIB;USE_ARES;USE_IPV6;LEAK_CHECK;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
+      <BufferSecurityCheck>true</BufferSecurityCheck>
+      <RuntimeTypeInfo>true</RuntimeTypeInfo>
+      <PrecompiledHeader>
+      </PrecompiledHeader>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+    </ClCompile>
+    <Lib>
+      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
+    </Lib>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
+    <ClCompile>
+      <AdditionalOptions>/Zm300 %(AdditionalOptions)</AdditionalOptions>
+      <Optimization>MaxSpeed</Optimization>
+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
+      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
+      <OmitFramePointers>true</OmitFramePointers>
+      <AdditionalIncludeDirectories>$(ProjectDir)../../contrib/ares;$(ProjectDir)../;$(ProjectDir)../../;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;NDEBUG;_LIB;USE_ARES;USE_IPV6;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <StringPooling>true</StringPooling>
+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
+      <BufferSecurityCheck>false</BufferSecurityCheck>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <RuntimeTypeInfo>true</RuntimeTypeInfo>
+      <PrecompiledHeader>
+      </PrecompiledHeader>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>
+      </DebugInformationFormat>
+    </ClCompile>
+    <Lib>
+      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
+    </Lib>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
+    <ClCompile>
+      <AdditionalOptions>/Zm300 %(AdditionalOptions)</AdditionalOptions>
+      <Optimization>MaxSpeed</Optimization>
+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
+      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
+      <OmitFramePointers>true</OmitFramePointers>
+      <AdditionalIncludeDirectories>$(ProjectDir)../../contrib/ares;$(ProjectDir)../;$(ProjectDir)../../;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;NDEBUG;_LIB;USE_ARES;USE_IPV6;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <StringPooling>true</StringPooling>
+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
+      <BufferSecurityCheck>false</BufferSecurityCheck>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <RuntimeTypeInfo>true</RuntimeTypeInfo>
+      <PrecompiledHeader>
+      </PrecompiledHeader>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>
+      </DebugInformationFormat>
+    </ClCompile>
+    <Lib>
+      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
+    </Lib>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='SSL-Debug|Win32'">
+    <ClCompile>
+      <AdditionalOptions>/Zm300 %(AdditionalOptions)</AdditionalOptions>
+      <Optimization>Disabled</Optimization>
+      <AdditionalIncludeDirectories>$(ProjectDir)../../contrib/ares;$(ProjectDir)../;$(ProjectDir)../../;$(ProjectDir)../../contrib/openssl/include;$(ProjectDir)../../contrib/openssl/inc32;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;_DEBUG;_LIB;LEAK_CHECK;USE_SSL;USE_ARES;USE_IPV6;USE_DTLS;NO_IPHLPAPI;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <MinimalRebuild>true</MinimalRebuild>
+      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
+      <RuntimeTypeInfo>true</RuntimeTypeInfo>
+      <PrecompiledHeader>
+      </PrecompiledHeader>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>
+    </ClCompile>
+    <Lib>
+      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
+    </Lib>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='SSL-Debug|x64'">
+    <ClCompile>
+      <AdditionalOptions>/Zm300 %(AdditionalOptions)</AdditionalOptions>
+      <Optimization>Disabled</Optimization>
+      <AdditionalIncludeDirectories>$(ProjectDir)../../contrib/ares;$(ProjectDir)../;$(ProjectDir)../../;$(ProjectDir)../../contrib/openssl/include;$(ProjectDir)../../contrib/openssl/inc32;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;_DEBUG;_LIB;LEAK_CHECK;USE_SSL;USE_ARES;USE_IPV6;USE_DTLS;NO_IPHLPAPI;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
+      <RuntimeTypeInfo>true</RuntimeTypeInfo>
+      <PrecompiledHeader>
+      </PrecompiledHeader>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+    </ClCompile>
+    <Lib>
+      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
+    </Lib>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='SSL-Release|Win32'">
+    <ClCompile>
+      <AdditionalOptions>/Zm300 %(AdditionalOptions)</AdditionalOptions>
+      <Optimization>MaxSpeed</Optimization>
+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
+      <OmitFramePointers>true</OmitFramePointers>
+      <AdditionalIncludeDirectories>$(ProjectDir)../../contrib/ares;$(ProjectDir)../;$(ProjectDir)../../;$(ProjectDir)../../contrib/openssl/include;$(ProjectDir)../../contrib/openssl/inc32;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;NDEBUG;_LIB;USE_SSL;USE_ARES;USE_IPV6;NO_IPHLPAPI;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <StringPooling>true</StringPooling>
+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <RuntimeTypeInfo>true</RuntimeTypeInfo>
+      <PrecompiledHeader>
+      </PrecompiledHeader>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+    </ClCompile>
+    <Lib>
+      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
+    </Lib>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='SSL-Release|x64'">
+    <ClCompile>
+      <AdditionalOptions>/Zm300 %(AdditionalOptions)</AdditionalOptions>
+      <Optimization>MaxSpeed</Optimization>
+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
+      <OmitFramePointers>true</OmitFramePointers>
+      <AdditionalIncludeDirectories>$(ProjectDir)../../contrib/ares;$(ProjectDir)../;$(ProjectDir)../../;$(ProjectDir)../../contrib/openssl/include;$(ProjectDir)../../contrib/openssl/inc32;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;NDEBUG;_LIB;USE_SSL;USE_ARES;USE_IPV6;NO_IPHLPAPI;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <StringPooling>true</StringPooling>
+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <RuntimeTypeInfo>true</RuntimeTypeInfo>
+      <PrecompiledHeader>
+      </PrecompiledHeader>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+    </ClCompile>
+    <Lib>
+      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
+    </Lib>
+  </ItemDefinitionGroup>
+  <ItemGroup>
+    <ClCompile Include="Aor.cxx" />
+    <ClCompile Include="ApiCheck.cxx" />
+    <ClCompile Include="ApplicationSip.cxx" />
+    <ClCompile Include="Auth.cxx" />
+    <ClCompile Include="BasicNonceHelper.cxx" />
+    <ClCompile Include="BranchParameter.cxx" />
+    <ClCompile Include="CallId.cxx" />
+    <ClCompile Include="Compression.cxx" />
+    <ClCompile Include="Connection.cxx" />
+    <ClCompile Include="ConnectionBase.cxx" />
+    <ClCompile Include="ConnectionManager.cxx" />
+    <ClCompile Include="Contents.cxx" />
+    <ClCompile Include="ContentsFactoryBase.cxx" />
+    <ClCompile Include="CpimContents.cxx" />
+    <ClCompile Include="CSeqCategory.cxx" />
+    <ClCompile Include="DataParameter.cxx" />
+    <ClCompile Include="DateCategory.cxx" />
+    <ClCompile Include="DeprecatedDialog.cxx" />
+    <ClCompile Include="DnsInterface.cxx" />
+    <ClCompile Include="DnsResult.cxx" />
+    <ClCompile Include="DtlsMessage.cxx" />
+    <ClCompile Include="ssl\DtlsTransport.cxx">
+      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
+      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</ExcludedFromBuild>
+      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
+      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</ExcludedFromBuild>
+    </ClCompile>
+    <ClCompile Include="Embedded.cxx" />
+    <ClCompile Include="EventStackThread.cxx" />
+    <ClCompile Include="ExistsOrDataParameter.cxx" />
+    <ClCompile Include="ExistsParameter.cxx" />
+    <ClCompile Include="ExpiresCategory.cxx" />
+    <ClCompile Include="ExtensionHeader.cxx" />
+    <ClCompile Include="ExtensionParameter.cxx" />
+    <ClCompile Include="ExternalBodyContents.cxx" />
+    <ClCompile Include="GenericContents.cxx" />
+    <ClCompile Include="GenericUri.cxx" />
+    <ClCompile Include="HeaderFieldValue.cxx" />
+    <ClCompile Include="HeaderFieldValueList.cxx" />
+    <ClCompile Include="HeaderHash.cxx" />
+    <ClCompile Include="Headers.cxx" />
+    <ClCompile Include="HeaderTypes.cxx" />
+    <ClCompile Include="Helper.cxx" />
+    <ClCompile Include="IntegerCategory.cxx" />
+    <ClCompile Include="IntegerParameter.cxx" />
+    <ClCompile Include="InternalTransport.cxx" />
+    <ClCompile Include="InteropHelper.cxx" />
+    <ClCompile Include="InterruptableStackThread.cxx" />
+    <ClCompile Include="InvalidContents.cxx" />
+    <ClCompile Include="KeepAliveMessage.cxx" />
+    <ClCompile Include="LazyParser.cxx" />
+    <ClCompile Include="Message.cxx" />
+    <ClCompile Include="MessageFilterRule.cxx" />
+    <ClCompile Include="MessageWaitingContents.cxx" />
+    <ClCompile Include="MethodHash.cxx" />
+    <ClCompile Include="MethodTypes.cxx" />
+    <ClCompile Include="Mime.cxx" />
+    <ClCompile Include="MsgHeaderScanner.cxx" />
+    <ClCompile Include="MultipartAlternativeContents.cxx" />
+    <ClCompile Include="MultipartMixedContents.cxx" />
+    <ClCompile Include="MultipartRelatedContents.cxx" />
+    <ClCompile Include="MultipartSignedContents.cxx" />
+    <ClCompile Include="NameAddr.cxx" />
+    <ClCompile Include="NonceHelper.cxx" />
+    <ClCompile Include="OctetContents.cxx" />
+    <ClCompile Include="Parameter.cxx" />
+    <ClCompile Include="ParameterHash.cxx" />
+    <ClCompile Include="ParameterTypes.cxx" />
+    <ClCompile Include="ParserCategories.cxx" />
+    <ClCompile Include="ParserCategory.cxx" />
+    <ClCompile Include="ParserContainerBase.cxx" />
+    <ClCompile Include="Pidf.cxx" />
+    <ClCompile Include="Pkcs7Contents.cxx" />
+    <ClCompile Include="Pkcs8Contents.cxx" />
+    <ClCompile Include="PlainContents.cxx" />
+    <ClCompile Include="PrivacyCategory.cxx" />
+    <ClCompile Include="QuotedDataParameter.cxx" />
+    <ClCompile Include="QValue.cxx" />
+    <ClCompile Include="QValueParameter.cxx" />
+    <ClCompile Include="RAckCategory.cxx" />
+    <ClCompile Include="RequestLine.cxx" />
+    <ClCompile Include="Rlmi.cxx" />
+    <ClCompile Include="RportParameter.cxx" />
+    <ClCompile Include="SdpContents.cxx" />
+    <ClCompile Include="ssl\Security.cxx">
+      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
+      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</ExcludedFromBuild>
+      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
+      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</ExcludedFromBuild>
+    </ClCompile>
+    <ClCompile Include="SecurityAttributes.cxx" />
+    <ClCompile Include="SERNonceHelper.cxx" />
+    <ClCompile Include="SipFrag.cxx" />
+    <ClCompile Include="SipMessage.cxx" />
+    <ClCompile Include="SipStack.cxx" />
+    <ClCompile Include="StackThread.cxx" />
+    <ClCompile Include="StatelessHandler.cxx" />
+    <ClCompile Include="StatisticsHandler.cxx" />
+    <ClCompile Include="StatisticsManager.cxx" />
+    <ClCompile Include="StatisticsMessage.cxx" />
+    <ClCompile Include="StatusLine.cxx" />
+    <ClCompile Include="StringCategory.cxx" />
+    <ClCompile Include="Symbols.cxx" />
+    <ClCompile Include="TcpBaseTransport.cxx" />
+    <ClCompile Include="TcpConnection.cxx" />
+    <ClCompile Include="TcpTransport.cxx" />
+    <ClCompile Include="TimeAccumulate.cxx" />
+    <ClCompile Include="TimerMessage.cxx" />
+    <ClCompile Include="TimerQueue.cxx" />
+    <ClCompile Include="ssl\TlsConnection.cxx">
+      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
+      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</ExcludedFromBuild>
+      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
+      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</ExcludedFromBuild>
+    </ClCompile>
+    <ClCompile Include="ssl\TlsTransport.cxx">
+      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
+      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</ExcludedFromBuild>
+      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
+      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</ExcludedFromBuild>
+    </ClCompile>
+    <ClCompile Include="Token.cxx" />
+    <ClCompile Include="TransactionController.cxx" />
+    <ClCompile Include="TransactionMap.cxx" />
+    <ClCompile Include="TransactionState.cxx" />
+    <ClCompile Include="TransactionUser.cxx" />
+    <ClCompile Include="TransactionUserMessage.cxx" />
+    <ClCompile Include="Transport.cxx" />
+    <ClCompile Include="TransportFailure.cxx" />
+    <ClCompile Include="TransportSelector.cxx" />
+    <ClCompile Include="TransportThread.cxx" />
+    <ClCompile Include="TuIM.cxx" />
+    <ClCompile Include="Tuple.cxx" />
+    <ClCompile Include="TupleMarkManager.cxx" />
+    <ClCompile Include="TuSelector.cxx" />
+    <ClCompile Include="UdpTransport.cxx" />
+    <ClCompile Include="UInt32Category.cxx" />
+    <ClCompile Include="UInt32Parameter.cxx" />
+    <ClCompile Include="UnknownParameter.cxx" />
+    <ClCompile Include="Uri.cxx" />
+    <ClCompile Include="Via.cxx" />
+    <ClCompile Include="WarningCategory.cxx" />
+    <ClCompile Include="ssl\WinSecurity.cxx">
+      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
+      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</ExcludedFromBuild>
+      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
+      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</ExcludedFromBuild>
+    </ClCompile>
+    <ClCompile Include="X509Contents.cxx" />
+  </ItemGroup>
+  <ItemGroup>
+    <ClInclude Include="Aor.hxx" />
+    <ClInclude Include="ApiCheck.hxx" />
+    <ClInclude Include="ApiCheckList.hxx" />
+    <ClInclude Include="ApplicationMessage.hxx" />
+    <ClInclude Include="ApplicationSip.hxx" />
+    <ClInclude Include="Auth.hxx" />
+    <ClInclude Include="BasicNonceHelper.hxx" />
+    <ClInclude Include="BranchParameter.hxx" />
+    <ClInclude Include="CallId.hxx" />
+    <ClInclude Include="CancelableTimerQueue.hxx" />
+    <ClInclude Include="CancelClientInviteTransaction.hxx" />
+    <ClInclude Include="Compression.hxx" />
+    <ClInclude Include="Connection.hxx" />
+    <ClInclude Include="ConnectionBase.hxx" />
+    <ClInclude Include="ConnectionManager.hxx" />
+    <ClInclude Include="ConnectionTerminated.hxx" />
+    <ClInclude Include="Contents.hxx" />
+    <ClInclude Include="ContentsFactory.hxx" />
+    <ClInclude Include="ContentsFactoryBase.hxx" />
+    <ClInclude Include="CpimContents.hxx" />
+    <ClInclude Include="CSeqCategory.hxx" />
+    <ClInclude Include="DataParameter.hxx" />
+    <ClInclude Include="DateCategory.hxx" />
+    <ClInclude Include="DeprecatedDialog.hxx" />
+    <ClInclude Include="DnsInterface.hxx" />
+    <ClInclude Include="DnsResult.hxx" />
+    <ClInclude Include="DnsResultMessage.hxx" />
+    <ClInclude Include="DtlsMessage.hxx" />
+    <ClInclude Include="KeepAlivePong.hxx" />
+    <ClInclude Include="MessageDecorator.hxx" />
+    <ClInclude Include="ssl\DtlsTransport.hxx" />
+    <ClInclude Include="Embedded.hxx" />
+    <ClInclude Include="EventStackThread.hxx" />
+    <ClInclude Include="ExistsOrDataParameter.hxx" />
+    <ClInclude Include="ExistsParameter.hxx" />
+    <ClInclude Include="ExpiresCategory.hxx" />
+    <ClInclude Include="ExtensionHeader.hxx" />
+    <ClInclude Include="ExtensionParameter.hxx" />
+    <ClInclude Include="ExternalBodyContents.hxx" />
+    <ClInclude Include="GenericContents.hxx" />
+    <ClInclude Include="GenericUri.hxx" />
+    <ClInclude Include="HeaderFieldValue.hxx" />
+    <ClInclude Include="HeaderFieldValueList.hxx" />
+    <ClInclude Include="HeaderHash.hxx" />
+    <ClInclude Include="Headers.hxx" />
+    <ClInclude Include="HeaderTypes.hxx" />
+    <ClInclude Include="Helper.hxx" />
+    <ClInclude Include="IntegerCategory.hxx" />
+    <ClInclude Include="IntegerParameter.hxx" />
+    <ClInclude Include="InternalTransport.hxx" />
+    <ClInclude Include="InteropHelper.hxx" />
+    <ClInclude Include="InterruptableStackThread.hxx" />
+    <ClInclude Include="InvalidContents.hxx" />
+    <ClInclude Include="KeepAliveMessage.hxx" />
+    <ClInclude Include="LazyParser.hxx" />
+    <ClInclude Include="MarkListener.hxx" />
+    <ClInclude Include="Message.hxx" />
+    <ClInclude Include="MessageFilterRule.hxx" />
+    <ClInclude Include="MessageWaitingContents.hxx" />
+    <ClInclude Include="MethodHash.hxx" />
+    <ClInclude Include="MethodTypes.hxx" />
+    <ClInclude Include="Mime.hxx" />
+    <ClInclude Include="MsgHeaderScanner.hxx" />
+    <ClInclude Include="MultipartAlternativeContents.hxx" />
+    <ClInclude Include="MultipartMixedContents.hxx" />
+    <ClInclude Include="MultipartRelatedContents.hxx" />
+    <ClInclude Include="MultipartSignedContents.hxx" />
+    <ClInclude Include="NameAddr.hxx" />
+    <ClInclude Include="NonceHelper.hxx" />
+    <ClInclude Include="OctetContents.hxx" />
+    <ClInclude Include="Parameter.hxx" />
+    <ClInclude Include="ParameterHash.hxx" />
+    <ClInclude Include="ParameterTypeEnums.hxx" />
+    <ClInclude Include="ParameterTypes.hxx" />
+    <ClInclude Include="ParserCategories.hxx" />
+    <ClInclude Include="ParserCategory.hxx" />
+    <ClInclude Include="ParserContainer.hxx" />
+    <ClInclude Include="ParserContainerBase.hxx" />
+    <ClInclude Include="Pidf.hxx" />
+    <ClInclude Include="Pkcs7Contents.hxx" />
+    <ClInclude Include="Pkcs8Contents.hxx" />
+    <ClInclude Include="PlainContents.hxx" />
+    <ClInclude Include="PollStatistics.hxx" />
+    <ClInclude Include="PrivacyCategory.hxx" />
+    <ClInclude Include="QuotedDataParameter.hxx" />
+    <ClInclude Include="QValue.hxx" />
+    <ClInclude Include="QValueParameter.hxx" />
+    <ClInclude Include="RAckCategory.hxx" />
+    <ClInclude Include="RequestLine.hxx" />
+    <ClInclude Include="Rlmi.hxx" />
+    <ClInclude Include="RportParameter.hxx" />
+    <ClInclude Include="SdpContents.hxx" />
+    <ClInclude Include="ssl\Security.hxx" />
+    <ClInclude Include="SecurityAttributes.hxx" />
+    <ClInclude Include="SecurityTypes.hxx" />
+    <ClInclude Include="SendData.hxx" />
+    <ClInclude Include="SERNonceHelper.hxx" />
+    <ClInclude Include="ShutdownMessage.hxx" />
+    <ClInclude Include="SipFrag.hxx" />
+    <ClInclude Include="SipMessage.hxx" />
+    <ClInclude Include="SipStack.hxx" />
+    <ClInclude Include="StackThread.hxx" />
+    <ClInclude Include="StartLine.hxx" />
+    <ClInclude Include="StatelessHandler.hxx" />
+    <ClInclude Include="StatisticsHandler.hxx" />
+    <ClInclude Include="StatisticsManager.hxx" />
+    <ClInclude Include="StatisticsMessage.hxx" />
+    <ClInclude Include="StatusLine.hxx" />
+    <ClInclude Include="StringCategory.hxx" />
+    <ClInclude Include="Symbols.hxx" />
+    <ClInclude Include="TcpBaseTransport.hxx" />
+    <ClInclude Include="TcpConnection.hxx" />
+    <ClInclude Include="TcpTransport.hxx" />
+    <ClInclude Include="TerminateFlow.hxx" />
+    <ClInclude Include="TextParameter.hxx" />
+    <ClInclude Include="TimeAccumulate.hxx" />
+    <ClInclude Include="TimerMessage.hxx" />
+    <ClInclude Include="TimerQueue.hxx" />
+    <ClInclude Include="ssl\TlsConnection.hxx" />
+    <ClInclude Include="ssl\TlsTransport.hxx" />
+    <ClInclude Include="Token.hxx" />
+    <ClInclude Include="TransactionController.hxx" />
+    <ClInclude Include="TransactionControllerThread.hxx" />
+    <ClInclude Include="TransactionMap.hxx" />
+    <ClInclude Include="TransactionMessage.hxx" />
+    <ClInclude Include="TransactionState.hxx" />
+    <ClInclude Include="TransactionTerminated.hxx" />
+    <ClInclude Include="TransactionUser.hxx" />
+    <ClInclude Include="TransactionUserMessage.hxx" />
+    <ClInclude Include="Transport.hxx" />
+    <ClInclude Include="TransportFailure.hxx" />
+    <ClInclude Include="TransportSelector.hxx" />
+    <ClInclude Include="TransportSelectorThread.hxx" />
+    <ClInclude Include="TransportThread.hxx" />
+    <ClInclude Include="TuIM.hxx" />
+    <ClInclude Include="Tuple.hxx" />
+    <ClInclude Include="TupleMarkManager.hxx" />
+    <ClInclude Include="TuSelector.hxx" />
+    <ClInclude Include="UdpTransport.hxx" />
+    <ClInclude Include="UInt32Category.hxx" />
+    <ClInclude Include="UInt32Parameter.hxx" />
+    <ClInclude Include="UnknownHeaderType.hxx" />
+    <ClInclude Include="UnknownParameter.hxx" />
+    <ClInclude Include="UnknownParameterType.hxx" />
+    <ClInclude Include="Uri.hxx" />
+    <ClInclude Include="ValueFifo.hxx" />
+    <ClInclude Include="Via.hxx" />
+    <ClInclude Include="WarningCategory.hxx" />
+    <ClInclude Include="ssl\WinSecurity.hxx" />
+    <ClInclude Include="X509Contents.hxx" />
+    <ClInclude Include="ZeroOutStatistics.hxx" />
+  </ItemGroup>
+  <ItemGroup>
+    <None Include="HeaderHash.gperf" />
+    <None Include="MethodHash.gperf" />
+    <None Include="ParameterHash.gperf" />
+  </ItemGroup>
+  <ItemGroup>
+    <ProjectReference Include="..\..\rutil\rutil_10_0.vcxproj">
+      <Project>{3d0e5ceb-93dc-4fdb-918b-d08fa369e106}</Project>
+      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
+    </ProjectReference>
+  </ItemGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
+  <ImportGroup Label="ExtensionTargets">
+  </ImportGroup>
 </Project>
\ No newline at end of file
Index: resip/stack/resiprocate_10_0.vcxproj.filters
===================================================================
--- resip/stack/resiprocate_10_0.vcxproj.filters	(revision 9737)
+++ resip/stack/resiprocate_10_0.vcxproj.filters	(working copy)
@@ -1,856 +1,856 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <ItemGroup>
-    <Filter Include="GPerfFiles">
-      <UniqueIdentifier>{7670bbf8-7277-4dba-b6f5-bb726a96b4e6}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="Header Files">
-      <UniqueIdentifier>{11690c26-b5eb-442d-b7fb-5fb97ce10cf0}</UniqueIdentifier>
-      <Extensions>h;hpp;hxx;hm;inl;inc</Extensions>
-    </Filter>
-    <Filter Include="Source Files">
-      <UniqueIdentifier>{4d95e332-af7e-4e86-9bd4-3c03fc017b97}</UniqueIdentifier>
-      <Extensions>cpp;c;cxx;def;odl;idl;hpj;bat;asm</Extensions>
-    </Filter>
-  </ItemGroup>
-  <ItemGroup>
-    <ClCompile Include="Aor.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="ApiCheck.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="ApplicationSip.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="Auth.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="BasicNonceHelper.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="BranchParameter.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="CallId.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="Compression.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="Connection.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="ConnectionBase.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="ConnectionManager.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="Contents.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="ContentsFactoryBase.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="CpimContents.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="CSeqCategory.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="DataParameter.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="DateCategory.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="DeprecatedDialog.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="DnsInterface.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="DnsResult.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="DtlsMessage.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="Embedded.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="ExistsOrDataParameter.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="ExistsParameter.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="ExpiresCategory.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="ExtensionHeader.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="ExtensionParameter.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="ExternalBodyContents.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="GenericContents.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="GenericUri.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="HeaderFieldValue.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="HeaderFieldValueList.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="HeaderHash.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="Headers.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="HeaderTypes.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="Helper.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="IntegerCategory.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="IntegerParameter.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="InternalTransport.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="InteropHelper.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="InterruptableStackThread.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="InvalidContents.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="KeepAliveMessage.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="LazyParser.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="Message.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="MessageFilterRule.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="MessageWaitingContents.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="MethodHash.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="MethodTypes.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="Mime.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="MsgHeaderScanner.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="MultipartAlternativeContents.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="MultipartMixedContents.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="MultipartRelatedContents.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="MultipartSignedContents.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="NameAddr.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="NonceHelper.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="OctetContents.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="Parameter.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="ParameterHash.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="ParameterTypes.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="ParserCategories.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="ParserCategory.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="ParserContainerBase.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="Pidf.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="Pkcs7Contents.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="Pkcs8Contents.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="PlainContents.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="PrivacyCategory.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="QuotedDataParameter.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="QValue.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="QValueParameter.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="RAckCategory.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="RequestLine.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="Rlmi.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="RportParameter.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="SdpContents.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="SecurityAttributes.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="SERNonceHelper.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="SipFrag.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="SipMessage.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="SipStack.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="ssl\DtlsTransport.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="ssl\Security.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="ssl\TlsConnection.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="ssl\TlsTransport.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="ssl\WinSecurity.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="StackThread.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="StatelessHandler.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="StatisticsHandler.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="StatisticsManager.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="StatisticsMessage.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="StatusLine.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="StringCategory.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="Symbols.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="TcpBaseTransport.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="TcpConnection.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="TcpTransport.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="TimeAccumulate.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="TimerMessage.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="TimerQueue.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="Token.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="TransactionController.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="TransactionMap.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="TransactionState.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="TransactionUser.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="TransactionUserMessage.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="Transport.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="TransportFailure.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="TransportSelector.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="TuIM.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="Tuple.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="TupleMarkManager.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="TuSelector.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="UdpTransport.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="UInt32Category.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="UInt32Parameter.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="UnknownParameter.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="Uri.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="Via.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="WarningCategory.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="X509Contents.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="EventStackThread.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="TransportThread.cxx">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-  </ItemGroup>
-  <ItemGroup>
-    <ClInclude Include="Aor.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="ApiCheck.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="ApiCheckList.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="ApplicationMessage.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="ApplicationSip.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="Auth.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="BasicNonceHelper.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="BranchParameter.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="CallId.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="CancelableTimerQueue.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="Compression.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="Connection.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="ConnectionBase.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="ConnectionManager.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="Contents.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="ContentsFactory.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="ContentsFactoryBase.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="CpimContents.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="CSeqCategory.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="DataParameter.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="DateCategory.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="DeprecatedDialog.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="DnsInterface.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="DnsResult.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="DtlsMessage.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="Embedded.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="ExistsOrDataParameter.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="ExistsParameter.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="ExpiresCategory.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="ExtensionHeader.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="ExtensionParameter.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="ExternalBodyContents.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="GenericContents.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="GenericUri.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="HeaderFieldValue.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="HeaderFieldValueList.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="HeaderHash.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="Headers.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="HeaderTypes.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="Helper.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="IntegerCategory.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="IntegerParameter.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="InternalTransport.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="InteropHelper.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="InterruptableStackThread.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="InvalidContents.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="KeepAliveMessage.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="LazyParser.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="MarkListener.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="Message.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="MessageFilterRule.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="MessageWaitingContents.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="MethodHash.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="MethodTypes.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="Mime.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="MsgHeaderScanner.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="MultipartAlternativeContents.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="MultipartMixedContents.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="MultipartRelatedContents.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="MultipartSignedContents.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="NameAddr.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="NonceHelper.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="OctetContents.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="Parameter.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="ParameterHash.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="ParameterTypeEnums.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="ParameterTypes.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="ParserCategories.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="ParserCategory.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="ParserContainer.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="ParserContainerBase.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="Pidf.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="Pkcs7Contents.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="Pkcs8Contents.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="PlainContents.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="PollStatistics.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="PrivacyCategory.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="QuotedDataParameter.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="QValue.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="QValueParameter.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="RAckCategory.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="RequestLine.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="Rlmi.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="RportParameter.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="SdpContents.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="SecurityAttributes.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="SecurityTypes.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="SendData.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="SERNonceHelper.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="ShutdownMessage.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="SipFrag.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="SipMessage.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="SipStack.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="ssl\DtlsTransport.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="ssl\Security.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="ssl\TlsConnection.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="ssl\TlsTransport.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="ssl\WinSecurity.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="StackThread.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="StatelessHandler.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="StatisticsHandler.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="StatisticsManager.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="StatisticsMessage.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="StatusLine.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="StringCategory.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="Symbols.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="TcpBaseTransport.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="TcpConnection.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="TcpTransport.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="TextParameter.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="TimeAccumulate.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="TimerMessage.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="TimerQueue.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="Token.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="TransactionController.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="TransactionMap.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="TransactionMessage.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="TransactionState.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="TransactionTerminated.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="TransactionUser.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="TransactionUserMessage.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="Transport.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="TransportFailure.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="TransportSelector.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="TuIM.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="Tuple.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="TupleMarkManager.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="TuSelector.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="UdpTransport.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="UInt32Category.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="UInt32Parameter.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="UnknownHeaderType.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="UnknownParameter.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="UnknownParameterType.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="Uri.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="ValueFifo.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="Via.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="WarningCategory.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="X509Contents.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="ZeroOutStatistics.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="EventStackThread.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="ConnectionTerminated.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="KeepAlivePong.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="TerminateFlow.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="DnsResultMessage.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="StartLine.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="TransactionControllerThread.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="TransportSelectorThread.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="TransportThread.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="CancelClientInviteTransaction.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="MessageDecorator.hxx">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-  </ItemGroup>
-  <ItemGroup>
-    <None Include="HeaderHash.gperf">
-      <Filter>GPerfFiles</Filter>
-    </None>
-    <None Include="MethodHash.gperf">
-      <Filter>GPerfFiles</Filter>
-    </None>
-    <None Include="ParameterHash.gperf">
-      <Filter>GPerfFiles</Filter>
-    </None>
-  </ItemGroup>
+﻿<?xml version="1.0" encoding="utf-8"?>
+<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <ItemGroup>
+    <Filter Include="GPerfFiles">
+      <UniqueIdentifier>{7670bbf8-7277-4dba-b6f5-bb726a96b4e6}</UniqueIdentifier>
+    </Filter>
+    <Filter Include="Header Files">
+      <UniqueIdentifier>{11690c26-b5eb-442d-b7fb-5fb97ce10cf0}</UniqueIdentifier>
+      <Extensions>h;hpp;hxx;hm;inl;inc</Extensions>
+    </Filter>
+    <Filter Include="Source Files">
+      <UniqueIdentifier>{4d95e332-af7e-4e86-9bd4-3c03fc017b97}</UniqueIdentifier>
+      <Extensions>cpp;c;cxx;def;odl;idl;hpj;bat;asm</Extensions>
+    </Filter>
+  </ItemGroup>
+  <ItemGroup>
+    <ClCompile Include="Aor.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="ApiCheck.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="ApplicationSip.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="Auth.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="BasicNonceHelper.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="BranchParameter.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="CallId.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="Compression.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="Connection.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="ConnectionBase.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="ConnectionManager.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="Contents.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="ContentsFactoryBase.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="CpimContents.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="CSeqCategory.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="DataParameter.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="DateCategory.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="DeprecatedDialog.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="DnsInterface.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="DnsResult.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="DtlsMessage.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="Embedded.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="ExistsOrDataParameter.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="ExistsParameter.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="ExpiresCategory.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="ExtensionHeader.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="ExtensionParameter.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="ExternalBodyContents.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="GenericContents.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="GenericUri.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="HeaderFieldValue.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="HeaderFieldValueList.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="HeaderHash.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="Headers.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="HeaderTypes.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="Helper.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="IntegerCategory.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="IntegerParameter.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="InternalTransport.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="InteropHelper.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="InterruptableStackThread.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="InvalidContents.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="KeepAliveMessage.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="LazyParser.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="Message.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="MessageFilterRule.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="MessageWaitingContents.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="MethodHash.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="MethodTypes.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="Mime.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="MsgHeaderScanner.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="MultipartAlternativeContents.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="MultipartMixedContents.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="MultipartRelatedContents.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="MultipartSignedContents.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="NameAddr.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="NonceHelper.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="OctetContents.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="Parameter.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="ParameterHash.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="ParameterTypes.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="ParserCategories.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="ParserCategory.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="ParserContainerBase.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="Pidf.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="Pkcs7Contents.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="Pkcs8Contents.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="PlainContents.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="PrivacyCategory.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="QuotedDataParameter.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="QValue.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="QValueParameter.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="RAckCategory.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="RequestLine.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="Rlmi.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="RportParameter.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="SdpContents.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="SecurityAttributes.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="SERNonceHelper.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="SipFrag.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="SipMessage.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="SipStack.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="ssl\DtlsTransport.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="ssl\Security.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="ssl\TlsConnection.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="ssl\TlsTransport.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="ssl\WinSecurity.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="StackThread.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="StatelessHandler.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="StatisticsHandler.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="StatisticsManager.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="StatisticsMessage.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="StatusLine.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="StringCategory.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="Symbols.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="TcpBaseTransport.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="TcpConnection.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="TcpTransport.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="TimeAccumulate.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="TimerMessage.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="TimerQueue.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="Token.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="TransactionController.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="TransactionMap.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="TransactionState.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="TransactionUser.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="TransactionUserMessage.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="Transport.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="TransportFailure.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="TransportSelector.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="TuIM.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="Tuple.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="TupleMarkManager.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="TuSelector.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="UdpTransport.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="UInt32Category.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="UInt32Parameter.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="UnknownParameter.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="Uri.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="Via.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="WarningCategory.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="X509Contents.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="EventStackThread.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="TransportThread.cxx">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+  </ItemGroup>
+  <ItemGroup>
+    <ClInclude Include="Aor.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="ApiCheck.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="ApiCheckList.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="ApplicationMessage.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="ApplicationSip.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="Auth.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="BasicNonceHelper.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="BranchParameter.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="CallId.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="CancelableTimerQueue.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="Compression.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="Connection.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="ConnectionBase.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="ConnectionManager.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="Contents.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="ContentsFactory.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="ContentsFactoryBase.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="CpimContents.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="CSeqCategory.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="DataParameter.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="DateCategory.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="DeprecatedDialog.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="DnsInterface.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="DnsResult.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="DtlsMessage.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="Embedded.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="ExistsOrDataParameter.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="ExistsParameter.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="ExpiresCategory.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="ExtensionHeader.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="ExtensionParameter.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="ExternalBodyContents.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="GenericContents.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="GenericUri.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="HeaderFieldValue.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="HeaderFieldValueList.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="HeaderHash.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="Headers.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="HeaderTypes.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="Helper.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="IntegerCategory.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="IntegerParameter.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="InternalTransport.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="InteropHelper.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="InterruptableStackThread.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="InvalidContents.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="KeepAliveMessage.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="LazyParser.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="MarkListener.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="Message.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="MessageFilterRule.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="MessageWaitingContents.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="MethodHash.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="MethodTypes.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="Mime.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="MsgHeaderScanner.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="MultipartAlternativeContents.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="MultipartMixedContents.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="MultipartRelatedContents.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="MultipartSignedContents.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="NameAddr.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="NonceHelper.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="OctetContents.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="Parameter.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="ParameterHash.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="ParameterTypeEnums.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="ParameterTypes.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="ParserCategories.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="ParserCategory.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="ParserContainer.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="ParserContainerBase.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="Pidf.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="Pkcs7Contents.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="Pkcs8Contents.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="PlainContents.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="PollStatistics.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="PrivacyCategory.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="QuotedDataParameter.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="QValue.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="QValueParameter.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="RAckCategory.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="RequestLine.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="Rlmi.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="RportParameter.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="SdpContents.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="SecurityAttributes.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="SecurityTypes.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="SendData.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="SERNonceHelper.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="ShutdownMessage.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="SipFrag.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="SipMessage.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="SipStack.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="ssl\DtlsTransport.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="ssl\Security.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="ssl\TlsConnection.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="ssl\TlsTransport.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="ssl\WinSecurity.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="StackThread.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="StatelessHandler.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="StatisticsHandler.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="StatisticsManager.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="StatisticsMessage.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="StatusLine.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="StringCategory.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="Symbols.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="TcpBaseTransport.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="TcpConnection.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="TcpTransport.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="TextParameter.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="TimeAccumulate.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="TimerMessage.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="TimerQueue.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="Token.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="TransactionController.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="TransactionMap.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="TransactionMessage.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="TransactionState.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="TransactionTerminated.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="TransactionUser.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="TransactionUserMessage.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="Transport.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="TransportFailure.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="TransportSelector.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="TuIM.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="Tuple.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="TupleMarkManager.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="TuSelector.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="UdpTransport.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="UInt32Category.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="UInt32Parameter.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="UnknownHeaderType.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="UnknownParameter.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="UnknownParameterType.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="Uri.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="ValueFifo.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="Via.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="WarningCategory.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="X509Contents.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="ZeroOutStatistics.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="EventStackThread.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="ConnectionTerminated.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="KeepAlivePong.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="TerminateFlow.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="DnsResultMessage.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="StartLine.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="TransactionControllerThread.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="TransportSelectorThread.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="TransportThread.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="CancelClientInviteTransaction.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="MessageDecorator.hxx">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+  </ItemGroup>
+  <ItemGroup>
+    <None Include="HeaderHash.gperf">
+      <Filter>GPerfFiles</Filter>
+    </None>
+    <None Include="MethodHash.gperf">
+      <Filter>GPerfFiles</Filter>
+    </None>
+    <None Include="ParameterHash.gperf">
+      <Filter>GPerfFiles</Filter>
+    </None>
+  </ItemGroup>
 </Project>
\ No newline at end of file
Index: resip/stack/resiprocate_8_0.vcproj
===================================================================
--- resip/stack/resiprocate_8_0.vcproj	(revision 9737)
+++ resip/stack/resiprocate_8_0.vcproj	(working copy)
@@ -1,1490 +1,1490 @@
-﻿<?xml version="1.0" encoding="UTF-8"?>
-<VisualStudioProject
-	ProjectType="Visual C++"
-	Version="8.00"
-	Name="resiprocate"
-	ProjectGUID="{2A8BE839-6466-4001-B224-8F1C3168D04A}"
-	RootNamespace="resiprocate"
-	Keyword="Win32Proj"
-	>
-	<Platforms>
-		<Platform
-			Name="Win32"
-		/>
-	</Platforms>
-	<ToolFiles>
-	</ToolFiles>
-	<Configurations>
-		<Configuration
-			Name="Debug|Win32"
-			OutputDirectory="Debug"
-			IntermediateDirectory="Debug"
-			ConfigurationType="4"
-			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-			UseOfMFC="0"
-			CharacterSet="2"
-			>
-			<Tool
-				Name="VCPreBuildEventTool"
-			/>
-			<Tool
-				Name="VCCustomBuildTool"
-			/>
-			<Tool
-				Name="VCXMLDataGeneratorTool"
-			/>
-			<Tool
-				Name="VCWebServiceProxyGeneratorTool"
-			/>
-			<Tool
-				Name="VCMIDLTool"
-			/>
-			<Tool
-				Name="VCCLCompilerTool"
-				AdditionalOptions="/Zm300"
-				Optimization="0"
-				AdditionalIncludeDirectories="&quot;$(ProjectDir)../../contrib/ares&quot;;&quot;$(ProjectDir)../&quot;;&quot;$(ProjectDir)../../&quot;"
-				PreprocessorDefinitions="WIN32;_DEBUG;_LIB;USE_ARES;USE_IPV6;LEAK_CHECK"
-				MinimalRebuild="true"
-				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
-				BufferSecurityCheck="true"
-				RuntimeTypeInfo="true"
-				UsePrecompiledHeader="0"
-				WarningLevel="3"
-				Detect64BitPortabilityProblems="false"
-				DebugInformationFormat="3"
-			/>
-			<Tool
-				Name="VCManagedResourceCompilerTool"
-			/>
-			<Tool
-				Name="VCResourceCompilerTool"
-			/>
-			<Tool
-				Name="VCPreLinkEventTool"
-			/>
-			<Tool
-				Name="VCLibrarianTool"
-				OutputFile="$(OutDir)/resiprocate.lib"
-			/>
-			<Tool
-				Name="VCALinkTool"
-			/>
-			<Tool
-				Name="VCXDCMakeTool"
-			/>
-			<Tool
-				Name="VCBscMakeTool"
-			/>
-			<Tool
-				Name="VCFxCopTool"
-			/>
-			<Tool
-				Name="VCPostBuildEventTool"
-			/>
-		</Configuration>
-		<Configuration
-			Name="Release|Win32"
-			OutputDirectory="Release"
-			IntermediateDirectory="Release"
-			ConfigurationType="4"
-			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-			UseOfMFC="0"
-			CharacterSet="2"
-			>
-			<Tool
-				Name="VCPreBuildEventTool"
-			/>
-			<Tool
-				Name="VCCustomBuildTool"
-			/>
-			<Tool
-				Name="VCXMLDataGeneratorTool"
-			/>
-			<Tool
-				Name="VCWebServiceProxyGeneratorTool"
-			/>
-			<Tool
-				Name="VCMIDLTool"
-			/>
-			<Tool
-				Name="VCCLCompilerTool"
-				AdditionalOptions="/Zm300"
-				Optimization="2"
-				InlineFunctionExpansion="1"
-				FavorSizeOrSpeed="1"
-				OmitFramePointers="true"
-				AdditionalIncludeDirectories="&quot;$(ProjectDir)../../contrib/ares&quot;;&quot;$(ProjectDir)../&quot;;&quot;$(ProjectDir)../../&quot;"
-				PreprocessorDefinitions="WIN32;NDEBUG;_LIB;USE_ARES;USE_IPV6"
-				StringPooling="true"
-				RuntimeLibrary="2"
-				BufferSecurityCheck="false"
-				EnableFunctionLevelLinking="true"
-				RuntimeTypeInfo="true"
-				UsePrecompiledHeader="0"
-				WarningLevel="3"
-				Detect64BitPortabilityProblems="false"
-				DebugInformationFormat="0"
-			/>
-			<Tool
-				Name="VCManagedResourceCompilerTool"
-			/>
-			<Tool
-				Name="VCResourceCompilerTool"
-			/>
-			<Tool
-				Name="VCPreLinkEventTool"
-			/>
-			<Tool
-				Name="VCLibrarianTool"
-				OutputFile="$(OutDir)/resiprocate.lib"
-			/>
-			<Tool
-				Name="VCALinkTool"
-			/>
-			<Tool
-				Name="VCXDCMakeTool"
-			/>
-			<Tool
-				Name="VCBscMakeTool"
-			/>
-			<Tool
-				Name="VCFxCopTool"
-			/>
-			<Tool
-				Name="VCPostBuildEventTool"
-			/>
-		</Configuration>
-		<Configuration
-			Name="SSL-Debug|Win32"
-			OutputDirectory="SSL-Debug"
-			IntermediateDirectory="SSL-Debug"
-			ConfigurationType="4"
-			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-			UseOfMFC="0"
-			CharacterSet="2"
-			>
-			<Tool
-				Name="VCPreBuildEventTool"
-			/>
-			<Tool
-				Name="VCCustomBuildTool"
-			/>
-			<Tool
-				Name="VCXMLDataGeneratorTool"
-			/>
-			<Tool
-				Name="VCWebServiceProxyGeneratorTool"
-			/>
-			<Tool
-				Name="VCMIDLTool"
-			/>
-			<Tool
-				Name="VCCLCompilerTool"
-				AdditionalOptions="/Zm300"
-				Optimization="0"
-				AdditionalIncludeDirectories="&quot;$(ProjectDir)../../contrib/ares&quot;;&quot;$(ProjectDir)../&quot;;&quot;$(ProjectDir)../../&quot;;&quot;$(ProjectDir)../../contrib/openssl/include&quot;;&quot;$(ProjectDir)../../contrib/openssl/inc32&quot;"
-				PreprocessorDefinitions="WIN32;_DEBUG;_LIB;LEAK_CHECK;USE_SSL;USE_ARES;USE_IPV6;USE_DTLS"
-				MinimalRebuild="true"
-				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
-				RuntimeTypeInfo="true"
-				UsePrecompiledHeader="0"
-				WarningLevel="3"
-				Detect64BitPortabilityProblems="false"
-				DebugInformationFormat="4"
-			/>
-			<Tool
-				Name="VCManagedResourceCompilerTool"
-			/>
-			<Tool
-				Name="VCResourceCompilerTool"
-			/>
-			<Tool
-				Name="VCPreLinkEventTool"
-			/>
-			<Tool
-				Name="VCLibrarianTool"
-				OutputFile="$(OutDir)/resiprocate.lib"
-			/>
-			<Tool
-				Name="VCALinkTool"
-			/>
-			<Tool
-				Name="VCXDCMakeTool"
-			/>
-			<Tool
-				Name="VCBscMakeTool"
-			/>
-			<Tool
-				Name="VCFxCopTool"
-			/>
-			<Tool
-				Name="VCPostBuildEventTool"
-			/>
-		</Configuration>
-		<Configuration
-			Name="SSL-Release|Win32"
-			OutputDirectory="SSL-Release"
-			IntermediateDirectory="SSL-Release"
-			ConfigurationType="4"
-			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-			UseOfMFC="0"
-			CharacterSet="2"
-			>
-			<Tool
-				Name="VCPreBuildEventTool"
-			/>
-			<Tool
-				Name="VCCustomBuildTool"
-			/>
-			<Tool
-				Name="VCXMLDataGeneratorTool"
-			/>
-			<Tool
-				Name="VCWebServiceProxyGeneratorTool"
-			/>
-			<Tool
-				Name="VCMIDLTool"
-			/>
-			<Tool
-				Name="VCCLCompilerTool"
-				AdditionalOptions="/Zm300"
-				Optimization="2"
-				InlineFunctionExpansion="1"
-				OmitFramePointers="true"
-				AdditionalIncludeDirectories="&quot;$(ProjectDir)../../contrib/ares&quot;;&quot;$(ProjectDir)../&quot;;&quot;$(ProjectDir)../../&quot;;&quot;$(ProjectDir)../../contrib/openssl/include&quot;;&quot;$(ProjectDir)../../contrib/openssl/inc32&quot;"
-				PreprocessorDefinitions="WIN32;NDEBUG;_LIB;USE_SSL;USE_ARES;USE_IPV6"
-				StringPooling="true"
-				RuntimeLibrary="2"
-				EnableFunctionLevelLinking="true"
-				RuntimeTypeInfo="true"
-				UsePrecompiledHeader="0"
-				WarningLevel="3"
-				Detect64BitPortabilityProblems="false"
-				DebugInformationFormat="3"
-			/>
-			<Tool
-				Name="VCManagedResourceCompilerTool"
-			/>
-			<Tool
-				Name="VCResourceCompilerTool"
-			/>
-			<Tool
-				Name="VCPreLinkEventTool"
-			/>
-			<Tool
-				Name="VCLibrarianTool"
-				OutputFile="$(OutDir)/resiprocate.lib"
-			/>
-			<Tool
-				Name="VCALinkTool"
-			/>
-			<Tool
-				Name="VCXDCMakeTool"
-			/>
-			<Tool
-				Name="VCBscMakeTool"
-			/>
-			<Tool
-				Name="VCFxCopTool"
-			/>
-			<Tool
-				Name="VCPostBuildEventTool"
-			/>
-		</Configuration>
-	</Configurations>
-	<References>
-	</References>
-	<Files>
-		<Filter
-			Name="Source Files"
-			Filter="cpp;c;cxx;def;odl;idl;hpj;bat;asm"
-			>
-			<File
-				RelativePath=".\Aor.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ApiCheck.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ApplicationSip.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Auth.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\BasicNonceHelper.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\BranchParameter.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\CallId.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Compression.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Connection.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ConnectionBase.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ConnectionManager.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Contents.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ContentsFactoryBase.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\CpimContents.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\CSeqCategory.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\DataParameter.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\DateCategory.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\DeprecatedDialog.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\DnsInterface.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\DnsResult.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\DtlsMessage.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ssl\DtlsTransport.cxx"
-				>
-				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-					/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath=".\Embedded.cxx"
-				>
-			</File>
-			<File
+﻿<?xml version="1.0" encoding="UTF-8"?>
+<VisualStudioProject
+	ProjectType="Visual C++"
+	Version="8.00"
+	Name="resiprocate"
+	ProjectGUID="{2A8BE839-6466-4001-B224-8F1C3168D04A}"
+	RootNamespace="resiprocate"
+	Keyword="Win32Proj"
+	>
+	<Platforms>
+		<Platform
+			Name="Win32"
+		/>
+	</Platforms>
+	<ToolFiles>
+	</ToolFiles>
+	<Configurations>
+		<Configuration
+			Name="Debug|Win32"
+			OutputDirectory="Debug"
+			IntermediateDirectory="Debug"
+			ConfigurationType="4"
+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
+			UseOfMFC="0"
+			CharacterSet="2"
+			>
+			<Tool
+				Name="VCPreBuildEventTool"
+			/>
+			<Tool
+				Name="VCCustomBuildTool"
+			/>
+			<Tool
+				Name="VCXMLDataGeneratorTool"
+			/>
+			<Tool
+				Name="VCWebServiceProxyGeneratorTool"
+			/>
+			<Tool
+				Name="VCMIDLTool"
+			/>
+			<Tool
+				Name="VCCLCompilerTool"
+				AdditionalOptions="/Zm300"
+				Optimization="0"
+				AdditionalIncludeDirectories="&quot;$(ProjectDir)../../contrib/ares&quot;;&quot;$(ProjectDir)../&quot;;&quot;$(ProjectDir)../../&quot;"
+				PreprocessorDefinitions="WIN32;_DEBUG;_LIB;USE_ARES;USE_IPV6;LEAK_CHECK"
+				MinimalRebuild="true"
+				BasicRuntimeChecks="3"
+				RuntimeLibrary="3"
+				BufferSecurityCheck="true"
+				RuntimeTypeInfo="true"
+				UsePrecompiledHeader="0"
+				WarningLevel="3"
+				Detect64BitPortabilityProblems="false"
+				DebugInformationFormat="3"
+			/>
+			<Tool
+				Name="VCManagedResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCPreLinkEventTool"
+			/>
+			<Tool
+				Name="VCLibrarianTool"
+				OutputFile="$(OutDir)/resiprocate.lib"
+			/>
+			<Tool
+				Name="VCALinkTool"
+			/>
+			<Tool
+				Name="VCXDCMakeTool"
+			/>
+			<Tool
+				Name="VCBscMakeTool"
+			/>
+			<Tool
+				Name="VCFxCopTool"
+			/>
+			<Tool
+				Name="VCPostBuildEventTool"
+			/>
+		</Configuration>
+		<Configuration
+			Name="Release|Win32"
+			OutputDirectory="Release"
+			IntermediateDirectory="Release"
+			ConfigurationType="4"
+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
+			UseOfMFC="0"
+			CharacterSet="2"
+			>
+			<Tool
+				Name="VCPreBuildEventTool"
+			/>
+			<Tool
+				Name="VCCustomBuildTool"
+			/>
+			<Tool
+				Name="VCXMLDataGeneratorTool"
+			/>
+			<Tool
+				Name="VCWebServiceProxyGeneratorTool"
+			/>
+			<Tool
+				Name="VCMIDLTool"
+			/>
+			<Tool
+				Name="VCCLCompilerTool"
+				AdditionalOptions="/Zm300"
+				Optimization="2"
+				InlineFunctionExpansion="1"
+				FavorSizeOrSpeed="1"
+				OmitFramePointers="true"
+				AdditionalIncludeDirectories="&quot;$(ProjectDir)../../contrib/ares&quot;;&quot;$(ProjectDir)../&quot;;&quot;$(ProjectDir)../../&quot;"
+				PreprocessorDefinitions="WIN32;NDEBUG;_LIB;USE_ARES;USE_IPV6"
+				StringPooling="true"
+				RuntimeLibrary="2"
+				BufferSecurityCheck="false"
+				EnableFunctionLevelLinking="true"
+				RuntimeTypeInfo="true"
+				UsePrecompiledHeader="0"
+				WarningLevel="3"
+				Detect64BitPortabilityProblems="false"
+				DebugInformationFormat="0"
+			/>
+			<Tool
+				Name="VCManagedResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCPreLinkEventTool"
+			/>
+			<Tool
+				Name="VCLibrarianTool"
+				OutputFile="$(OutDir)/resiprocate.lib"
+			/>
+			<Tool
+				Name="VCALinkTool"
+			/>
+			<Tool
+				Name="VCXDCMakeTool"
+			/>
+			<Tool
+				Name="VCBscMakeTool"
+			/>
+			<Tool
+				Name="VCFxCopTool"
+			/>
+			<Tool
+				Name="VCPostBuildEventTool"
+			/>
+		</Configuration>
+		<Configuration
+			Name="SSL-Debug|Win32"
+			OutputDirectory="SSL-Debug"
+			IntermediateDirectory="SSL-Debug"
+			ConfigurationType="4"
+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
+			UseOfMFC="0"
+			CharacterSet="2"
+			>
+			<Tool
+				Name="VCPreBuildEventTool"
+			/>
+			<Tool
+				Name="VCCustomBuildTool"
+			/>
+			<Tool
+				Name="VCXMLDataGeneratorTool"
+			/>
+			<Tool
+				Name="VCWebServiceProxyGeneratorTool"
+			/>
+			<Tool
+				Name="VCMIDLTool"
+			/>
+			<Tool
+				Name="VCCLCompilerTool"
+				AdditionalOptions="/Zm300"
+				Optimization="0"
+				AdditionalIncludeDirectories="&quot;$(ProjectDir)../../contrib/ares&quot;;&quot;$(ProjectDir)../&quot;;&quot;$(ProjectDir)../../&quot;;&quot;$(ProjectDir)../../contrib/openssl/include&quot;;&quot;$(ProjectDir)../../contrib/openssl/inc32&quot;"
+				PreprocessorDefinitions="WIN32;_DEBUG;_LIB;LEAK_CHECK;USE_SSL;USE_ARES;USE_IPV6;USE_DTLS"
+				MinimalRebuild="true"
+				BasicRuntimeChecks="3"
+				RuntimeLibrary="3"
+				RuntimeTypeInfo="true"
+				UsePrecompiledHeader="0"
+				WarningLevel="3"
+				Detect64BitPortabilityProblems="false"
+				DebugInformationFormat="4"
+			/>
+			<Tool
+				Name="VCManagedResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCPreLinkEventTool"
+			/>
+			<Tool
+				Name="VCLibrarianTool"
+				OutputFile="$(OutDir)/resiprocate.lib"
+			/>
+			<Tool
+				Name="VCALinkTool"
+			/>
+			<Tool
+				Name="VCXDCMakeTool"
+			/>
+			<Tool
+				Name="VCBscMakeTool"
+			/>
+			<Tool
+				Name="VCFxCopTool"
+			/>
+			<Tool
+				Name="VCPostBuildEventTool"
+			/>
+		</Configuration>
+		<Configuration
+			Name="SSL-Release|Win32"
+			OutputDirectory="SSL-Release"
+			IntermediateDirectory="SSL-Release"
+			ConfigurationType="4"
+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
+			UseOfMFC="0"
+			CharacterSet="2"
+			>
+			<Tool
+				Name="VCPreBuildEventTool"
+			/>
+			<Tool
+				Name="VCCustomBuildTool"
+			/>
+			<Tool
+				Name="VCXMLDataGeneratorTool"
+			/>
+			<Tool
+				Name="VCWebServiceProxyGeneratorTool"
+			/>
+			<Tool
+				Name="VCMIDLTool"
+			/>
+			<Tool
+				Name="VCCLCompilerTool"
+				AdditionalOptions="/Zm300"
+				Optimization="2"
+				InlineFunctionExpansion="1"
+				OmitFramePointers="true"
+				AdditionalIncludeDirectories="&quot;$(ProjectDir)../../contrib/ares&quot;;&quot;$(ProjectDir)../&quot;;&quot;$(ProjectDir)../../&quot;;&quot;$(ProjectDir)../../contrib/openssl/include&quot;;&quot;$(ProjectDir)../../contrib/openssl/inc32&quot;"
+				PreprocessorDefinitions="WIN32;NDEBUG;_LIB;USE_SSL;USE_ARES;USE_IPV6"
+				StringPooling="true"
+				RuntimeLibrary="2"
+				EnableFunctionLevelLinking="true"
+				RuntimeTypeInfo="true"
+				UsePrecompiledHeader="0"
+				WarningLevel="3"
+				Detect64BitPortabilityProblems="false"
+				DebugInformationFormat="3"
+			/>
+			<Tool
+				Name="VCManagedResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCPreLinkEventTool"
+			/>
+			<Tool
+				Name="VCLibrarianTool"
+				OutputFile="$(OutDir)/resiprocate.lib"
+			/>
+			<Tool
+				Name="VCALinkTool"
+			/>
+			<Tool
+				Name="VCXDCMakeTool"
+			/>
+			<Tool
+				Name="VCBscMakeTool"
+			/>
+			<Tool
+				Name="VCFxCopTool"
+			/>
+			<Tool
+				Name="VCPostBuildEventTool"
+			/>
+		</Configuration>
+	</Configurations>
+	<References>
+	</References>
+	<Files>
+		<Filter
+			Name="Source Files"
+			Filter="cpp;c;cxx;def;odl;idl;hpj;bat;asm"
+			>
+			<File
+				RelativePath=".\Aor.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ApiCheck.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ApplicationSip.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Auth.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\BasicNonceHelper.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\BranchParameter.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\CallId.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Compression.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Connection.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ConnectionBase.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ConnectionManager.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Contents.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ContentsFactoryBase.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\CpimContents.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\CSeqCategory.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\DataParameter.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\DateCategory.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\DeprecatedDialog.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\DnsInterface.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\DnsResult.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\DtlsMessage.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ssl\DtlsTransport.cxx"
+				>
+				<FileConfiguration
+					Name="Debug|Win32"
+					ExcludedFromBuild="true"
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
+				<FileConfiguration
+					Name="Release|Win32"
+					ExcludedFromBuild="true"
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
+			</File>
+			<File
+				RelativePath=".\Embedded.cxx"
+				>
+			</File>
+			<File
 				RelativePath=".\EventStackThread.cxx"
 				>
 			</File>
 			<File
-				RelativePath=".\ExistsOrDataParameter.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ExistsParameter.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ExpiresCategory.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ExtensionHeader.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ExtensionParameter.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ExternalBodyContents.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\GenericContents.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\GenericUri.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\HeaderFieldValue.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\HeaderFieldValueList.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\HeaderHash.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Headers.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\HeaderTypes.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Helper.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\IntegerCategory.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\IntegerParameter.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\InternalTransport.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\InteropHelper.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\InterruptableStackThread.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\InvalidContents.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\KeepAliveMessage.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\LazyParser.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Message.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\MessageFilterRule.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\MessageWaitingContents.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\MethodHash.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\MethodTypes.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Mime.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\MsgHeaderScanner.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\MultipartAlternativeContents.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\MultipartMixedContents.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\MultipartRelatedContents.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\MultipartSignedContents.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\NameAddr.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\NonceHelper.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\OctetContents.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Parameter.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ParameterHash.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ParameterTypes.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ParserCategories.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ParserCategory.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ParserContainerBase.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Pidf.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Pkcs7Contents.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Pkcs8Contents.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\PlainContents.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\PrivacyCategory.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\QuotedDataParameter.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\QValue.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\QValueParameter.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\RAckCategory.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\RequestLine.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Rlmi.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\RportParameter.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\SdpContents.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ssl\Security.cxx"
-				>
-				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-					/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath=".\SecurityAttributes.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\SERNonceHelper.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\SipFrag.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\SipMessage.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\SipStack.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\StackThread.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\StatelessHandler.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\StatisticsHandler.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\StatisticsManager.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\StatisticsMessage.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\StatusLine.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\StringCategory.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Symbols.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\TcpBaseTransport.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\TcpConnection.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\TcpTransport.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\TimeAccumulate.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\TimerMessage.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\TimerQueue.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ssl\TlsConnection.cxx"
-				>
-				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-					/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath=".\ssl\TlsTransport.cxx"
-				>
-				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-					/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath=".\Token.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\TransactionController.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\TransactionMap.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\TransactionState.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\TransactionUser.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\TransactionUserMessage.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Transport.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\TransportFailure.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\TransportSelector.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\TransportThread.cxx"
-				>
-			</File>			
-			<File
-				RelativePath=".\TuIM.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Tuple.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\TupleMarkManager.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\TuSelector.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\UdpTransport.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\UInt32Category.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\UInt32Parameter.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\UnknownParameter.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Uri.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Via.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\WarningCategory.cxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ssl\WinSecurity.cxx"
-				>
-				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-					/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath=".\X509Contents.cxx"
-				>
-			</File>
-		</Filter>
-		<Filter
-			Name="Header Files"
-			Filter="h;hpp;hxx;hm;inl;inc"
-			>
-			<File
-				RelativePath=".\Aor.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ApiCheck.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ApiCheckList.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ApplicationMessage.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ApplicationSip.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Auth.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\BasicNonceHelper.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\BranchParameter.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\CallId.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\CancelableTimerQueue.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Compression.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Connection.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ConnectionBase.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ConnectionManager.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Contents.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ContentsFactory.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ContentsFactoryBase.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\CpimContents.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\CSeqCategory.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\DataParameter.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\DateCategory.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\DeprecatedDialog.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\DnsInterface.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\DnsResult.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\DnsResultMessage.hxx"
-				>
-			</File>						
-			<File
-				RelativePath=".\DtlsMessage.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ssl\DtlsTransport.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Embedded.hxx"
-				>
-			</File>
-			<File
+				RelativePath=".\ExistsOrDataParameter.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ExistsParameter.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ExpiresCategory.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ExtensionHeader.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ExtensionParameter.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ExternalBodyContents.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\GenericContents.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\GenericUri.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\HeaderFieldValue.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\HeaderFieldValueList.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\HeaderHash.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Headers.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\HeaderTypes.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Helper.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\IntegerCategory.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\IntegerParameter.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\InternalTransport.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\InteropHelper.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\InterruptableStackThread.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\InvalidContents.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\KeepAliveMessage.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\LazyParser.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Message.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\MessageFilterRule.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\MessageWaitingContents.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\MethodHash.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\MethodTypes.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Mime.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\MsgHeaderScanner.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\MultipartAlternativeContents.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\MultipartMixedContents.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\MultipartRelatedContents.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\MultipartSignedContents.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\NameAddr.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\NonceHelper.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\OctetContents.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Parameter.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ParameterHash.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ParameterTypes.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ParserCategories.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ParserCategory.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ParserContainerBase.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Pidf.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Pkcs7Contents.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Pkcs8Contents.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\PlainContents.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\PrivacyCategory.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\QuotedDataParameter.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\QValue.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\QValueParameter.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\RAckCategory.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\RequestLine.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Rlmi.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\RportParameter.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\SdpContents.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ssl\Security.cxx"
+				>
+				<FileConfiguration
+					Name="Debug|Win32"
+					ExcludedFromBuild="true"
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
+				<FileConfiguration
+					Name="Release|Win32"
+					ExcludedFromBuild="true"
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
+			</File>
+			<File
+				RelativePath=".\SecurityAttributes.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\SERNonceHelper.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\SipFrag.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\SipMessage.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\SipStack.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\StackThread.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\StatelessHandler.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\StatisticsHandler.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\StatisticsManager.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\StatisticsMessage.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\StatusLine.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\StringCategory.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Symbols.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\TcpBaseTransport.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\TcpConnection.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\TcpTransport.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\TimeAccumulate.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\TimerMessage.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\TimerQueue.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ssl\TlsConnection.cxx"
+				>
+				<FileConfiguration
+					Name="Debug|Win32"
+					ExcludedFromBuild="true"
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
+				<FileConfiguration
+					Name="Release|Win32"
+					ExcludedFromBuild="true"
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
+			</File>
+			<File
+				RelativePath=".\ssl\TlsTransport.cxx"
+				>
+				<FileConfiguration
+					Name="Debug|Win32"
+					ExcludedFromBuild="true"
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
+				<FileConfiguration
+					Name="Release|Win32"
+					ExcludedFromBuild="true"
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
+			</File>
+			<File
+				RelativePath=".\Token.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\TransactionController.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\TransactionMap.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\TransactionState.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\TransactionUser.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\TransactionUserMessage.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Transport.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\TransportFailure.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\TransportSelector.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\TransportThread.cxx"
+				>
+			</File>			
+			<File
+				RelativePath=".\TuIM.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Tuple.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\TupleMarkManager.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\TuSelector.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\UdpTransport.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\UInt32Category.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\UInt32Parameter.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\UnknownParameter.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Uri.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Via.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\WarningCategory.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ssl\WinSecurity.cxx"
+				>
+				<FileConfiguration
+					Name="Debug|Win32"
+					ExcludedFromBuild="true"
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
+				<FileConfiguration
+					Name="Release|Win32"
+					ExcludedFromBuild="true"
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
+			</File>
+			<File
+				RelativePath=".\X509Contents.cxx"
+				>
+			</File>
+		</Filter>
+		<Filter
+			Name="Header Files"
+			Filter="h;hpp;hxx;hm;inl;inc"
+			>
+			<File
+				RelativePath=".\Aor.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ApiCheck.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ApiCheckList.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ApplicationMessage.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ApplicationSip.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Auth.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\BasicNonceHelper.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\BranchParameter.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\CallId.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\CancelableTimerQueue.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Compression.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Connection.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ConnectionBase.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ConnectionManager.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Contents.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ContentsFactory.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ContentsFactoryBase.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\CpimContents.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\CSeqCategory.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\DataParameter.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\DateCategory.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\DeprecatedDialog.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\DnsInterface.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\DnsResult.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\DnsResultMessage.hxx"
+				>
+			</File>						
+			<File
+				RelativePath=".\DtlsMessage.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ssl\DtlsTransport.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Embedded.hxx"
+				>
+			</File>
+			<File
 				RelativePath=".\EventStackThread.hxx"
 				>
 			</File>
 			<File
-				RelativePath=".\ExistsOrDataParameter.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ExistsParameter.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ExpiresCategory.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ExtensionHeader.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ExtensionParameter.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ExternalBodyContents.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\GenericContents.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\GenericUri.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\HeaderFieldValue.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\HeaderFieldValueList.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\HeaderHash.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Headers.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\HeaderTypes.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Helper.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\IntegerCategory.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\IntegerParameter.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\InternalTransport.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\InteropHelper.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\InterruptableStackThread.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\InvalidContents.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\KeepAliveMessage.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\LazyParser.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\MarkListener.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Message.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\MessageFilterRule.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\MessageWaitingContents.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\MethodHash.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\MethodTypes.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Mime.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\MsgHeaderScanner.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\MultipartAlternativeContents.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\MultipartMixedContents.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\MultipartRelatedContents.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\MultipartSignedContents.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\NameAddr.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\NonceHelper.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\OctetContents.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Parameter.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ParameterHash.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ParameterTypeEnums.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ParameterTypes.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ParserCategories.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ParserCategory.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ParserContainer.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ParserContainerBase.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Pidf.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Pkcs7Contents.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Pkcs8Contents.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\PlainContents.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\PollStatistics.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\PrivacyCategory.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\QuotedDataParameter.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\QValue.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\QValueParameter.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\RAckCategory.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\RequestLine.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Rlmi.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\RportParameter.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\SdpContents.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ssl\Security.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\SecurityAttributes.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\SecurityTypes.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\SendData.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\SERNonceHelper.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ShutdownMessage.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\SipFrag.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\SipMessage.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\SipStack.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\StackThread.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\StartLine.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\StatelessHandler.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\StatisticsHandler.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\StatisticsManager.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\StatisticsMessage.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\StatusLine.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\StringCategory.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Symbols.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\TcpBaseTransport.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\TcpConnection.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\TcpTransport.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\TextParameter.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\TimeAccumulate.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\TimerMessage.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\TimerQueue.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ssl\TlsConnection.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ssl\TlsTransport.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Token.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\TransactionController.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\TransactionControllerThread.hxx"
-				>
-			</File>			
-			<File
-				RelativePath=".\TransactionMap.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\TransactionMessage.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\TransactionState.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\TransactionTerminated.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\TransactionUser.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\TransactionUserMessage.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Transport.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\TransportFailure.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\TransportSelector.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\TransportSelectorThread.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\TransportThread.hxx"
-				>
-			</File>			
-			<File
-				RelativePath=".\TuIM.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Tuple.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\TupleMarkManager.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\TuSelector.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\UdpTransport.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\UInt32Category.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\UInt32Parameter.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\UnknownHeaderType.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\UnknownParameter.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\UnknownParameterType.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Uri.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ValueFifo.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\Via.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\WarningCategory.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ssl\WinSecurity.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\X509Contents.hxx"
-				>
-			</File>
-			<File
-				RelativePath=".\ZeroOutStatistics.hxx"
-				>
-			</File>
-		</Filter>
-		<Filter
-			Name="GPerfFiles"
-			>
-			<File
-				RelativePath=".\HeaderHash.gperf"
-				>
-			</File>
-			<File
-				RelativePath=".\MethodHash.gperf"
-				>
-			</File>
-			<File
-				RelativePath=".\ParameterHash.gperf"
-				>
-			</File>
-		</Filter>
-	</Files>
-	<Globals>
-	</Globals>
-</VisualStudioProject>
+				RelativePath=".\ExistsOrDataParameter.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ExistsParameter.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ExpiresCategory.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ExtensionHeader.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ExtensionParameter.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ExternalBodyContents.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\GenericContents.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\GenericUri.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\HeaderFieldValue.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\HeaderFieldValueList.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\HeaderHash.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Headers.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\HeaderTypes.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Helper.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\IntegerCategory.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\IntegerParameter.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\InternalTransport.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\InteropHelper.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\InterruptableStackThread.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\InvalidContents.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\KeepAliveMessage.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\LazyParser.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\MarkListener.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Message.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\MessageFilterRule.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\MessageWaitingContents.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\MethodHash.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\MethodTypes.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Mime.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\MsgHeaderScanner.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\MultipartAlternativeContents.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\MultipartMixedContents.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\MultipartRelatedContents.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\MultipartSignedContents.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\NameAddr.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\NonceHelper.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\OctetContents.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Parameter.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ParameterHash.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ParameterTypeEnums.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ParameterTypes.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ParserCategories.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ParserCategory.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ParserContainer.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ParserContainerBase.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Pidf.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Pkcs7Contents.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Pkcs8Contents.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\PlainContents.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\PollStatistics.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\PrivacyCategory.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\QuotedDataParameter.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\QValue.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\QValueParameter.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\RAckCategory.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\RequestLine.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Rlmi.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\RportParameter.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\SdpContents.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ssl\Security.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\SecurityAttributes.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\SecurityTypes.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\SendData.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\SERNonceHelper.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ShutdownMessage.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\SipFrag.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\SipMessage.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\SipStack.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\StackThread.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\StartLine.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\StatelessHandler.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\StatisticsHandler.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\StatisticsManager.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\StatisticsMessage.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\StatusLine.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\StringCategory.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Symbols.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\TcpBaseTransport.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\TcpConnection.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\TcpTransport.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\TextParameter.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\TimeAccumulate.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\TimerMessage.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\TimerQueue.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ssl\TlsConnection.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ssl\TlsTransport.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Token.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\TransactionController.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\TransactionControllerThread.hxx"
+				>
+			</File>			
+			<File
+				RelativePath=".\TransactionMap.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\TransactionMessage.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\TransactionState.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\TransactionTerminated.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\TransactionUser.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\TransactionUserMessage.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Transport.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\TransportFailure.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\TransportSelector.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\TransportSelectorThread.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\TransportThread.hxx"
+				>
+			</File>			
+			<File
+				RelativePath=".\TuIM.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Tuple.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\TupleMarkManager.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\TuSelector.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\UdpTransport.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\UInt32Category.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\UInt32Parameter.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\UnknownHeaderType.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\UnknownParameter.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\UnknownParameterType.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Uri.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ValueFifo.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\Via.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\WarningCategory.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ssl\WinSecurity.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\X509Contents.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\ZeroOutStatistics.hxx"
+				>
+			</File>
+		</Filter>
+		<Filter
+			Name="GPerfFiles"
+			>
+			<File
+				RelativePath=".\HeaderHash.gperf"
+				>
+			</File>
+			<File
+				RelativePath=".\MethodHash.gperf"
+				>
+			</File>
+			<File
+				RelativePath=".\ParameterHash.gperf"
+				>
+			</File>
+		</Filter>
+	</Files>
+	<Globals>
+	</Globals>
+</VisualStudioProject>
Index: resip/stack/resiprocate_9_0.vcproj
===================================================================
--- resip/stack/resiprocate_9_0.vcproj	(revision 9737)
+++ resip/stack/resiprocate_9_0.vcproj	(working copy)
@@ -44,8 +44,8 @@
 				Name="VCCLCompilerTool"
 				AdditionalOptions="/Zm300 /MP"
 				Optimization="0"
-				AdditionalIncludeDirectories="&quot;$(ProjectDir)../../contrib/ares&quot;;&quot;$(ProjectDir)../&quot;;&quot;$(ProjectDir)../../&quot;"
-				PreprocessorDefinitions="WIN32;_DEBUG;_LIB;USE_ARES;USE_IPV6;LEAK_CHECK"
+				AdditionalIncludeDirectories="&quot;$(ProjectDir)../../contrib/ares&quot;;&quot;$(ProjectDir)../&quot;;&quot;$(ProjectDir)../../&quot;;C:\Projects\doubango\branches\2.0\doubango\thirdparties\win32\include"
+				PreprocessorDefinitions="WIN32;_DEBUG;_LIB;USE_ARES;USE_IPV6;USE_SSL;LEAK_CHECK"
 				MinimalRebuild="false"
 				BasicRuntimeChecks="3"
 				RuntimeLibrary="3"
@@ -393,14 +393,6 @@
 				RelativePath=".\ssl\DtlsTransport.cxx"
 				>
 				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
 					>
@@ -641,14 +633,6 @@
 				RelativePath=".\ssl\Security.cxx"
 				>
 				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
 					>
@@ -737,14 +721,6 @@
 				RelativePath=".\ssl\TlsConnection.cxx"
 				>
 				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
 					>
@@ -757,14 +733,6 @@
 				RelativePath=".\ssl\TlsTransport.cxx"
 				>
 				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
 					>
@@ -861,14 +829,6 @@
 				RelativePath=".\ssl\WinSecurity.cxx"
 				>
 				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
 					>
@@ -878,6 +838,14 @@
 				</FileConfiguration>
 			</File>
 			<File
+				RelativePath=".\WsDecorator.cxx"
+				>
+			</File>
+			<File
+				RelativePath=".\WsTransport.cxx"
+				>
+			</File>
+			<File
 				RelativePath=".\X509Contents.cxx"
 				>
 			</File>
@@ -1479,6 +1447,14 @@
 				>
 			</File>
 			<File
+				RelativePath=".\WsDecorator.hxx"
+				>
+			</File>
+			<File
+				RelativePath=".\WsTransport.hxx"
+				>
+			</File>
+			<File
 				RelativePath=".\X509Contents.hxx"
 				>
 			</File>
Index: rutil/TransportType.cxx
===================================================================
--- rutil/TransportType.cxx	(revision 9737)
+++ rutil/TransportType.cxx	(working copy)
@@ -12,7 +12,8 @@
    Data("UDP"),
    Data("SCTP"),
    Data("DCCP"),
-   Data("DTLS")
+   Data("DTLS"),
+   Data("WS")
 };
 
 static const Data transportNamesLower[MAX_TRANSPORT] =
@@ -23,7 +24,8 @@
    Data("udp"),
    Data("sctp"),
    Data("dccp"),
-   Data("dtls")
+   Data("dtls"),
+   Data("WS")
 };
 
 TransportType 
@@ -80,6 +82,7 @@
       case TLS:
       case TCP:
       case SCTP:
+	  case WS:
          return true;
       case UDP:
       case DCCP:
Index: rutil/TransportType.hxx
===================================================================
--- rutil/TransportType.hxx	(revision 9737)
+++ rutil/TransportType.hxx	(working copy)
@@ -20,6 +20,8 @@
    SCTP,
    DCCP,
    DTLS,
+   WS,
+   WSS,
    MAX_TRANSPORT
 } TransportType;
 
Index: rutil/dns/RRCache.cxx
===================================================================
--- rutil/dns/RRCache.cxx	(revision 9737)
+++ rutil/dns/RRCache.cxx	(working copy)
@@ -28,6 +28,7 @@
 #include <list>
 #include <map>
 #include <cassert>
+#include "rutil/Logger.hxx"
 #include "rutil/BaseException.hxx"
 #include "rutil/Data.hxx"
 #include "rutil/Timer.hxx"
@@ -46,6 +47,8 @@
 using namespace resip;
 using namespace std;
 
+#define RESIPROCATE_SUBSYSTEM resip::Subsystem::DNS
+
 RRCache::RRCache() 
    : mHead(),
      mLruHead(LruListType::makeList(&mHead)),
@@ -96,23 +99,29 @@
 {
    Data domain = (*begin).domain();
    FactoryMap::iterator it = mFactoryMap.find(rrType);
-   assert(it != mFactoryMap.end());
-   RRList* key = new RRList(domain, rrType);         
-   RRSet::iterator lb = mRRSet.lower_bound(key);
-   if (lb != mRRSet.end() &&
-       !(mRRSet.key_comp()(key, *lb)))
-   {
-      (*lb)->update(it->second, begin, end, mUserDefinedTTL);
-      touch(*lb);
+   // FIXME: assert() is raised sometime -> why?
+   //assert(it != mFactoryMap.end());
+   if(it != mFactoryMap.end()){
+	   RRList* key = new RRList(domain, rrType);         
+	   RRSet::iterator lb = mRRSet.lower_bound(key);
+	   if (lb != mRRSet.end() &&
+		   !(mRRSet.key_comp()(key, *lb)))
+	   {
+		  (*lb)->update(it->second, begin, end, mUserDefinedTTL);
+		  touch(*lb);
+	   }
+	   else
+	   {
+		  RRList* val = new RRList(it->second, domain, rrType, begin, end, mUserDefinedTTL);
+		  mRRSet.insert(val);
+		  mLruHead->push_back(val);
+		  purge();
+	   }
+	   delete key;
    }
-   else
-   {
-      RRList* val = new RRList(it->second, domain, rrType, begin, end, mUserDefinedTTL);
-      mRRSet.insert(val);
-      mLruHead->push_back(val);
-      purge();
+   else{
+	   ErrLog( << "it== mFactoryMap.end()" );
    }
-   delete key;
 }
 
 void 
Index: rutil/rutil_9_0.vcproj
===================================================================
--- rutil/rutil_9_0.vcproj	(revision 9737)
+++ rutil/rutil_9_0.vcproj	(working copy)
@@ -43,8 +43,8 @@
 				Name="VCCLCompilerTool"
 				AdditionalOptions="/MP"
 				Optimization="0"
-				AdditionalIncludeDirectories="&quot;$(ProjectDir)dns/ares&quot;;&quot;$(ProjectDir)../&quot;"
-				PreprocessorDefinitions="WIN32;_DEBUG;_LIB;USE_ARES;USE_IPV6;LEAK_CHECK"
+				AdditionalIncludeDirectories="&quot;$(ProjectDir)dns/ares&quot;;&quot;$(ProjectDir)../&quot;;C:\Projects\doubango\branches\2.0\doubango\thirdparties\win32\include"
+				PreprocessorDefinitions="WIN32;_DEBUG;_LIB;USE_SSL;USE_ARES;USE_IPV6;LEAK_CHECK"
 				MinimalRebuild="false"
 				BasicRuntimeChecks="3"
 				RuntimeLibrary="3"
@@ -403,14 +403,6 @@
 				RelativePath=".\ssl\OpenSSLInit.cxx"
 				>
 				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
 					>
@@ -483,14 +475,6 @@
 				RelativePath=".\ssl\SHA1Stream.cxx"
 				>
 				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
 					>
